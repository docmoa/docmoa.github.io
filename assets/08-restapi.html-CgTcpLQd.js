import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as n,c as a,h as e}from"./app-DVMlqOhY.js";const t={},i=e(`<h1 id="_8-rest-api" tabindex="-1"><a class="header-anchor" href="#_8-rest-api"><span>8. REST API</span></a></h1><p>Jenkins는 외부 서비스와의 연동이나 정보 조회를 위한 API를 제공합니다.</p><h2 id="_8-1-triggering-builds-via-the-rest-api" tabindex="-1"><a class="header-anchor" href="#_8-1-triggering-builds-via-the-rest-api"><span>8.1 Triggering builds via the REST API</span></a></h2><p>Jenkins REST API 테스트를 위해서는 Jenkins에 인증 가능한 Token을 취득하고 curl이나 Postman 같은 도구를 사용하여 확인 가능 합니다. 우선 Token을 얻는 방법은 다음과 같습니다.</p><ol><li><p>Jenkins에 로그인 합니다.</p></li><li><p>우측 상단의 로그인 아이디에 마우스를 호버하면 드롭박스 버튼이 나타납니다. <code>설정</code>을 클릭합니다.</p></li><li><p><code>API Token</code>에서 <code>Current token</code>을 확인합니다. 등록된 Token이 없는 경우 다음과 같이 신규 Token을 발급 받습니다.</p><ul><li><p><code>ADD NEW TOKEN</code>을 클릭합니다.</p></li><li><p>이름을 기입하는 칸에 로그인 한 아이디를 등록합니다. (e.g. admin)</p></li><li><p><code>GENERATE</code>를 클릭하여 Token을 생성합니다.</p></li></ul></li><li><p>이름과 Token을 사용하여 다음과 같이 curl로 접속하면 <code>Jenkins-Crumb</code> 프롬프트가 나타납니다.</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">$ <span class="token function">curl</span> <span class="token parameter variable">--user</span> <span class="token string">&quot;admin:TOKEN&quot;</span> <span class="token string">&#39;http://myjenkins.com/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,&quot;:&quot;,//crumb)&#39;</span></span>
<span class="line"></span>
<span class="line">Jenkins-Crumb:89e1fd9c402824c89465f6b97f49b605</span>
<span class="line"></span></code></pre></div></li><li><p><code>Crumb</code>를 확인했으면 다시 헤더 값에 <code>Jenkins-Crumb:</code>를 추가하여 <code>02-04.MultiStep</code> Job을 빌드하기 위해 다음과 같이 요청합니다.</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">$ <span class="token function">curl</span> <span class="token parameter variable">-X</span> POST http://myjenkins.com/job/02-04.MultiStep/build <span class="token parameter variable">--user</span> gyulee:11479bdec9cada082d189938a3946348be --data-urlencode <span class="token assign-left variable">json</span><span class="token operator">=</span><span class="token string">&#39;&#39;</span> <span class="token parameter variable">-H</span> <span class="token string">&quot;Jenkins-Crumb:89e1fd9c402824c89465f6b97f49b605&quot;</span></span>
<span class="line"></span></code></pre></div></li></ol><p>API로 호출된 빌드가 수행되어 빌드 번호가 증가하는 것을 확인합니다.</p><h2 id="_8-2-retriving-build-status-via-the-rest-api" tabindex="-1"><a class="header-anchor" href="#_8-2-retriving-build-status-via-the-rest-api"><span>8.2 Retriving build status via the REST API</span></a></h2><p>빌드에 대한 결과를 REST API를 통해 요청하는 방법을 알아봅니다. 앞서 진행시의 Token값이 필요합니다. Json 형태로 출력되기 때문에 정렬을 위해 python이 설치 되어있다면 <code>mjson.tool</code>을 사용하여 보기 좋은 형태로 출력 가능합니다.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token comment"># Python이 설치되어있지 않은 경우</span></span>
<span class="line">$ yum <span class="token parameter variable">-y</span> <span class="token function">install</span> python2</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Jenkins에 REST API로 마지막 빌드 상태 요청</span></span>
<span class="line">$ <span class="token function">curl</span>  <span class="token parameter variable">-s</span> <span class="token parameter variable">--user</span> gyulee:11479bdec9cada082d189938a3946348be http://myjenkins.com/job/02-04.MultiStep/lastBuild/api/json <span class="token operator">|</span> python2 <span class="token parameter variable">-mjson.tool</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&quot;_class&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;org.jenkinsci.plugins.workflow.job.WorkflowRun&quot;</span>,</span>
<span class="line">    <span class="token string">&quot;actions&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span></span>
<span class="line">        <span class="token punctuation">{</span></span>
<span class="line">            <span class="token string">&quot;_class&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;hudson.model.CauseAction&quot;</span>,</span>
<span class="line">            <span class="token string">&quot;causes&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span></span>
<span class="line">                <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token string">&quot;_class&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;hudson.model.Cause<span class="token variable">$UserIdCause</span>&quot;</span>,</span>
<span class="line">                    <span class="token string">&quot;shortDescription&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;Started by user GyuSeok.Lee&quot;</span>,</span>
<span class="line">                    <span class="token string">&quot;userId&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;gyulee&quot;</span>,</span>
<span class="line">                    <span class="token string">&quot;userName&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;GyuSeok.Lee&quot;</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">]</span></span>
<span class="line">        <span class="token punctuation">}</span>,</span>
<span class="line">        <span class="token punctuation">{</span><span class="token punctuation">}</span>,</span>
<span class="line">        <span class="token punctuation">{</span></span>
<span class="line">            <span class="token string">&quot;_class&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;hudson.plugins.git.util.BuildData&quot;</span>,</span>
<span class="line">            <span class="token string">&quot;buildsByBranchName&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token string">&quot;master&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token string">&quot;_class&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;hudson.plugins.git.util.Build&quot;</span>,</span>
<span class="line">                    <span class="token string">&quot;buildNumber&quot;</span><span class="token builtin class-name">:</span> <span class="token number">5</span>,</span>
<span class="line">                    <span class="token string">&quot;buildResult&quot;</span><span class="token builtin class-name">:</span> null,</span>
<span class="line"><span class="token punctuation">..</span>.</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),l=[i];function p(c,o){return n(),a("div",null,l)}const d=s(t,[["render",p],["__file","08-restapi.html.vue"]]),m=JSON.parse(`{"path":"/05-Software/Jenkins/pipeline101/08-restapi.html","title":"8. REST API","lang":"ko-KR","frontmatter":{"description":"jenkins 101","tag":["cicd","jenkins"],"head":[["meta",{"property":"og:url","content":"https://docmoa.github.io/05-Software/Jenkins/pipeline101/08-restapi.html"}],["meta",{"property":"og:site_name","content":"docmoa"}],["meta",{"property":"og:title","content":"8. REST API"}],["meta",{"property":"og:description","content":"jenkins 101"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2023-09-18T13:12:54.000Z"}],["meta",{"property":"article:tag","content":"cicd"}],["meta",{"property":"article:tag","content":"jenkins"}],["meta",{"property":"article:modified_time","content":"2023-09-18T13:12:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"8. REST API\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-18T13:12:54.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"8.1 Triggering builds via the REST API","slug":"_8-1-triggering-builds-via-the-rest-api","link":"#_8-1-triggering-builds-via-the-rest-api","children":[]},{"level":2,"title":"8.2 Retriving build status via the REST API","slug":"_8-2-retriving-build-status-via-the-rest-api","link":"#_8-2-retriving-build-status-via-the-rest-api","children":[]}],"git":{"createdTime":1640327880000,"updatedTime":1695042774000,"contributors":[{"name":"Administrator","email":"admin@example.com","commits":1},{"name":"Great-Stone","email":"hahohh@gmail.com","commits":1}]},"readingTime":{"minutes":2.77,"words":166},"filePathRelative":"05-Software/Jenkins/pipeline101/08-restapi.md","localizedDate":"2021년 12월 24일","excerpt":"\\n<p>Jenkins는 외부 서비스와의 연동이나 정보 조회를 위한 API를 제공합니다.</p>\\n<h2>8.1 Triggering builds via the REST API</h2>\\n<p>Jenkins REST API 테스트를 위해서는 Jenkins에 인증 가능한 Token을 취득하고 curl이나 Postman 같은 도구를 사용하여 확인 가능 합니다. 우선 Token을 얻는 방법은 다음과 같습니다.</p>\\n<ol>\\n<li>\\n<p>Jenkins에 로그인 합니다.</p>\\n</li>\\n<li>\\n<p>우측 상단의 로그인 아이디에 마우스를 호버하면 드롭박스 버튼이 나타납니다. <code>설정</code>을 클릭합니다.</p>\\n</li>\\n<li>\\n<p><code>API Token</code>에서 <code>Current token</code>을 확인합니다. 등록된 Token이 없는 경우 다음과 같이 신규 Token을 발급 받습니다.</p>\\n<ul>\\n<li>\\n<p><code>ADD NEW TOKEN</code>을 클릭합니다.</p>\\n</li>\\n<li>\\n<p>이름을 기입하는 칸에 로그인 한 아이디를 등록합니다. (e.g. admin)</p>\\n</li>\\n<li>\\n<p><code>GENERATE</code>를 클릭하여 Token을 생성합니다.</p>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<p>이름과 Token을 사용하여 다음과 같이 curl로 접속하면 <code>Jenkins-Crumb</code> 프롬프트가 나타납니다.</p>\\n<div class=\\"language-bash\\" data-highlighter=\\"prismjs\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"line\\">$ <span class=\\"token function\\">curl</span> <span class=\\"token parameter variable\\">--user</span> <span class=\\"token string\\">\\"admin:TOKEN\\"</span> <span class=\\"token string\\">'http://myjenkins.com/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,\\":\\",//crumb)'</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\">Jenkins-Crumb:89e1fd9c402824c89465f6b97f49b605</span>\\n<span class=\\"line\\"></span></code></pre></div></li>\\n<li>\\n<p><code>Crumb</code>를 확인했으면 다시 헤더 값에 <code>Jenkins-Crumb:</code>를 추가하여 <code>02-04.MultiStep</code> Job을 빌드하기 위해 다음과 같이 요청합니다.</p>\\n<div class=\\"language-bash\\" data-highlighter=\\"prismjs\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"line\\">$ <span class=\\"token function\\">curl</span> <span class=\\"token parameter variable\\">-X</span> POST http://myjenkins.com/job/02-04.MultiStep/build <span class=\\"token parameter variable\\">--user</span> gyulee:11479bdec9cada082d189938a3946348be --data-urlencode <span class=\\"token assign-left variable\\">json</span><span class=\\"token operator\\">=</span><span class=\\"token string\\">''</span> <span class=\\"token parameter variable\\">-H</span> <span class=\\"token string\\">\\"Jenkins-Crumb:89e1fd9c402824c89465f6b97f49b605\\"</span></span>\\n<span class=\\"line\\"></span></code></pre></div></li>\\n</ol>"}`);export{d as comp,m as data};
