import{_ as e,a as t,b as n,c as l,d as s,e as i,f as a}from"./1564543591394-BKf8t37i.js";import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o,c as r,h as c}from"./app-DVMlqOhY.js";const p={},u=c(`<h1 id="_9-security" tabindex="-1"><a class="header-anchor" href="#_9-security"><span>9. Security</span></a></h1><h2 id="_9-1-securing-your-deployment-with-users" tabindex="-1"><a class="header-anchor" href="#_9-1-securing-your-deployment-with-users"><span>9.1 Securing your deployment with users</span></a></h2><p>사용자별 배포수행을 위한 사용자 설정을 설명합니다.</p><ul><li><code>Jenkins 관리</code>로 이동하여 <code>Configure Global Security</code>를 클릭합니다.</li></ul><p><code>Enable security</code>는 보안 설정 여부를 설정하는 항목으로 기본적으로는 비활성화되어있습니다. 체크하여 활성화하면 다양한 보안 옵션을 설정할 수 있는 항목이 표기 됩니다.</p><ul><li>Disable remember me : 로그인 시 사용자를 기억할지의 여부를 묻는 체크박스에 대한 활성/비활성 설정입니다.</li></ul><p>Security Realm 에서는 Jenkins에서 사용하는 사용자 관리 방식을 선택합니다.</p><ul><li>Delegate to servlet container : Jenkins를 실행하는 서블릿 컨테이너에서 접근을 관리합니다.</li><li>Jenkins&#39; own user database : 기본 설정입니다. Jenkins 자체적으로 사용자 데이터를 관리합니다. <code>사용자의 가입 허용</code>이 활성화되면 Jenkins 에 접속하는 사용자는 스스로 계정을 생성하고 접근 가능합니다.</li><li>LDAP : 외부 LDAP과 연동하여 사용자를 관리합니다. LDAP 으로 계정을 통합 관리하는 경우 유용합니다.</li><li>Unix user/group database : Unix/Linux에서 해당 호스트의 사용자를 관리를 기반으로 연동합니다.</li></ul><p>Authorization 에서는 사용자 권한에 대한 설정을 정의합니다.</p><ul><li>Anyone can do anything : Jenkins에 접근할 수 있는 모든 요청을 허용합니다.</li><li>Legacy mode : <code>1.164</code>이전 버전의 동작과 동일하게 관리됩니다. <code>Admin</code>사용자만 모든 기능을 수행하며, 일반 사용자와 비로그인 사용자는 읽기만 가능합니다.</li><li>Logged-in users can do anything : 로그인만 되면 모든 기능을 수행할 수 있는 설정압니다.</li><li>Matrix-based security : 매트릭스 기반으로 각 기능을 사용자와 그룹별로 조절할 수 있습니다.</li><li>Project-based Matrix Authorization Strategy : 매트릭스 기반 권한설정의 확장으로, 개별 프로젝트 별로 권한을 조정할 수 있습니다.</li></ul><p>다음은 권한 매트릭스의 항목과 권한별 설명입니다.</p><table><thead><tr><th style="text-align:left;">항목</th><th style="text-align:left;">권한</th><th style="text-align:left;">의미</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>Overall</strong></td><td style="text-align:left;">Administer</td><td style="text-align:left;">시스템의 전역 설정을 변경할 수 있다. OS 에서 허용된 범위안에서 전체 시스템 엑세스드의 매우 민감한 설정을 수행</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">Read</td><td style="text-align:left;">젠킨스의 모든 페이지 확인 가능</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">RunScripts</td><td style="text-align:left;">그루비 콘솔이나 그루비 CLI 명령을 통해 그루비 스크립트를 실행</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">UploadPlugins</td><td style="text-align:left;">특정 플러그인을 업로드</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">ConfigureUpdateCenter</td><td style="text-align:left;">업데이트 사이트와 프록시 설정</td></tr><tr><td style="text-align:left;"><strong>Slave</strong></td><td style="text-align:left;">Configure</td><td style="text-align:left;">기존 슬레이브 설정 가능</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">Delete</td><td style="text-align:left;">기존 슬레이브 삭제</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">Create</td><td style="text-align:left;">신규 슬레이브 생성</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">Disconnect</td><td style="text-align:left;">슬레이브 연결을 끊거나 슬레이브를 임시로 오프라인으로 표시</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">Connect</td><td style="text-align:left;">슬레이브와 연결하거나 슬레이브를 온라인으로 표시</td></tr><tr><td style="text-align:left;"><strong>Job</strong></td><td style="text-align:left;">Create</td><td style="text-align:left;">새로운 작업 생성</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">Delete</td><td style="text-align:left;">기존 작업 삭제</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">Configure</td><td style="text-align:left;">기존 작업의 설정 갱신</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">Read</td><td style="text-align:left;">프로젝트 설정에 읽기 전용 권한 부여</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">Discover</td><td style="text-align:left;">익명 사용자가 작업을 볼 권한이 없으면 에러 메시지 표시를 하지 않고 로그인 폼으로 전환</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">Build</td><td style="text-align:left;">새로운 빌드 시작</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">Workspace</td><td style="text-align:left;">젠킨스 빌드를 실행 하기 위해 체크아웃 한 작업 영역의 내용을 가져오기 가능</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">Cancel</td><td style="text-align:left;">실행중인 빌드 취소</td></tr><tr><td style="text-align:left;"><strong>Run</strong></td><td style="text-align:left;">Delete</td><td style="text-align:left;">빌드 내역에서 특정 빌드 삭제</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">Update</td><td style="text-align:left;">빌드의 설명과 기타 프로퍼티 수정(빌드 실패 사유등)</td></tr><tr><td style="text-align:left;"><strong>View</strong></td><td style="text-align:left;">Create</td><td style="text-align:left;">새로운 뷰 생성</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">Delete</td><td style="text-align:left;">기존 뷰 삭제</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">Configure</td><td style="text-align:left;">기존 뷰 설정 갱신</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">Read</td><td style="text-align:left;">기존 뷰 보기</td></tr><tr><td style="text-align:left;"><strong>SCM</strong></td><td style="text-align:left;">Tag</td><td style="text-align:left;">특정 빌드와 관련된 소스 관리 시스템에 태깅을 생성</td></tr></tbody></table><p>CSRF Protection 항목에 있는 <code>Prevent Cross Site Request Forgery exploits</code> 항목은 페이지마다 nonce 또는 crumb 이라 불리우는 임시 값을 삽입하여 사이트 간 요청 위조 공격을 막을 수 있게 해줍니다. 사용방법은 위에서 REST API 에 대한 설명 시 crumb 값을 얻고, 사용하는 방법을 참고합니다.</p><h2 id="_9-2-securing-secret-credentials-and-files" tabindex="-1"><a class="header-anchor" href="#_9-2-securing-secret-credentials-and-files"><span>9.2 Securing secret credentials and files</span></a></h2><p>Jenkins에서 Pipeline을 설정하는 경우 일부 보안적인 값이 필요한 경우가 있습니다. 예를 들면 <code>Username</code>과 <code>Password</code> 같은 값입니다. 앞서의 과정에서 <code>Credentials</code>를 생성하는 작업을 일부 수행해 보았습니다. 여기서는 생성된 인증 값을 Pipeline에 적용하는 방법을 설명합니다.</p><p><code>Pipeline</code> 타입의 Item을 추가로 생성합니다. (e.g. 09-02.SecuringSecretCredentialsAndFiles) 설정은 다음과 같이 수행합니다.</p><ol><li><p><code>Pipeline</code> 스크립트에 다음과 같이 입력 합니다.</p><div class="language-groovy line-numbers-mode" data-highlighter="prismjs" data-ext="groovy" data-title="groovy"><pre class="language-groovy"><code><span class="line">pipeline <span class="token punctuation">{</span></span>
<span class="line">    agent any</span>
<span class="line">    environment <span class="token punctuation">{</span></span>
<span class="line">       SECRET<span class="token operator">=</span><span class="token function">credentials</span><span class="token punctuation">(</span><span class="token string">&#39;jenkins-secret-text&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    stages <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">stage</span><span class="token punctuation">(</span><span class="token string">&#39;Build&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            steps <span class="token punctuation">{</span></span>
<span class="line">                echo <span class="token interpolation-string"><span class="token string">&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression">env<span class="token punctuation">.</span>SECRET</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span></span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>저장 후 <code>Build Now</code>를 클릭하여 빌드를 수행하면 실패하게 되고 <code>Console Output</code>에서 진행사항을 보면, Pipeline 스크립트에서 선언한 <code>jenkins-secret-text</code>때문에 에러가 발생한 것을 확인할 수 있습니다.</p></li><li><p>좌측 상단의 <code>Jenkins</code>버튼을 클릭하여 최상위 메뉴로 이동합니다.</p></li><li><p>좌측 메뉴의 <code>Credentials</code>를 클릭하고 <code>(global)</code> 도메인을 클릭합니다.</p><figure><img src="`+e+`" alt="1564534571013" tabindex="0" loading="lazy"><figcaption>1564534571013</figcaption></figure></li><li><p>좌측에 <code>Add Credentials</code>를 클릭하여 새로운 항목을 추가합니다.</p><ul><li>Kind : Secret text</li><li>Secret : 해당 Credential에 담을 값을 기입합니다. (e.g. This is credential text.)</li><li>ID : jenkins-secret-text</li></ul></li><li><p>저장 후 다시 빌드를 수행하면 정상적으로 수행됩니다. 해당 값은 숨기기 위한 값이므로 Pipeline 스크립트에서 <code>echo</code>로 호출하더라도 <code>****</code>이란 값으로 표기 됩니다.</p></li></ol><p>이같은 방법은 Password같은 보안에 민감한 정보를 사용하기에 유용합니다.</p><h2 id="_9-3-auditing-your-environment" tabindex="-1"><a class="header-anchor" href="#_9-3-auditing-your-environment"><span>9.3 Auditing your environment</span></a></h2><p>Jenkins의 변화와 활동에 대한 감시를 위한 설정 방법을 설명합니다. Jenkins에 새로운 플러그인을 추가하고 설정합니다.</p><ul><li><code>Jenkins 관리</code>로 이동하여 <code>플러그인 관리</code>를 클릭합니다.</li><li><code>설치 가능</code> 탭을 클릭하고 상단의 검색에 <code>audit</code>를 입력하면 <code>Audit Trail</code>플러그인이 나타납니다. 선택하여 설치합니다.</li><li><code>Jenkins 관리</code>로 이동하여 <code>시스템 설정</code>을 클릭합니다.</li><li>Audit Trail 항목이 추가되었습니다. Loggers의 <code>ADD LOGGER</code>드롭박스에서 <code>Log File</code>을 선택하여 설정합니다. <ul><li>Log Location : /var/jenkins_home/audit/audit.log</li><li>Log File Size MB : 100MB</li><li>Log File Count : 5</li></ul></li></ul><p>저장 후 빌드나 Job의 설정 변경등의 작업을 수행하면, <code>audit.log.0</code>으로 지정된 파일 경로에 생성됨을 확인 할 수 있습니다.</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">$ <span class="token function">tail</span> <span class="token parameter variable">-f</span> ./audit.log.0</span>
<span class="line">Jul <span class="token number">31</span>, <span class="token number">2019</span> <span class="token number">10</span>:47:32,727 AM job/02-02.Jobs/ <span class="token comment">#12 Started by user GyuSeok.Lee</span></span>
<span class="line">Jul <span class="token number">31</span>, <span class="token number">2019</span> <span class="token number">10</span>:47:42,738 AM /job/03-04.WebhookBuild Triggering/configSubmit by gyulee</span>
<span class="line">Jul <span class="token number">31</span>, <span class="token number">2019</span> <span class="token number">10</span>:48:09,001 AM /configSubmit by gyulee</span>
<span class="line"></span></code></pre></div><h2 id="_9-4-using-forders-to-create-security-realms" tabindex="-1"><a class="header-anchor" href="#_9-4-using-forders-to-create-security-realms"><span>9.4 Using forders to create security realms</span></a></h2><p>다양한 프로젝트를 관리하는 경우 관리상, 빌드 프로젝트를 관리해야할 필요성이 발생합니다. Jenkins에서 Forder 아이템을 생성하여 관리 편의성과 보안요소를 추가할 수 있습니다.</p><p>우선 테스트를 위한 사용자를 추가합니다.</p><ul><li>좌측 메뉴에서 <code>Jenkins 관리</code>를 클릭하여 <code>Manage Users</code>로 이동합니다.</li><li><code>사용자 생성</code>을 클릭하여 새로운 사용자를 추가합니다. <ul><li>계정명 : test</li><li>암호 : test</li><li>암호 확인 : test</li><li>이름 : tester</li><li>이메일 주소 : <a href="mailto:test@redhat.com" target="_blank" rel="noopener noreferrer">test@redhat.com</a></li></ul></li></ul><p>다음으로 Forder 타임의 Item을 추가합니다.</p><ul><li>좌측 메뉴에서 <code>새로운 Item</code>을 클릭하여 이름을 <code>02-Project</code>로 예를 들어 지정하고, Forder를 클릭하여 <code>OK</code>버튼을 클릭합니다.<br><img src="`+t+'" alt="1564537956019" loading="lazy"></li><li>설정 페이지가 나오면 <code>SAVE</code>버튼을 클릭하고 좌측 상단의 <code>Jenkins</code> 버튼을 클릭하여 최상위 페이지로 이동합니다.</li><li>기존 프로젝트를 새로 생성한 Forder 타입으로 이동시켜 봅니다. 최상위 화면에서 <code>02-02.Jobs</code>에 마우스를 대면 드롭박스 메뉴를 확장할 수 있습니다. <code>Move</code>를 클릭합니다.<br><img src="'+n+'" alt="1564538201169" loading="lazy"></li><li>드롭박스에서 <code>Jenkins &gt;&gt; 02-Project</code>를 선택하고 <code>MOVE</code>버튼을 클릭합니다. 다시 최상위 메뉴로 오면 <code>02-02.Jobs</code>가 사라진 것을 확인할 수 있습니다. <code>02</code> 로 시작하는 다은 프로젝트도 같은 작업을 수행하여 이동시킵니다.</li><li><code>02-Project</code>를 클릭하면 이동된 프로젝트들이 나타납니다.<br><img src="'+l+'" alt="1564538419183" loading="lazy"></li></ul><p>권한 설정을 하여 현재 Admin 권한의 사용자는 접근 가능하고 새로 생성한 tester는 접근불가하도록 설정합니다.</p><ul><li><p>Folder에 접근하는 권한을 설정하기위해 <code>Jenkins 관리</code>의 <code>Configure Global Security</code>로 이동합니다.</p></li><li><p>Authorization항목의 <code>Project-based Matrix Authorization Strategy</code>를 선택합니다.</p></li><li><p><code>ADD USER OR GROUP...</code>을 클릭하여 Admin 권한의 사용자를 추가합니다.</p></li><li><p>Admin 권한의 사용자에게는 모든 권한을 주고 <code>Authenticated Users</code>에는 Overall의 <code>Read</code> 권한만 부여합니다.<br><img src="'+s+'" alt="1564543546039" loading="lazy"></p></li><li><p>생성한 <code>02-Project</code>로 이동하여 좌측 메뉴의 <code>Configure</code>를 클릭합니다.</p></li><li><p>Properties에 추가된 <code>Enable project-based security</code>를 확성화하면 항목별 권한 관리 메트릭스가 표시됩니다. Job의 Build, Read, ViewStatus, Workspace를 클릭하고 View의 Read를 클릭하여 권한을 부여합니다.</p><figure><img src="'+i+'" alt="1564540010695" tabindex="0" loading="lazy"><figcaption>1564540010695</figcaption></figure></li><li><p>로그아웃 후에 앞서 추가한 <code>test</code>사용자로 로그인 하면 기본적으로 다른 프로젝트나 Item들은 권한이 없기 때문에 보이지 않고, 앞서 설정한 <code>02-Project</code> 폴더만 리스트에 나타납니다.<br><img src="'+a+'" alt="1564543591394" loading="lazy"></p></li></ul><p>Jenkins의 인증 기능을 사용하여 보안적 요소를 구성할 수 있습니다. Audit 로그를 활용하여 사용자별 활동을 기록할 수도 있고 Folder를 활용하면 간단히 사용자/그룹에 프로젝트를 구분하여 사용할 수 있도록 구성할 수 있습니다.</p>',32),g=[u];function y(m,f){return o(),r("div",null,g)}const b=d(p,[["render",y],["__file","09-security.html.vue"]]),v=JSON.parse('{"path":"/05-Software/Jenkins/pipeline101/09-security.html","title":"9. Security","lang":"ko-KR","frontmatter":{"description":"jenkins 101","tag":["cicd","jenkins"],"head":[["meta",{"property":"og:url","content":"https://docmoa.github.io/05-Software/Jenkins/pipeline101/09-security.html"}],["meta",{"property":"og:site_name","content":"docmoa"}],["meta",{"property":"og:title","content":"9. Security"}],["meta",{"property":"og:description","content":"jenkins 101"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2023-09-18T13:12:54.000Z"}],["meta",{"property":"article:tag","content":"cicd"}],["meta",{"property":"article:tag","content":"jenkins"}],["meta",{"property":"article:modified_time","content":"2023-09-18T13:12:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"9. Security\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-18T13:12:54.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"9.1 Securing your deployment with users","slug":"_9-1-securing-your-deployment-with-users","link":"#_9-1-securing-your-deployment-with-users","children":[]},{"level":2,"title":"9.2 Securing secret credentials and files","slug":"_9-2-securing-secret-credentials-and-files","link":"#_9-2-securing-secret-credentials-and-files","children":[]},{"level":2,"title":"9.3 Auditing your environment","slug":"_9-3-auditing-your-environment","link":"#_9-3-auditing-your-environment","children":[]},{"level":2,"title":"9.4 Using forders to create security realms","slug":"_9-4-using-forders-to-create-security-realms","link":"#_9-4-using-forders-to-create-security-realms","children":[]}],"git":{"createdTime":1640327880000,"updatedTime":1695042774000,"contributors":[{"name":"Administrator","email":"admin@example.com","commits":1},{"name":"Great-Stone","email":"hahohh@gmail.com","commits":1}]},"readingTime":{"minutes":7.22,"words":433},"filePathRelative":"05-Software/Jenkins/pipeline101/09-security.md","localizedDate":"2021년 12월 24일","excerpt":"\\n<h2>9.1 Securing your deployment with users</h2>\\n<p>사용자별 배포수행을 위한 사용자 설정을 설명합니다.</p>\\n<ul>\\n<li><code>Jenkins 관리</code>로 이동하여 <code>Configure Global Security</code>를 클릭합니다.</li>\\n</ul>\\n<p><code>Enable security</code>는 보안 설정 여부를 설정하는 항목으로 기본적으로는 비활성화되어있습니다. 체크하여 활성화하면 다양한 보안 옵션을 설정할 수 있는 항목이 표기 됩니다.</p>"}');export{b as comp,v as data};
