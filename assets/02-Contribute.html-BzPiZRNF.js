import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as c,o as d,c as u,b as s,w as a,a as t,g as e,h as l}from"./app-DVMlqOhY.js";const g="/assets/github-fork-BUciMNP3.png",m="/assets/github-fork-target-BaBEXIw-.png",h="/assets/github-ui-fetch-DnhnUzWp.png",b="/assets/github-ui-editor-zFm2B-of.png",_="/assets/github-ui-contribute-QYbEiEDl.png",k="/assets/github-ui-create-pr-CBzZgSS0.png",f="/assets/github-ui-create-pr-detail-_QdZwIti.png",v={},C=l('<h1 id="contribute" tabindex="-1"><a class="header-anchor" href="#contribute"><span>Contribute</span></a></h1><p>docmoa에 문서 기여하기위한 가이드를 설명합니다. 일반적인 github 상에서의 코드 기여 방식과 동일합니다.</p><h2 id="git-설치-option" tabindex="-1"><a class="header-anchor" href="#git-설치-option"><span>git 설치(Option)</span></a></h2><p>로컬 환경에서 git 명령을 수행하기 위해 설치합니다. github 브라우저 환경에서 수정하는 것도 가능하지만, 로컬에서 문서를 활용하고 오프라인 작업을 위해서는 설치하시기를 권장합니다.</p><p><a href="https://git-scm.com/book/ko/v2/%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0-Git-%EC%84%A4%EC%B9%98" target="_blank" rel="noopener noreferrer">Git 설치 방법 안내</a>를 참고하여 아래 설명합니다.</p>',5),y=t("ul",null,[t("li",null,"Mavericks(10.9)부터는 Terminal에 단지 처음으로 'git’을 실행하는 것으로 설치가 시작됩니다."),t("li",null,[e("공식 배포판 : "),t("a",{href:"http://git-scm.com/download/mac",target:"_blank",rel:"noopener noreferrer"},"http://git-scm.com/download/mac"),e(" 에서 다운로드 받은 설치파일을 실행하여 설치합니다.")])],-1),w=t("ul",null,[t("li",null,[e("공식 배포판 : "),t("a",{href:"http://git-scm.com/download/win",target:"_blank",rel:"noopener noreferrer"},"http://git-scm.com/download/win"),e(" 에서 다운로드 받은 설치파일을 실행하여 설치합니다.")]),t("li",null,[e("GitHub Desktop : "),t("a",{href:"https://desktop.github.com/",target:"_blank",rel:"noopener noreferrer"},"GitHub Desktop 웹사이트"),e("에서 내려받아 설치합니다.")])],-1),x=t("div",{class:"language-bash","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[t("pre",{class:"language-bash"},[t("code",null,[t("span",{class:"line"},[t("span",{class:"token function"},"sudo"),e(" dnf "),t("span",{class:"token function"},"install"),e(" git-all")]),e(`
`),t("span",{class:"line"})])])],-1),E=t("div",{class:"language-bash","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[t("pre",{class:"language-bash"},[t("code",null,[t("span",{class:"line"},[t("span",{class:"token function"},"sudo"),e(),t("span",{class:"token function"},"apt"),e(),t("span",{class:"token function"},"install"),e(" git-all")]),e(`
`),t("span",{class:"line"})])])],-1),R=l('<h2 id="github-fork" tabindex="-1"><a class="header-anchor" href="#github-fork"><span>github <code>Fork</code></span></a></h2><p>문서는 github상에서 관리됩니다. 우선 문서를 추가구성하고 수정할 수 있도록 원본 github repo를 <code>Fork</code> 합니다.</p><ol><li><code>https://github.com/docmoa/docs</code>로 이동합니다.</li><li>우측 상단의 <code>Fork</code>를 클릭하고 나의 github Org를 선택합니다.<br><img src="'+g+'" alt="Fork" title="GitHub에서 Fork" loading="lazy"><br><img src="'+m+'" alt="Fork-Target" title="Fork 대상 Org 선택" loading="lazy"></li></ol><h2 id="git-fetch-or-pull" tabindex="-1"><a class="header-anchor" href="#git-fetch-or-pull"><span>git <code>Fetch</code> or <code>Pull</code></span></a></h2><p>Fork의 원본 Repo에 변경에 대해 작업중인 Repo에 변경사항을 적용해야 하는 필요성이 있습니다. 여러 편집자가 동일한 시점에 동일 문서를 편집하게 되면 편집에 충돌이 발생할 수 있습니다.</p><p><img src="https://upload.wikimedia.org/wikipedia/commons/9/97/Paragraph-based_prototype_–_rough_visualization_of_the_functionality.png" alt="Conflict" loading="lazy"><br> 참고 : <a href="https://en.wikipedia.org/wiki/Edit_conflict" target="_blank" rel="noopener noreferrer">https://en.wikipedia.org/wiki/Edit_conflict</a></p><p>충돌을 사전에 최대한 방지하기 위해서 편집 전에 원본의 문서를 가져오고 병합하는 과정이 필요합니다.</p>',7),A=t("p",null,"CLI 컨트롤을 위해서는 앞서 git 유틸 설치가 필요합니다.",-1),F=t("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[t("pre",{class:"language-bash"},[t("code",null,[t("span",{class:"line"},[t("span",{class:"token comment"},"# 1. Fork 받은 본인 소유의 Repo를 Clone 받습니다.")]),e(`
`),t("span",{class:"line"},[t("span",{class:"token function"},"git"),e(" clone https://github.com/docmoa/docs")]),e(`
`),t("span",{class:"line"}),e(`
`),t("span",{class:"line"},[t("span",{class:"token comment"},"# 2. 해당 소스 디렉토리로 이동하여 remote 를 확인합니다.")]),e(`
`),t("span",{class:"line"},[t("span",{class:"token builtin class-name"},"cd"),e(" docs")]),e(`
`),t("span",{class:"line"},[t("span",{class:"token function"},"git"),e(" remote "),t("span",{class:"token parameter variable"},"-v")]),e(`
`),t("span",{class:"line"},[e("origin	https://github.com/myorg/docs.git "),t("span",{class:"token punctuation"},"("),e("fetch"),t("span",{class:"token punctuation"},")")]),e(`
`),t("span",{class:"line"},[e("origin	https://github.com/myorg/docs.git "),t("span",{class:"token punctuation"},"("),e("push"),t("span",{class:"token punctuation"},")")]),e(`
`),t("span",{class:"line"}),e(`
`),t("span",{class:"line"},[t("span",{class:"token comment"},"# 3. 문서 원본 Repo와의 병합을 위해 `upstream` repo remote를 추가합니다.")]),e(`
`),t("span",{class:"line"},[t("span",{class:"token function"},"git"),e(" remote "),t("span",{class:"token function"},"add"),e(" upstream https://github.com/docmoa/docs")]),e(`
`),t("span",{class:"line"}),e(`
`),t("span",{class:"line"},[t("span",{class:"token comment"},"# 4-1. pull 을 수행하거나")]),e(`
`),t("span",{class:"line"},[t("span",{class:"token function"},"git"),e(" pull upstream main")]),e(`
`),t("span",{class:"line"}),e(`
`),t("span",{class:"line"},[t("span",{class:"token comment"},"# 4-2. fetch & merge 를 수행합니다.")]),e(`
`),t("span",{class:"line"},[t("span",{class:"token function"},"git"),e(" fetch upstream")]),e(`
`),t("span",{class:"line"},[t("span",{class:"token function"},"git"),e(" merge upstream/main")]),e(`
`),t("span",{class:"line"})])]),t("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"})])],-1),B=t("p",null,[e("원본 Repo에 변화가 있으면 UI상에서 상태가 알려집니다. 이 경우 우측의 "),t("code",null,"Fetch upstream"),e(" 을 통해 "),t("code",null,"Compare"),e("로 변경사항을 확인하거나 "),t("code",null,"Fetch and merge"),e("로 현재의 Repo에 병합할 수 있습니다."),t("br"),t("img",{src:h,alt:"Fetch and merge UI",loading:"lazy"})],-1),I=t("h2",{id:"git-add-and-commit",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#git-add-and-commit"},[t("span",null,[e("git "),t("code",null,"add"),e(" and "),t("code",null,"commit")])])],-1),z=t("p",null,"CLI 컨트롤을 위해서는 앞서 git 유틸 설치가 필요합니다.",-1),L=t("div",{class:"language-bash","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[t("pre",{class:"language-bash"},[t("code",null,[t("span",{class:"line"},[t("span",{class:"token comment"},"# 1. 작성한 파일을 git의 관리 대상으로 add 합니다.")]),e(`
`),t("span",{class:"line"},[t("span",{class:"token function"},"git"),e(),t("span",{class:"token function"},"add"),e(" path/문서.md")]),e(`
`),t("span",{class:"line"}),e(`
`),t("span",{class:"line"},[t("span",{class:"token comment"},"# 2. 로컬 Repo에서 변경사항을 Commit 합니다.")]),e(`
`),t("span",{class:"line"},[t("span",{class:"token function"},"git"),e(" commit "),t("span",{class:"token parameter variable"},"-m"),e(),t("span",{class:"token string"},'"커밋메시지를 남깁니다.(예를들어 : 문서를 수정)"')]),e(`
`),t("span",{class:"line"}),e(`
`),t("span",{class:"line"},[t("span",{class:"token comment"},"# 3. 원격 Repo로 변경사항을 Push 합니다.")]),e(`
`),t("span",{class:"line"},[t("span",{class:"token function"},"git"),e(" push origin main")]),e(`
`),t("span",{class:"line"})])])],-1),P=t("p",null,[e("github 웹 환경에서 문서를 추가하고 수정하는 것도 가능합니다."),t("br"),t("img",{src:b,alt:"github ui edit",loading:"lazy"})],-1),G=l('<h2 id="contribute-1" tabindex="-1"><a class="header-anchor" href="#contribute-1"><span>Contribute</span></a></h2><p>최종적으로 Fork 한 Repo에 docmoa에 기여할 문서가 준비가 된경우 해당 Repo의 github ui에서 커밋된 정보가 있다는 문구와 <code>Contribute</code>를 클릭하여 <code>Pull request</code>를 진행 할 수 있습니다. <code>Open pull request</code>를 클릭하여 Upstream Repo에 요청을 보냅니다.</p><figure><img src="'+_+'" alt="Pull request" tabindex="0" loading="lazy"><figcaption>Pull request</figcaption></figure><p>Pull request를 생성하면 본인 소유의 Repo(Branch)로 부터 docmoa에 지금까지의 변경사항을 병합할 것을 요청할 수 있습니다.</p><div class="hint-container tip"><p class="hint-container-title">팁</p><p>상단에 표기되는 repo의 방향과 branch를 다시한번 확인해주세요.<br> 아래 어떤 항목이 어떻게 변경되는지 내용을 확인할 수 있습니다.</p></div><figure><img src="'+k+'" alt="create pr" tabindex="0" loading="lazy"><figcaption>create pr</figcaption></figure><p><code>Create pull request</code> 버튼을 클릭하면 디테일한 설명을 추가할 수 잇습니다. 문서 자체의 변경사항만으로 의도를 전달하기 힘든경우 해당 설명이 이해하는데 큰 도움이 됩니다.</p><figure><img src="'+f+'" alt="create pr detail" tabindex="0" loading="lazy"><figcaption>create pr detail</figcaption></figure><p>이제 Pull request가 받아들여지고나면 docmoa에 기여해주신 내용이 반영됩니다.</p><div class="hint-container warning"><p class="hint-container-title">Build 주기</p><p>2021년 10월 4일 기준 매 5분마다 변경사항이 있으면 docmoa의 빌드가 수행됩니다.</p></div>',10);function U(O,T){const o=c("Tabs"),r=c("RouteLink");return d(),u("div",null,[C,s(o,{id:"15",data:[{id:"Mac"},{id:"Windows"},{id:"Linux(Fedora/RHEL/CentOS/Rocky)"},{id:"Linux(Debian/Ubuntu)"}]},{title0:a(({value:i,isActive:n})=>[e("Mac")]),title1:a(({value:i,isActive:n})=>[e("Windows")]),title2:a(({value:i,isActive:n})=>[e("Linux(Fedora/RHEL/CentOS/Rocky)")]),title3:a(({value:i,isActive:n})=>[e("Linux(Debian/Ubuntu)")]),tab0:a(({value:i,isActive:n})=>[y]),tab1:a(({value:i,isActive:n})=>[w]),tab2:a(({value:i,isActive:n})=>[x]),tab3:a(({value:i,isActive:n})=>[E]),_:1}),R,s(o,{id:"81",data:[{id:"CLI base"},{id:"UI base"}]},{title0:a(({value:i,isActive:n})=>[e("CLI base")]),title1:a(({value:i,isActive:n})=>[e("UI base")]),tab0:a(({value:i,isActive:n})=>[A,F]),tab1:a(({value:i,isActive:n})=>[B]),_:1}),I,t("p",null,[e("문서 작성은 앞서 "),s(r,{to:"/00-Howto/02-Guide/01-Start.html"},{default:a(()=>[e("문서작성 '시작'")]),_:1}),e("을 참고하세요. 문서 또는 문서 작성에 필요했던 이미지 등 준비가 끝나면 해당 파일을 본인 소유의 Repo에 추가합니다. 이 때 사용하는 것은 CLI도 가능하고, UI 기반에서 작성한 경우에는 저장 즉시 해당 Repo에 저장됩니다. Commit의 경우 필요에 따라 브랜치를 별도 생성하여 본인의 Repo를 기준으로 관리하는 것 또한 가능합니다.")]),s(o,{id:"100",data:[{id:"CLI base"},{id:"UI base"}]},{title0:a(({value:i,isActive:n})=>[e("CLI base")]),title1:a(({value:i,isActive:n})=>[e("UI base")]),tab0:a(({value:i,isActive:n})=>[z,L]),tab1:a(({value:i,isActive:n})=>[P]),_:1}),G])}const S=p(v,[["render",U],["__file","02-Contribute.html.vue"]]),q=JSON.parse('{"path":"/00-Howto/02-Guide/02-Contribute.html","title":"Contribute","lang":"ko-KR","frontmatter":{"description":"Contribute docmoa에 문서 기여하기위한 가이드를 설명합니다. 일반적인 github 상에서의 코드 기여 방식과 동일합니다. git 설치(Option) 로컬 환경에서 git 명령을 수행하기 위해 설치합니다. github 브라우저 환경에서 수정하는 것도 가능하지만, 로컬에서 문서를 활용하고 오프라인 작업을 위...","head":[["meta",{"property":"og:url","content":"https://docmoa.github.io/00-Howto/02-Guide/02-Contribute.html"}],["meta",{"property":"og:site_name","content":"docmoa"}],["meta",{"property":"og:title","content":"Contribute"}],["meta",{"property":"og:description","content":"Contribute docmoa에 문서 기여하기위한 가이드를 설명합니다. 일반적인 github 상에서의 코드 기여 방식과 동일합니다. git 설치(Option) 로컬 환경에서 git 명령을 수행하기 위해 설치합니다. github 브라우저 환경에서 수정하는 것도 가능하지만, 로컬에서 문서를 활용하고 오프라인 작업을 위..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://upload.wikimedia.org/wikipedia/commons/9/97/Paragraph-based_prototype_%E2%80%93_rough_visualization_of_the_functionality.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2023-10-25T07:28:39.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-25T07:28:39.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Contribute\\",\\"image\\":[\\"https://upload.wikimedia.org/wikipedia/commons/9/97/Paragraph-based_prototype_%E2%80%93_rough_visualization_of_the_functionality.png\\"],\\"dateModified\\":\\"2023-10-25T07:28:39.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"git 설치(Option)","slug":"git-설치-option","link":"#git-설치-option","children":[]},{"level":2,"title":"github Fork","slug":"github-fork","link":"#github-fork","children":[]},{"level":2,"title":"git Fetch or Pull","slug":"git-fetch-or-pull","link":"#git-fetch-or-pull","children":[]},{"level":2,"title":"git add and commit","slug":"git-add-and-commit","link":"#git-add-and-commit","children":[]},{"level":2,"title":"Contribute","slug":"contribute-1","link":"#contribute-1","children":[]}],"git":{"createdTime":1627894310000,"updatedTime":1698218919000,"contributors":[{"name":"Great-Stone","email":"hahohh@gmail.com","commits":2},{"name":"Administrator","email":"admin@example.com","commits":1}]},"readingTime":{"minutes":5.58,"words":335},"filePathRelative":"00-Howto/02-Guide/02-Contribute.md","localizedDate":"2021년 8월 2일","excerpt":"\\n<p>docmoa에 문서 기여하기위한 가이드를 설명합니다. 일반적인 github 상에서의 코드 기여 방식과 동일합니다.</p>\\n<h2>git 설치(Option)</h2>\\n<p>로컬 환경에서 git 명령을 수행하기 위해 설치합니다. github 브라우저 환경에서 수정하는 것도 가능하지만, 로컬에서 문서를 활용하고 오프라인 작업을 위해서는 설치하시기를 권장합니다.</p>\\n<p><a href=\\"https://git-scm.com/book/ko/v2/%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0-Git-%EC%84%A4%EC%B9%98\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Git 설치 방법 안내</a>를 참고하여 아래 설명합니다.</p>","autoDesc":true}');export{S as comp,q as data};
