import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as s,h as n}from"./app-DVMlqOhY.js";const t={},l=n(`<h1 id="vault-kmip-faq" tabindex="-1"><a class="header-anchor" href="#vault-kmip-faq"><span>Vault KMIP FAQ</span></a></h1><figure><img src="https://raw.githubusercontent.com/Great-Stone/images/master/picgo/20240215150300.png" alt="KMIP 적용 흐름도" tabindex="0" loading="lazy"><figcaption>KMIP 적용 흐름도</figcaption></figure><h2 id="client-인증서의-유효-기간" tabindex="-1"><a class="header-anchor" href="#client-인증서의-유효-기간"><span>Client 인증서의 유효 기간</span></a></h2><p>기본 설정시 1,209,600초(2주)의 유효 기간을 갖게 되며, 설정에 따라 긴 유효시간의 적용이 가능합니다. (옵션 : <code>deault_tls_client_ttl</code>)<br> 설정은 상기 도식화한 절차 중 &quot;2. kmip 기본 config&quot; 단계에 적용 가능하며. 이는 <code>KMIP 적용 흐름도</code>의 &quot;4. kmip scope, role 정의&quot; 단계에서 override 할 수 있습니다.</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token comment"># 예시 - 1년의 유효기간을 설정</span></span>
<span class="line">vault <span class="token function">write</span> kmip/config <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token assign-left variable">listen_addrs</span><span class="token operator">=</span><span class="token number">0.0</span>.0.0:5696 <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token assign-left variable">tls_ca_key_type</span><span class="token operator">=</span><span class="token string">&quot;rsa&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token assign-left variable">tls_ca_key_bits</span><span class="token operator">=</span><span class="token number">2048</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token assign-left variable">server_ips</span><span class="token operator">=</span><span class="token number">192.168</span>.1.101,192.168.1.102 <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token assign-left variable">default_tls_client_ttl</span><span class="token operator">=</span><span class="token number">31536000</span></span>
<span class="line"></span></code></pre></div><ul><li>옵션 참조(official) : <a href="https://developer.hashicorp.com/vault/api-docs/secret/kmip#parameters" target="_blank" rel="noopener noreferrer">https://developer.hashicorp.com/vault/api-docs/secret/kmip#parameters</a></li></ul><h2 id="kmip-시크릿-엔진의-config-변경시-ca의-변경-여부" tabindex="-1"><a class="header-anchor" href="#kmip-시크릿-엔진의-config-변경시-ca의-변경-여부"><span>KMIP 시크릿 엔진의 config 변경시 CA의 변경 여부</span></a></h2><p>일반적인 설정은 CA가 변경되지 않으나, CA에 직접적인 옵션 즉, 키 강도, 키 길이, 알고리즘 등을 변경하시면 CA가 재발급되므로 이 경우 영향이 있습니다.<br><code>server_ip</code>, <code>server_hostnames</code>를 추가하는 것으로는 CA는 변경되지 않습니다. 이는 SAN 인증서 발급에 영향이지만, vault에서 server인증서를 외부로 export 하는 과정이 없기 때문입니다.</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token comment">#키강도 변경</span></span>
<span class="line">vault <span class="token function">write</span> kmip/config <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token assign-left variable">listen_addrs</span><span class="token operator">=</span><span class="token number">0.0</span>.0.0:5696 <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token assign-left variable">tls_ca_key_type</span><span class="token operator">=</span><span class="token string">&quot;rsa&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token assign-left variable">tls_ca_key_bits</span><span class="token operator">=</span><span class="token number">4096</span> </span>
<span class="line"></span></code></pre></div><h2 id="san-발급시-server-hostnames-기입-정보" tabindex="-1"><a class="header-anchor" href="#san-발급시-server-hostnames-기입-정보"><span>SAN 발급시 <code>server_hostnames</code> 기입 정보</span></a></h2><p>https 로 호출이 가능한 명칭이면 상관없습니다. dns로 호출시에는 네임서버의 zone의 설정에 따라 다를터 이나 fqdn으로 기입, 혹은 https 프로토콜로 호출만 가능하다면 호스트네임이어도 됩니다.</p><p>주의할 점은 http(s) 프로토콜로 호출시에 request/response 헤더에 요청될 host 명과 이것이 인증서의 CN(혹은 SAN 확장 필드)와 매칭되는지의 여부 입니다.</p><h2 id="ca-발급시-servername-hostnames에-기입되어야하는-서버의-리스트-정보" tabindex="-1"><a class="header-anchor" href="#ca-발급시-servername-hostnames에-기입되어야하는-서버의-리스트-정보"><span>CA 발급시 <code>servername_hostnames</code>에 기입되어야하는 서버의 리스트 정보</span></a></h2><p>Vault 서버 정보를 기입해주시면 됩니다. (e.g. <code>vault.mysite.com</code>)</p><div class="hint-container warning"><p class="hint-container-title">주의</p><p>vault의 KMIP 통신에 앞서 <code>server-client</code>의 상호 인증인 <code>two way ssl</code> 과정을 거치므로 각자의 cn을 판단하기 위해 개별 대상의 기입이 필요할 것으로 보여지나, operation role 부여시에 해당 권한에 대한 제어가 수행되므로 Client 의 값을 기입할 필요는 없습니다.</p></div><h2 id="인증서-재발급시-이전-인증서의-만료-여부" tabindex="-1"><a class="header-anchor" href="#인증서-재발급시-이전-인증서의-만료-여부"><span>인증서 재발급시 이전 인증서의 만료 여부</span></a></h2><p>기존 인증서를 강제로 revoke 시키지 않으면 유효기간(ttl)동안 문제 없습니다.</p><h2 id="secrets-별-port-바인딩" tabindex="-1"><a class="header-anchor" href="#secrets-별-port-바인딩"><span>Secrets 별 port 바인딩</span></a></h2><p>KMIP이 활성화된 secrets engine이 다르다면, port는 활성화된 엔진 마다 개별 바인딩이 필요합니다.</p><h2 id="kmip-프로토콜로-교환되는-key의-라이프사이클" tabindex="-1"><a class="header-anchor" href="#kmip-프로토콜로-교환되는-key의-라이프사이클"><span>KMIP 프로토콜로 교환되는 key의 라이프사이클</span></a></h2><p>Vault는 KMIP 으로 발급되는 키의 라이프사이클에 대한 제어권을 클라이언트에 포괄적으로 위임하고 있습니다.</p><p>scope 내의 Role을 부여하는 과정 중 Role에 <code>operation_</code> 접두사로 시작되는 권한을 부여하여, 해당 role에서 발급한 credential을 통해 해당 role에 부여된 KMIP에 대한 권한을 행사합니다. 요약하자면, Vault서버에서 KMIP자체의 라이프사이클이 아닌 KMIP의 권한을 부여하는 우회적인 관리책을 제공하고 있습니다.</p><p>따라서, 해당 role에서 KMIP 키에 대해 별다른 작업을 요청하지 않는다면, vault 내에서 키를 만료 혹은 수정(rotation)하는 작업을 수행하지 않으며,<br> 해당 키는 지속적으로 사용가능합니다.</p><p>현 버전 vault의 KMIP에 대한 지원 정보는 현재 KMIP profile 1.4 표준을 따르고 있음이 퍼블릭 문서로 오픈되어있습니다.</p><p>(참고 - vault 가 구현중인 KMIP profile 정보 : <a href="https://developer.hashicorp.com/vault/docs/secrets/kmip-profiles" target="_blank" rel="noopener noreferrer">https://developer.hashicorp.com/vault/docs/secrets/kmip-profiles</a>)</p><h2 id="vault-로그에서-kmip에-대한-액세스-로그도-남길-수-있는지" tabindex="-1"><a class="header-anchor" href="#vault-로그에서-kmip에-대한-액세스-로그도-남길-수-있는지"><span>Vault 로그에서 KMIP에 대한 액세스 로그도 남길 수 있는지</span></a></h2><p>Vault의 로그는 Vault 플랫폼 자체에 대한 이벤트 기록 만을 수행하여, 세밀한 키 처리에 대한 부분은 <code>audit log</code> 라는 기능을 enable 함으로써 이벤트 처리를 모니터링 할수 있습니다.</p><h2 id="vault-로그-파일-분리해서-로테이션-설정할-수-있는지" tabindex="-1"><a class="header-anchor" href="#vault-로그-파일-분리해서-로테이션-설정할-수-있는지"><span>Vault 로그 파일 분리해서 로테이션 설정할 수 있는지</span></a></h2><p>어떠한 추가 설정이 없다면, 기본적으로 시스템 로그에 기록되도록 되어있습니다. 말씀하신대로 해당 로그 파일을 별도 분리가능하며, 로테이션에 대한 설정도 용량/시간/갯수의 제한을 설정가능합니다.</p><p>(참고 : <a href="https://developer.hashicorp.com/vault/docs/configuration#log_rotate_duration" target="_blank" rel="noopener noreferrer">https://developer.hashicorp.com/vault/docs/configuration#log_rotate_duration</a>)</p><h2 id="kmip-통신-시-클러스터의-모든-요청이-리더로-포워딩-되는지-아니면-요청-종류에-따라-다른지" tabindex="-1"><a class="header-anchor" href="#kmip-통신-시-클러스터의-모든-요청이-리더로-포워딩-되는지-아니면-요청-종류에-따라-다른지"><span>KMIP 통신 시 클러스터의 모든 요청이 리더로 포워딩 되는지, 아니면 요청 종류에 따라 다른지</span></a></h2><p>해당 동작은 licence 정책에 따라 분화됩니다. 현재 라이선스로는 Read/Write 모두를 리더 노드가 처리하도록 되어있고. 요청을 처리받은 follwer 노드는 처리를 리더 노드로 포워딩합니다.</p><p>Read/Write를 모든 Vault에서 처리하는 동작은 <code>Read Replica</code>라는 동작으로 Vault Enterprise의 Performance 라이선스에 해당됩니다.</p><p>만약 KMIP 사용이 가능한 라이선스인 ADP-KM 만 적용 된 경우, R/W가 빈번하지 않지만, 높은 비용의 라이선스 정책에서만 사용가능하던 ADP(Advanced Data Protection)라이선스의 KMIP 기능을 좀 더 비용합리적으로 사용가능하게끔, 해당 기능을 제거하고 좀 더 낮은 비용으로 책정된 라이선스입니다.</p><p>(현재 라이선스 정책에 대한 상세 참조 링크 : <a href="https://developer.hashicorp.com/vault/docs/enterprise/license/faq#q-how-can-the-new-adp-modules-be-purchased-and-what-features-are-customer-entitled-to-as-part-of-that-purchase" target="_blank" rel="noopener noreferrer">https://developer.hashicorp.com/vault/docs/enterprise/license/faq#q-how-can-the-new-adp-modules-be-purchased-and-what-features-are-customer-entitled-to-as-part-of-that-purchase</a>)</p><h2 id="매뉴얼하게-vault-리더를-변경할-수-있는-방법이-있는지" tabindex="-1"><a class="header-anchor" href="#매뉴얼하게-vault-리더를-변경할-수-있는-방법이-있는지"><span>매뉴얼하게 Vault 리더를 변경할 수 있는 방법이 있는지</span></a></h2><p>vault에서 <code>step-down</code> 이라는 작업으로 칭합니다. 이때, 리더를 확인하여 다른 노드로 리더 권한을 이전하는 작업이 필요합니다.</p><p>해당 작업이 없이 리더를 shutdown하게 되면 자체적인 리더 선출과정이 발생하여 약 5~10초정도의 순단이 발생가능하기 때문에. maintanance 작업전엔 <code>leader</code>를 확인 후 작업의 선행이 꼭 필요하겠습니다.</p><h2 id="vault-업그레이드-라이선스-변경-수동-같은-작업-절차" tabindex="-1"><a class="header-anchor" href="#vault-업그레이드-라이선스-변경-수동-같은-작업-절차"><span>Vault \b업그레이드, 라이선스 변경(수동) 같은 작업 절차</span></a></h2><p>이미 사용중인 경우, 다음과 같이 진행됩니다.</p><ol><li>오토백업 설정 추가</li><li>스텝다운</li><li>키 마이그레이션</li><li>정상화 모니터링</li></ol><p>다음은 구성된 Vault 클러스터 예시 이며, health check config는 이해를 돕기위한 설정 입니다.</p><figure><img src="https://raw.githubusercontent.com/Great-Stone/images/master/picgo/20240215152435.png" alt="Sample Vault Cluster" tabindex="0" loading="lazy"><figcaption>Sample Vault Cluster</figcaption></figure><p>작업간 rolling update 형태로 노드를 순환적 재기동하게되는데, LB의 <code>health check</code> 인터벌 때문에 해당노드가 다운되었음에도 노드를 신뢰하여 포워딩 하는 구간이 발생하게 됩니다.</p><ol><li><p>vault follower node의 확인</p></li><li><p>작업 대상인 follower node를 GSLB 타겟에서 제거<br> 2.1 제거된 follower node를 셧다운 후 키 마이그레이션 작업 후 GSLB의 타겟에 추가</p></li><li><p>다음 follower node에 대해 &quot;2~3&quot;작업 반복<br> 3.1. follower node 기동 후 정상적인 follower로서 join 되었는지 확인</p></li><li><p>leader node를 GSLB 타겟에서 제거<br> 4-1. 제거된 leader node를 &quot;step-down&quot;하여 leader role을 follower로 마이그레이션<br> 4-2. &quot;3&quot;의 과정을 현재 node에서 수행</p></li><li><p>가능한 경우 KMIP 클라이언트 (e.g.MongoDB)를 재기동 하여 정상적으로 구동됨 확인</p></li></ol><p>4의 과정에서 taget을 먼저 제거하는 이유는, step-down시 ready 상태가 되는 leader노드로 LB가 요청을 보낼시 역시 50X대 서버 에러를 리턴받기 때문입니다.</p><p>follower를 통해 유입된 reqeust는 response또한 follower를 통해 회신되므로, 요청처리에는 문제가 없습니다</p><h2 id="linux-서비스로-등록된-경우-로그-파일-외부-구성" tabindex="-1"><a class="header-anchor" href="#linux-서비스로-등록된-경우-로그-파일-외부-구성"><span>Linux 서비스로 등록된 경우 로그 파일 외부 구성</span></a></h2><p>systemd 상에 등록되어 있는 vault service는 &quot;vault server&quot; command를 사용합니다.</p><p>systemd로 등록된 서비스는 따로 설정해 주지 않는다면 Standart Out,Error 모두 syslog에 저장하므로, Vault Service Script에서 vault log가 저장되지 않도록 Standard Error를 null로 처리하고, <code>vault server</code> command에 옵션을 주어 vault log를 외부로 지정할 수 있습니다.</p><div class="language-ini line-numbers-mode" data-highlighter="prismjs" data-ext="ini" data-title="ini"><pre class="language-ini"><code><span class="line"><span class="token comment"># /lib/systemd/system/vault.service 수정</span></span>
<span class="line"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">Unit</span><span class="token punctuation">]</span></span></span>
<span class="line">...</span>
<span class="line"></span>
<span class="line"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">Service</span><span class="token punctuation">]</span></span></span>
<span class="line">...</span>
<span class="line"><span class="token key attr-name">ExecStart</span><span class="token punctuation">=</span><span class="token value attr-value">/usr/local/bin/vault server -config=/etc/vault.d/vault.hcl -log-file={ Log_path }</span></span>
<span class="line"><span class="token key attr-name">StandardError</span><span class="token punctuation">=</span><span class="token value attr-value">null</span></span>
<span class="line"></span>
<span class="line"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">Install</span><span class="token punctuation">]</span></span></span>
<span class="line">...</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>ExecStart</code> 항목에 <code>-log-file</code> 항목 추가</li><li><code>StandardError=null</code> 항모고 추가</li></ul><h2 id="auto-unseal-설정을-하지-않은-상태에서-pkill-hup-vault-커맨드실행하는-경우에-vault-프로세스가-재시작되면서-seal-봉인-상태가-될까요" tabindex="-1"><a class="header-anchor" href="#auto-unseal-설정을-하지-않은-상태에서-pkill-hup-vault-커맨드실행하는-경우에-vault-프로세스가-재시작되면서-seal-봉인-상태가-될까요"><span>Auto Unseal 설정을 하지 않은 상태에서 <code>pkill -HUP vault</code> 커맨드실행하는 경우에 vault 프로세스가 재시작되면서 Seal(봉인) 상태가 될까요?</span></a></h2><p>해당 pkill -HUP vault 명령어는 vault 가 재기동되는 명령어가 아닌 설정을 reload하는 명령어로 Vault seal에는 영향이 없습니다.</p><p>Vault service 상에서도 명시적으로 Reload 기능이 있으며, <code>Systemctl reload vault.service</code> 명령으로 같은 기능을 수행할 수 있습니다.</p><div class="language-ini line-numbers-mode" data-highlighter="prismjs" data-ext="ini" data-title="ini"><pre class="language-ini"><code><span class="line"><span class="token comment"># /lib/systemd/system/vault.service 수정</span></span>
<span class="line"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">Unit</span><span class="token punctuation">]</span></span></span>
<span class="line">...</span>
<span class="line"></span>
<span class="line"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">Service</span><span class="token punctuation">]</span></span></span>
<span class="line">...</span>
<span class="line"><span class="token key attr-name">ExecReload</span><span class="token punctuation">=</span><span class="token value attr-value">/bin/kill --signal HUP $MAINPID</span></span>
<span class="line"></span>
<span class="line"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">Install</span><span class="token punctuation">]</span></span></span>
<span class="line">...</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="kmip-엔진을-설정하면-kmip-서비스-포트-5696-tcp-에-서버측-ssl-인증서가-자동으로-세팅되는데-이-자체-서명된-인증서의-만료일이-1년으로-잡혀있는데-자동으로-갱신되고-서비스에-영향이-없는지" tabindex="-1"><a class="header-anchor" href="#kmip-엔진을-설정하면-kmip-서비스-포트-5696-tcp-에-서버측-ssl-인증서가-자동으로-세팅되는데-이-자체-서명된-인증서의-만료일이-1년으로-잡혀있는데-자동으로-갱신되고-서비스에-영향이-없는지"><span>KMIP 엔진을 설정하면 KMIP 서비스 포트(5696/TCP)에 서버측 SSL 인증서가 자동으로 세팅되는데, 이 자체 서명된 인증서의 만료일이 1년으로 잡혀있는데 \b자동으로 갱신되고 서비스에 영향이 없는지</span></a></h2><p>Vault KMIP Secret Engine에서의 서버측 SSL 인증서의 경우 하단 3가지 상황에서 갱신됩니다</p><ul><li>Vault 의 리더 변경 시</li><li>KMIP Config 변경 시</li><li>Vault 재기동 시</li></ul><figure><img src="https://raw.githubusercontent.com/Great-Stone/images/master/picgo/20240215153819.png" alt="검증 내용" tabindex="0" loading="lazy"><figcaption>검증 내용</figcaption></figure><p>(참고 : <a href="https://support.hashicorp.com/hc/en-us/articles/4411836765075-KMIP-Secrets-Engine-server-TLS-certificate-Guide" target="_blank" rel="noopener noreferrer">https://support.hashicorp.com/hc/en-us/articles/4411836765075-KMIP-Secrets-Engine-server-TLS-certificate-Guide</a>)</p><h2 id="pr-기능이-있는-license-에서-pr-기능이-없는-license로-이관-시-이슈" tabindex="-1"><a class="header-anchor" href="#pr-기능이-있는-license-에서-pr-기능이-없는-license로-이관-시-이슈"><span>PR 기능이 있는 License 에서 PR 기능이 없는 License로 이관 시 이슈</span></a></h2><p>PR 기능을 포함된 라이선스 사용 시 PR이 없는 (e.g. ADP-KM) Vault License로 교체하면 Performance Standby 상태가 종료되면서 vault 리더 노드의 프로세스 리로드 시 팔로워 노드 프로세스가 재시작되어 seal 상태가 되는 상황이 발생합니다.</p><p>이 경우 하단 링크와 같이 vault config 파일에 <code>disable_performance_standby=true</code>를 명시적으로 기입함으로써 해당 문제를 방지할 수 있습니다.</p><p>(링크 : <a href="https://support.hashicorp.com/hc/en-us/articles/21909597784211-Vault-Disabling-Performance-Standby-mode-when-not-licensed-for-this-feature" target="_blank" rel="noopener noreferrer">https://support.hashicorp.com/hc/en-us/articles/21909597784211-Vault-Disabling-Performance-Standby-mode-when-not-licensed-for-this-feature</a>)</p><h2 id="mongodb-vault-kmip-연동시-kmipkeystatepollingseconds-옵션-동작" tabindex="-1"><a class="header-anchor" href="#mongodb-vault-kmip-연동시-kmipkeystatepollingseconds-옵션-동작"><span>MongoDB - Vault KMIP 연동시 <code>--kmipKeyStatePollingSeconds</code> 옵션 동작</span></a></h2><p>MongoDB의 <code>--kmipKeyStatePollingSeconds</code> 옵션은 MongoDB 에서 Vault Kmip 으로 암호화 Key가 Active 상태인지 확인하는 주기 입니다.</p>`,67),i=[l];function p(o,c){return a(),s("div",null,i)}const u=e(t,[["render",p],["__file","kmip-faq.html.vue"]]),h=JSON.parse('{"path":"/04-HashiCorp/06-Vault/01-Information/kmip-faq.html","title":"Vault KMIP FAQ","lang":"ko-KR","frontmatter":{"description":"Vault KMIP 주요 질문","tag":["vault","kmip"],"author":"hashicat(MZC), chadness12(MZC)","head":[["meta",{"property":"og:url","content":"https://docmoa.github.io/04-HashiCorp/06-Vault/01-Information/kmip-faq.html"}],["meta",{"property":"og:site_name","content":"docmoa"}],["meta",{"property":"og:title","content":"Vault KMIP FAQ"}],["meta",{"property":"og:description","content":"Vault KMIP 주요 질문"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://raw.githubusercontent.com/Great-Stone/images/master/picgo/20240215150300.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2024-02-15T07:11:04.000Z"}],["meta",{"property":"article:author","content":"hashicat(MZC), chadness12(MZC)"}],["meta",{"property":"article:tag","content":"vault"}],["meta",{"property":"article:tag","content":"kmip"}],["meta",{"property":"article:modified_time","content":"2024-02-15T07:11:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Vault KMIP FAQ\\",\\"image\\":[\\"https://raw.githubusercontent.com/Great-Stone/images/master/picgo/20240215150300.png\\",\\"https://raw.githubusercontent.com/Great-Stone/images/master/picgo/20240215152435.png\\",\\"https://raw.githubusercontent.com/Great-Stone/images/master/picgo/20240215153819.png\\"],\\"dateModified\\":\\"2024-02-15T07:11:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"hashicat(MZC), chadness12(MZC)\\"}]}"]]},"headers":[{"level":2,"title":"Client 인증서의 유효 기간","slug":"client-인증서의-유효-기간","link":"#client-인증서의-유효-기간","children":[]},{"level":2,"title":"KMIP 시크릿 엔진의 config 변경시 CA의 변경 여부","slug":"kmip-시크릿-엔진의-config-변경시-ca의-변경-여부","link":"#kmip-시크릿-엔진의-config-변경시-ca의-변경-여부","children":[]},{"level":2,"title":"SAN 발급시 server_hostnames 기입 정보","slug":"san-발급시-server-hostnames-기입-정보","link":"#san-발급시-server-hostnames-기입-정보","children":[]},{"level":2,"title":"CA 발급시 servername_hostnames에 기입되어야하는 서버의 리스트 정보","slug":"ca-발급시-servername-hostnames에-기입되어야하는-서버의-리스트-정보","link":"#ca-발급시-servername-hostnames에-기입되어야하는-서버의-리스트-정보","children":[]},{"level":2,"title":"인증서 재발급시 이전 인증서의 만료 여부","slug":"인증서-재발급시-이전-인증서의-만료-여부","link":"#인증서-재발급시-이전-인증서의-만료-여부","children":[]},{"level":2,"title":"Secrets 별 port 바인딩","slug":"secrets-별-port-바인딩","link":"#secrets-별-port-바인딩","children":[]},{"level":2,"title":"KMIP 프로토콜로 교환되는 key의 라이프사이클","slug":"kmip-프로토콜로-교환되는-key의-라이프사이클","link":"#kmip-프로토콜로-교환되는-key의-라이프사이클","children":[]},{"level":2,"title":"Vault 로그에서 KMIP에 대한 액세스 로그도 남길 수 있는지","slug":"vault-로그에서-kmip에-대한-액세스-로그도-남길-수-있는지","link":"#vault-로그에서-kmip에-대한-액세스-로그도-남길-수-있는지","children":[]},{"level":2,"title":"Vault 로그 파일 분리해서 로테이션 설정할 수 있는지","slug":"vault-로그-파일-분리해서-로테이션-설정할-수-있는지","link":"#vault-로그-파일-분리해서-로테이션-설정할-수-있는지","children":[]},{"level":2,"title":"KMIP 통신 시 클러스터의 모든 요청이 리더로 포워딩 되는지, 아니면 요청 종류에 따라 다른지","slug":"kmip-통신-시-클러스터의-모든-요청이-리더로-포워딩-되는지-아니면-요청-종류에-따라-다른지","link":"#kmip-통신-시-클러스터의-모든-요청이-리더로-포워딩-되는지-아니면-요청-종류에-따라-다른지","children":[]},{"level":2,"title":"매뉴얼하게 Vault 리더를 변경할 수 있는 방법이 있는지","slug":"매뉴얼하게-vault-리더를-변경할-수-있는-방법이-있는지","link":"#매뉴얼하게-vault-리더를-변경할-수-있는-방법이-있는지","children":[]},{"level":2,"title":"Vault \\b업그레이드, 라이선스 변경(수동) 같은 작업 절차","slug":"vault-업그레이드-라이선스-변경-수동-같은-작업-절차","link":"#vault-업그레이드-라이선스-변경-수동-같은-작업-절차","children":[]},{"level":2,"title":"Linux 서비스로 등록된 경우 로그 파일 외부 구성","slug":"linux-서비스로-등록된-경우-로그-파일-외부-구성","link":"#linux-서비스로-등록된-경우-로그-파일-외부-구성","children":[]},{"level":2,"title":"Auto Unseal 설정을 하지 않은 상태에서 pkill -HUP vault 커맨드실행하는 경우에 vault 프로세스가 재시작되면서 Seal(봉인) 상태가 될까요?","slug":"auto-unseal-설정을-하지-않은-상태에서-pkill-hup-vault-커맨드실행하는-경우에-vault-프로세스가-재시작되면서-seal-봉인-상태가-될까요","link":"#auto-unseal-설정을-하지-않은-상태에서-pkill-hup-vault-커맨드실행하는-경우에-vault-프로세스가-재시작되면서-seal-봉인-상태가-될까요","children":[]},{"level":2,"title":"KMIP 엔진을 설정하면 KMIP 서비스 포트(5696/TCP)에 서버측 SSL 인증서가 자동으로 세팅되는데, 이 자체 서명된 인증서의 만료일이 1년으로 잡혀있는데 \\b자동으로 갱신되고 서비스에 영향이 없는지","slug":"kmip-엔진을-설정하면-kmip-서비스-포트-5696-tcp-에-서버측-ssl-인증서가-자동으로-세팅되는데-이-자체-서명된-인증서의-만료일이-1년으로-잡혀있는데-자동으로-갱신되고-서비스에-영향이-없는지","link":"#kmip-엔진을-설정하면-kmip-서비스-포트-5696-tcp-에-서버측-ssl-인증서가-자동으로-세팅되는데-이-자체-서명된-인증서의-만료일이-1년으로-잡혀있는데-자동으로-갱신되고-서비스에-영향이-없는지","children":[]},{"level":2,"title":"PR 기능이 있는 License 에서  PR 기능이 없는 License로 이관 시 이슈","slug":"pr-기능이-있는-license-에서-pr-기능이-없는-license로-이관-시-이슈","link":"#pr-기능이-있는-license-에서-pr-기능이-없는-license로-이관-시-이슈","children":[]},{"level":2,"title":"MongoDB - Vault KMIP 연동시 --kmipKeyStatePollingSeconds 옵션 동작","slug":"mongodb-vault-kmip-연동시-kmipkeystatepollingseconds-옵션-동작","link":"#mongodb-vault-kmip-연동시-kmipkeystatepollingseconds-옵션-동작","children":[]}],"git":{"createdTime":1707979472000,"updatedTime":1707981064000,"contributors":[{"name":"Great-Stone","email":"hahohh@gmail.com","commits":2}]},"readingTime":{"minutes":8,"words":480},"filePathRelative":"04-HashiCorp/06-Vault/01-Information/kmip-faq.md","localizedDate":"2024년 2월 15일","excerpt":"\\n<figure><img src=\\"https://raw.githubusercontent.com/Great-Stone/images/master/picgo/20240215150300.png\\" alt=\\"KMIP 적용 흐름도\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>KMIP 적용 흐름도</figcaption></figure>\\n<h2>Client 인증서의 유효 기간</h2>\\n<p>기본 설정시 1,209,600초(2주)의 유효 기간을 갖게 되며, 설정에 따라 긴 유효시간의 적용이 가능합니다. (옵션 : <code>deault_tls_client_ttl</code>)<br>\\n설정은 상기 도식화한 절차 중 \\"2. kmip 기본 config\\" 단계에 적용 가능하며. 이는 <code>KMIP 적용 흐름도</code>의 \\"4. kmip scope, role 정의\\" 단계에서 override 할 수 있습니다.</p>","copyright":{"author":"hashicat(MZC), chadness12(MZC)"}}');export{u as comp,h as data};
