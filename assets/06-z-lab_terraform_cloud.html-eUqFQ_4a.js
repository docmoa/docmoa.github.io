import{_ as i}from"./lab1-02-By4gwc7V.js";import{_ as c}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,o as d,c as m,b as l,w as a,h as t,g as n,a as e}from"./app-DVMlqOhY.js";const u="/assets/lab6-01-BR2XuCJW.png",f="/assets/lab6-02-BlWl7cfs.png",h="/assets/lab6-03-aJ3zR-en.png",g="/assets/lab6-04-DFO_B_SW.png",b="/assets/lab6-05-DW5jvJ6v.png",k="/assets/lab6-06-BGkbBT-2.png",_="/assets/intro-to-terraform-on-ncp-2-B4FWEybN.png",v={},y=t('<h1 id="lab-terraform-cloud-연결" tabindex="-1"><a class="header-anchor" href="#lab-terraform-cloud-연결"><span>💻 Lab - Terraform Cloud 연결</span></a></h1><h3 id="편집기에서-열기" tabindex="-1"><a class="header-anchor" href="#편집기에서-열기"><span>편집기에서 열기</span></a></h3><figure><img src="'+i+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>VSCode를 실행하고 File(파일) 메뉴에서 <code>Open Folder...</code> 를 클릭합니다.</li><li>앞서 실습을 진행한 <code>lab02</code>을 열어줍니다.</li></ul><hr><h2 id="☁️-terraform-configuration" tabindex="-1"><a class="header-anchor" href="#☁️-terraform-configuration"><span>☁️ Terraform Configuration</span></a></h2><p>@slidestart blood</p><h3 id="terraform-cloud" tabindex="-1"><a class="header-anchor" href="#terraform-cloud"><span>Terraform Cloud</span></a></h3><h3 id="remote-state-저장소는-모든-사용자에게-무료입니다" tabindex="-1"><a class="header-anchor" href="#remote-state-저장소는-모든-사용자에게-무료입니다"><span>Remote State 저장소는 모든 사용자에게 무료입니다.</span></a></h3><p>@slideend</p><h3 id="terraform-cloud-계정" tabindex="-1"><a class="header-anchor" href="#terraform-cloud-계정"><span>Terraform Cloud 계정</span></a></h3><p>Terraform Cloud는 다른 SaaS 서비스와 같이 개인을 위한 무료 플랜이 준비되어있습니다.</p><p>아직 계정이 없는 경우 계성을 생성하고 다음 실습을 진행합니다.</p><ol><li>계정 생성을 위해 <a href="https://app.terraform.io/signup/account" target="_blank" rel="noopener noreferrer">https://app.terraform.io/signup/account</a>로 접속합니다.</li><li>필요한 정보를 입력하고 확인하여 신규 계정을 생성합니다. <button style="border-color:#3322de;background-color:#5c4ee5;color:#fff;font-size:1rem;">Cretea account</button></li><li>가입한 이메일로 계정 생성 확인 메시지가 도착합니다. 링크를 확인하면 Terraform Cloud를 사용할 준비가 끝났습니다.</li></ol><h4 id="terraform-cloud를-설정합니다" tabindex="-1"><a class="header-anchor" href="#terraform-cloud를-설정합니다"><span>💻 Terraform Cloud를 설정합니다.</span></a></h4><ol><li><p>Terraform Cloud에 로그인하면 <code>YOURNAME-training</code> 이라는 새 조직을 만듭니다. <code>YOURNAME</code>을 자신의 이름이나 다른 텍스트로 바꾸십시오.</p></li><li><p>다음으로 Workspace를 생성하라는 메시지가 표시됩니다. <code>CLI 기반 워크플로</code> 패널을 클릭하여 VCS 통합 단계를 건너뛸 수 있습니다.<br><img src="'+u+'" alt="" loading="lazy"></p></li><li><p>작업 공간의 이름을 <code>hashicat-ncp</code> 로 지정 하고 <code>Create workspace</code>를 클릭하여 새로운 Workspace를 생성합니다.</p></li><li><p>터미널에서 <code>terraform version</code> 을 실행하여 버전을 확인합니다.</p></li><li><p>Terraform Cloud 상에 생성한 <code>hashicat-ncp</code> 의 <code>Settings &gt; General</code> 로 이동하여 <code>Terraform Version</code>을 동일한 버전으로 구성합니다. 그리고 Execution Mode를 <code>Local</code>로 설정합니다.</p></li></ol>',16),T=e("figure",null,[e("img",{src:f,alt:"",tabindex:"0",loading:"lazy"}),e("figcaption")],-1),C=e("figure",null,[e("img",{src:h,alt:"",tabindex:"0",loading:"lazy"}),e("figcaption")],-1),x=t(`<ol start="6"><li><code>Settings</code> 페이지 하단에 <button style="border-color:#3322de;background-color:#5c4ee5;color:#fff;font-size:1rem;">Save settings</button> 버튼을 클릭하여 저장합니다.</li></ol><hr><h2 id="🎛️-configure-remote-state" tabindex="-1"><a class="header-anchor" href="#🎛️-configure-remote-state"><span>🎛️ Configure Remote State</span></a></h2><p>@slidestart blood</p><h3 id="local-실행-모드는-terraform의-구성과-변수는-모두-워크스테이션에-남아있습니다" tabindex="-1"><a class="header-anchor" href="#local-실행-모드는-terraform의-구성과-변수는-모두-워크스테이션에-남아있습니다"><span>&quot;Local&quot; 실행 모드는 Terraform의 구성과 변수는 모두 워크스테이션에 남아있습니다.</span></a></h3><hr><h3 id="remote-실행-모드로-전환하게-되면-terraform-cloud-환경의-컨테이너-환경에서-실행됩니다" tabindex="-1"><a class="header-anchor" href="#remote-실행-모드로-전환하게-되면-terraform-cloud-환경의-컨테이너-환경에서-실행됩니다"><span>&quot;Remote&quot; 실행 모드로 전환하게 되면 Terraform Cloud 환경의 컨테이너 환경에서 실행됩니다.</span></a></h3><hr><h3 id="remote-실행-모드로-전환-시-변수구성은-terraform-cloud-환경에-설정해야-합니다" tabindex="-1"><a class="header-anchor" href="#remote-실행-모드로-전환-시-변수구성은-terraform-cloud-환경에-설정해야-합니다"><span>&quot;Remote&quot; 실행 모드로 전환 시, 변수구성은 Terraform Cloud 환경에 설정해야 합니다.</span></a></h3><p>@slideend</p><p>이번 실습에서는 Terraform Cloud를 Remote State Backend로 구성하여 기존 State 파일을 Terraform Cloud 환경으로 마이그레이션 합니다.</p><h4 id="remote-backend-구성하기" tabindex="-1"><a class="header-anchor" href="#remote-backend-구성하기"><span>💻 Remote Backend 구성하기</span></a></h4><p>Workspace 디렉토리에 (<code>main.tf</code>와 같은 위치) 아래와 같은 내용으로 <code>remote_backend.tf</code> 파일을 생성합니다.</p><div class="language-hcl line-numbers-mode" data-highlighter="prismjs" data-ext="hcl" data-title="hcl"><pre class="language-hcl"><code><span class="line"><span class="token comment"># remote_backend.tf</span></span>
<span class="line"><span class="token keyword">terraform</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">backend<span class="token type variable"> &quot;remote&quot; </span></span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">hostname</span> <span class="token punctuation">=</span> <span class="token string">&quot;app.terraform.io&quot;</span></span>
<span class="line">    <span class="token property">organization</span> <span class="token punctuation">=</span> <span class="token string">&quot;YOURORGANIZATION&quot;</span></span>
<span class="line">    <span class="token keyword">workspaces</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token property">name</span> <span class="token punctuation">=</span> <span class="token string">&quot;hashicat-ncp&quot;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>YOURORGANIZATION</code>을 생성한 Organization 이름으로 수정합니다.</p><p>이후 터미널에서 <code>terraform login</code> 을 입력합니다. 로컬 환경에 Terraform Cloud와 API 인증을 위한 Token을 생성하는 과정입니다. <code>yes</code>를 입력하면 Terraform Cloud의 토큰 생성화면이 열립니다.</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line highlighted">$ terraform login</span>
<span class="line">Terraform will request an API token <span class="token keyword">for</span> app.terraform.io using your browser.</span>
<span class="line"><span class="token punctuation">..</span>.</span>
<span class="line">Do you want to proceed?</span>
<span class="line">  Only <span class="token string">&#39;yes&#39;</span> will be accepted to confirm.</span>
<span class="line"></span>
<span class="line">  Enter a value: </span>
<span class="line"></span></code></pre></div><p><code>Create API token</code> 화면이 나오면 Description에 적절한 값(예: ncp workshop)을 입력한 후 <button style="border-color:#3322de;background-color:#5c4ee5;color:#fff;font-size:1rem;">Create API token</button> 버튼을 클릭하여 새로운 Token을 생성합니다.</p>`,18),q=e("figure",null,[e("img",{src:g,alt:"",tabindex:"0",loading:"lazy"}),e("figcaption")],-1),w=e("figure",null,[e("img",{src:b,alt:"",tabindex:"0",loading:"lazy"}),e("figcaption")],-1),S=t(`<p>생성된 Token을 복사하여 앞서 터미널에 새로운 입력란인 <code>Enter a value: </code> 에 붙여넣고 <kbd>⏎</kbd>(엔터)를 입력합니다. (입력된 값은 보이지 않습니다.)</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token punctuation">..</span>.</span>
<span class="line">Generate a token using your browser, and copy-paste it into this prompt.</span>
<span class="line"></span>
<span class="line">Terraform will store the token <span class="token keyword">in</span> plain text <span class="token keyword">in</span> the following <span class="token function">file</span></span>
<span class="line"><span class="token keyword">for</span> use by subsequent commands:</span>
<span class="line">    /Users/yourname/.terraform.d/credentials.tfrc.json</span>
<span class="line"></span>
<span class="line">Token <span class="token keyword">for</span> app.terraform.io:</span>
<span class="line">  Enter a value: ****************************************** </span>
<span class="line"></span></code></pre></div><p>해당 토큰은 터미널에 표기된 <code>credentials.tfrc.json</code> 파일에 저장됩니다.</p><p>터미널에서 <code>terraform init</code>을 실행합니다.</p><p>State를 Terraform Cloud로 마이그레이션하라는 메시지가 표시되면 &quot;yes&quot;를 입력합니다.</p><p>backend가 remote로 구성됨이 성공함을 확인합니다.</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line highlighted">$ terraform init</span>
<span class="line"><span class="token punctuation">..</span>.</span>
<span class="line">Initializing the backend<span class="token punctuation">..</span>.</span>
<span class="line"></span>
<span class="line">Successfully configured the backend <span class="token string">&quot;remote&quot;</span><span class="token operator">!</span> Terraform will automatically</span>
<span class="line">use this backend unless the backend configuration changes.</span>
<span class="line"><span class="token punctuation">..</span>.</span>
<span class="line"></span></code></pre></div><p>이제 상태가 Terraform Cloud에 안전하게 저장됩니다. TFC UI에서 작업 영역의 &quot;State&quot; 탭에서 이를 확인할 수 있습니다.</p><p>변수들을 변경하면서 <code>terraform apply -auto-approve</code>를 실행하고, 상태 파일이 리소스가 변경될 때마다 변경되는 것을 지켜보십시오. Terraform Cloud UI를 사용하여 이전 상태 파일을 탐색할 수 있습니다.</p><figure><img src="`+k+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><hr><h2 id="🔥-terraform-destroy" tabindex="-1"><a class="header-anchor" href="#🔥-terraform-destroy"><span>🔥 Terraform Destroy</span></a></h2><p>@slidestart blood</p><h3 id="terraform은-인프라를-구축하는-것만큼-쉽게-인프라를-파괴할-수-있습니다" tabindex="-1"><a class="header-anchor" href="#terraform은-인프라를-구축하는-것만큼-쉽게-인프라를-파괴할-수-있습니다"><span>Terraform은 인프라를 구축하는 것만큼 쉽게 인프라를 파괴할 수 있습니다.</span></a></h3><hr><h3 id="terraform-destroy-는-주의하여-사용하세요" tabindex="-1"><a class="header-anchor" href="#terraform-destroy-는-주의하여-사용하세요"><span>&quot;terraform destroy&quot;는 주의하여 사용하세요.</span></a></h3><p>@slideend</p><h4 id="리소스-삭제하기" tabindex="-1"><a class="header-anchor" href="#리소스-삭제하기"><span>💻 리소스 삭제하기</span></a></h4><p>다음 명령을 실행하여 인프라를 삭제하세요.</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">terraform destroy</span>
<span class="line"></span></code></pre></div><p>인프라를 삭제한다는 메시지가 표시되면 &quot;yes&quot;를 입력해야 합니다. 중요한 리소스가 실수로 삭제되는 것을 방지하기 위한 안전 기능입니다.</p><p>확인 버튼을 클릭하기 전에 리소스 삭제 작업이 완전히 끝날 때까지 기다리십시오.</p><hr><figure><img src="`+_+'" alt="Intro" tabindex="0" loading="lazy"><figcaption>Intro</figcaption></figure>',24);function R(z,A){const s=p("Tabs");return d(),m("div",null,[y,l(s,{id:"93",data:[{id:"Setting 위치"},{id:"Version과 Execution Mode"}]},{title0:a(({value:r,isActive:o})=>[n("Setting 위치")]),title1:a(({value:r,isActive:o})=>[n("Version과 Execution Mode")]),tab0:a(({value:r,isActive:o})=>[T]),tab1:a(({value:r,isActive:o})=>[C]),_:1}),x,l(s,{id:"153",data:[{id:"Token 생성하기"},{id:"Token 생성 후 복사"}]},{title0:a(({value:r,isActive:o})=>[n("Token 생성하기")]),title1:a(({value:r,isActive:o})=>[n("Token 생성 후 복사")]),tab0:a(({value:r,isActive:o})=>[q]),tab1:a(({value:r,isActive:o})=>[w]),_:1}),S])}const P=c(v,[["render",R],["__file","06-z-lab_terraform_cloud.html.vue"]]),B=JSON.parse('{"path":"/03-PublicCloud/NCP/09-Terraform-Workshop/01-intro_to_terraform_on_ncp/06-z-lab_terraform_cloud.html","title":"💻 Lab - Terraform Cloud 연결","lang":"ko-KR","frontmatter":{"description":"Naver Cloud Platform에서의 Terraform 실습","tag":["ncloud","ncp","terraform","workshop"],"head":[["meta",{"property":"og:url","content":"https://docmoa.github.io/03-PublicCloud/NCP/09-Terraform-Workshop/01-intro_to_terraform_on_ncp/06-z-lab_terraform_cloud.html"}],["meta",{"property":"og:site_name","content":"docmoa"}],["meta",{"property":"og:title","content":"💻 Lab - Terraform Cloud 연결"}],["meta",{"property":"og:description","content":"Naver Cloud Platform에서의 Terraform 실습"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2023-10-25T07:28:39.000Z"}],["meta",{"property":"article:tag","content":"ncloud"}],["meta",{"property":"article:tag","content":"ncp"}],["meta",{"property":"article:tag","content":"terraform"}],["meta",{"property":"article:tag","content":"workshop"}],["meta",{"property":"article:modified_time","content":"2023-10-25T07:28:39.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"💻 Lab - Terraform Cloud 연결\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-10-25T07:28:39.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":3,"title":"편집기에서 열기","slug":"편집기에서-열기","link":"#편집기에서-열기","children":[]},{"level":2,"title":"☁️ Terraform Configuration","slug":"☁️-terraform-configuration","link":"#☁️-terraform-configuration","children":[{"level":3,"title":"Terraform Cloud","slug":"terraform-cloud","link":"#terraform-cloud","children":[]},{"level":3,"title":"Remote State 저장소는 모든 사용자에게 무료입니다.","slug":"remote-state-저장소는-모든-사용자에게-무료입니다","link":"#remote-state-저장소는-모든-사용자에게-무료입니다","children":[]},{"level":3,"title":"Terraform Cloud 계정","slug":"terraform-cloud-계정","link":"#terraform-cloud-계정","children":[]}]},{"level":2,"title":"🎛️ Configure Remote State","slug":"🎛️-configure-remote-state","link":"#🎛️-configure-remote-state","children":[{"level":3,"title":"\\"Local\\" 실행 모드는 Terraform의 구성과 변수는 모두 워크스테이션에 남아있습니다.","slug":"local-실행-모드는-terraform의-구성과-변수는-모두-워크스테이션에-남아있습니다","link":"#local-실행-모드는-terraform의-구성과-변수는-모두-워크스테이션에-남아있습니다","children":[]},{"level":3,"title":"\\"Remote\\" 실행 모드로 전환하게 되면 Terraform Cloud 환경의 컨테이너 환경에서 실행됩니다.","slug":"remote-실행-모드로-전환하게-되면-terraform-cloud-환경의-컨테이너-환경에서-실행됩니다","link":"#remote-실행-모드로-전환하게-되면-terraform-cloud-환경의-컨테이너-환경에서-실행됩니다","children":[]},{"level":3,"title":"\\"Remote\\" 실행 모드로 전환 시, 변수구성은 Terraform Cloud 환경에 설정해야 합니다.","slug":"remote-실행-모드로-전환-시-변수구성은-terraform-cloud-환경에-설정해야-합니다","link":"#remote-실행-모드로-전환-시-변수구성은-terraform-cloud-환경에-설정해야-합니다","children":[]}]},{"level":2,"title":"🔥 Terraform Destroy","slug":"🔥-terraform-destroy","link":"#🔥-terraform-destroy","children":[{"level":3,"title":"Terraform은 인프라를 구축하는 것만큼 쉽게 인프라를 파괴할 수 있습니다.","slug":"terraform은-인프라를-구축하는-것만큼-쉽게-인프라를-파괴할-수-있습니다","link":"#terraform은-인프라를-구축하는-것만큼-쉽게-인프라를-파괴할-수-있습니다","children":[]},{"level":3,"title":"\\"terraform destroy\\"는 주의하여 사용하세요.","slug":"terraform-destroy-는-주의하여-사용하세요","link":"#terraform-destroy-는-주의하여-사용하세요","children":[]}]}],"git":{"createdTime":1634784217000,"updatedTime":1698218919000,"contributors":[{"name":"Great-Stone","email":"hahohh@gmail.com","commits":2}]},"readingTime":{"minutes":6.62,"words":397},"filePathRelative":"03-PublicCloud/NCP/09-Terraform-Workshop/01-intro_to_terraform_on_ncp/06-z-lab_terraform_cloud.md","localizedDate":"2021년 10월 21일","excerpt":"\\n<h3>편집기에서 열기</h3>\\n<figure><figcaption></figcaption></figure>\\n<ul>\\n<li>VSCode를 실행하고 File(파일) 메뉴에서 <code>Open Folder...</code> 를 클릭합니다.</li>\\n<li>앞서 실습을 진행한 <code>lab02</code>을 열어줍니다.</li>\\n</ul>\\n<hr>\\n<h2>☁️ Terraform Configuration</h2>\\n<p>@slidestart blood</p>\\n<h3>Terraform Cloud</h3>\\n<h3>Remote State 저장소는 모든 사용자에게 무료입니다.</h3>"}');export{P as comp,B as data};
