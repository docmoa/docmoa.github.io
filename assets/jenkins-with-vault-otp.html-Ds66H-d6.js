import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as e,o as t,c as p,a as s,b as l,w as i,h as o,g as c}from"./app-DVMlqOhY.js";const r="/assets/vault_jenkins_token-D1JgiZG6.png",u={},d=s("h1",{id:"jenkins-with-vault-otp",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#jenkins-with-vault-otp"},[s("span",null,"jenkins with vault otp")])],-1),k=s("p",null,"jenkins와 vault otp를 연동하여 pipe line에서 ssh/scp test",-1),v=s("h2",{id:"otp-설정은-docmoa의-ssh-otp-참고",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#otp-설정은-docmoa의-ssh-otp-참고"},[s("span",null,"otp 설정은 docmoa의 ssh-otp 참고")])],-1),h=o(`<h2 id="vault-token-설정" tabindex="-1"><a class="header-anchor" href="#vault-token-설정"><span>vault token 설정</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token comment"># ssh 권한을 사용 할 policy 생성</span></span>
<span class="line">$ <span class="token function">tee</span> ssh-policy.hcl <span class="token operator">&lt;&lt;</span><span class="token string">EOF</span>
<span class="line"># To list SSH secrets paths</span>
<span class="line">path &quot;ssh/*&quot; {</span>
<span class="line">  capabilities = [ &quot;list&quot; ]</span>
<span class="line">}</span>
<span class="line"># To use the configured SSH secrets engine otp_key_role role</span>
<span class="line">path &quot;ssh/creds/otp_key_role&quot; {</span>
<span class="line">  capabilities = [&quot;create&quot;, &quot;read&quot;, &quot;update&quot;]</span>
<span class="line">}</span>
<span class="line">EOF</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">#ssh(otp) 정책 생성</span></span>
<span class="line">$ vault policy <span class="token function">write</span> <span class="token function">ssh</span> ssh-policy.hcl</span>
<span class="line"></span>
<span class="line"><span class="token comment">#rest api에서 사용 할 token 생성</span></span>
<span class="line">$ vault token create <span class="token parameter variable">-policy</span><span class="token operator">=</span>ssh</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="otp-token을-활용하여-jenkins-credentials-생성" tabindex="-1"><a class="header-anchor" href="#otp-token을-활용하여-jenkins-credentials-생성"><span>otp token을 활용하여 jenkins credentials 생성</span></a></h2><figure><img src="`+r+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="otp를-사용한-ssh-scp-pipe-line" tabindex="-1"><a class="header-anchor" href="#otp를-사용한-ssh-scp-pipe-line"><span>otp를 사용한 ssh, scp pipe line</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">// jenkins pipe line v1</span>
<span class="line">pipeline <span class="token punctuation">{</span></span>
<span class="line">    agent any</span>
<span class="line">    environment <span class="token punctuation">{</span></span>
<span class="line">      // 위에서 생성한 credential <span class="token function">id</span></span>
<span class="line">      ssh_token <span class="token operator">=</span> credentials<span class="token punctuation">(</span><span class="token string">&#39;vault_ssh_token&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    options <span class="token punctuation">{</span></span>
<span class="line">        buildDiscarder<span class="token punctuation">(</span>logRotator<span class="token punctuation">(</span>numToKeepStr: <span class="token string">&#39;20&#39;</span><span class="token punctuation">))</span></span>
<span class="line">        disableConcurrentBuilds<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    stages<span class="token punctuation">{</span>   </span>
<span class="line">      stage<span class="token punctuation">(</span><span class="token string">&#39;SSH&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          steps<span class="token punctuation">{</span></span>
<span class="line">            // <span class="token number">1</span>. curl로 받아 온 password를 변수에 담음</span>
<span class="line">            // <span class="token number">2</span>. ssh에 자동으로 패스워드를 입력하기 위해 sshpass 명령어 추가 사용 </span>
<span class="line">            // <span class="token parameter variable">-o</span> <span class="token assign-left variable">StrictHostKeyChecking</span><span class="token operator">=</span>no는 최초 로그인에 known_hosts에 등록하는 문구 무시</span>
<span class="line">            // scp도 동일하게 사용 가능</span>
<span class="line">            // 주의할점은 다음라인은 jenkins 서버로 돌아온다.</span>
<span class="line">            <span class="token function">sh</span> <span class="token string">&#39;&#39;</span>&#39;</span>
<span class="line">            <span class="token assign-left variable">ssh_passwd</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">curl</span> <span class="token parameter variable">--header</span> <span class="token string">&quot;X-Vault-Token: <span class="token variable">$ssh_token</span>&quot;</span> <span class="token parameter variable">--request</span> POST <span class="token parameter variable">--data</span> <span class="token string">&#39;{&quot;ip&quot;: &quot;172.21.2.56&quot;}&#39;</span> http://172.21.2.50:8200/v1/ssh/creds/otp_key_role  <span class="token operator">|</span> jq <span class="token string">&quot;.data.key&quot;</span> <span class="token operator">|</span> <span class="token function">tr</span> <span class="token parameter variable">-d</span> <span class="token string">&#39;&quot;&quot;&#39;</span><span class="token variable">)</span></span></span>
<span class="line">            sshpass <span class="token parameter variable">-p</span> <span class="token variable">$ssh_passwd</span> <span class="token function">ssh</span> ubuntu@172.21.2.56 <span class="token parameter variable">-o</span> <span class="token assign-left variable">StrictHostKeyChecking</span><span class="token operator">=</span>no <span class="token string">&quot;cd /usr/local \\</span>
<span class="line">            &amp;&amp; ls -la \\</span>
<span class="line">            &amp;&amp; pwd&quot;</span></span>
<span class="line"></span>
<span class="line">            <span class="token assign-left variable">ssh_passwd</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">curl</span> <span class="token parameter variable">--header</span> <span class="token string">&quot;X-Vault-Token: <span class="token variable">$ssh_token</span>&quot;</span> <span class="token parameter variable">--request</span> POST <span class="token parameter variable">--data</span> <span class="token string">&#39;{&quot;ip&quot;: &quot;172.21.2.56&quot;}&#39;</span> http://172.21.2.50:8200/v1/ssh/creds/otp_key_role  <span class="token operator">|</span> jq <span class="token string">&quot;.data.key&quot;</span> <span class="token operator">|</span> <span class="token function">tr</span> <span class="token parameter variable">-d</span> <span class="token string">&#39;&quot;&quot;&#39;</span><span class="token variable">)</span></span></span>
<span class="line">            sshpass <span class="token parameter variable">-p</span> <span class="token variable">$ssh_passwd</span> <span class="token function">scp</span> <span class="token parameter variable">-o</span> <span class="token assign-left variable">StrictHostKeyChecking</span><span class="token operator">=</span>no ~/a ubuntu@172.21.2.56:~/test </span>
<span class="line">            <span class="token string">&#39;&#39;</span>&#39;</span>
<span class="line">          <span class="token punctuation">}</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6);function m(b,g){const n=e("RouteLink");return t(),p("div",null,[d,k,v,s("ul",null,[s("li",null,[l(n,{to:"/04-HashiCorp/06-Vault/02-Secret_Engine/ssh-otp-redhat.html"},{default:i(()=>[c("OTP 설정 링크")]),_:1})])]),h])}const y=a(u,[["render",m],["__file","jenkins-with-vault-otp.html.vue"]]),q=JSON.parse('{"path":"/04-HashiCorp/06-Vault/04-UseCase/jenkins-with-vault-otp.html","title":"jenkins with vault otp","lang":"ko-KR","frontmatter":{"description":"Vault를 활용하여 jenkins에 ssh(otp) 활용","tag":["vault","jenkins","otp","token"],"head":[["meta",{"property":"og:url","content":"https://docmoa.github.io/04-HashiCorp/06-Vault/04-UseCase/jenkins-with-vault-otp.html"}],["meta",{"property":"og:site_name","content":"docmoa"}],["meta",{"property":"og:title","content":"jenkins with vault otp"}],["meta",{"property":"og:description","content":"Vault를 활용하여 jenkins에 ssh(otp) 활용"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2023-09-18T13:12:54.000Z"}],["meta",{"property":"article:tag","content":"vault"}],["meta",{"property":"article:tag","content":"jenkins"}],["meta",{"property":"article:tag","content":"otp"}],["meta",{"property":"article:tag","content":"token"}],["meta",{"property":"article:modified_time","content":"2023-09-18T13:12:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"jenkins with vault otp\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-18T13:12:54.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"otp 설정은 docmoa의 ssh-otp 참고","slug":"otp-설정은-docmoa의-ssh-otp-참고","link":"#otp-설정은-docmoa의-ssh-otp-참고","children":[]},{"level":2,"title":"vault token 설정","slug":"vault-token-설정","link":"#vault-token-설정","children":[]},{"level":2,"title":"otp token을 활용하여 jenkins credentials 생성","slug":"otp-token을-활용하여-jenkins-credentials-생성","link":"#otp-token을-활용하여-jenkins-credentials-생성","children":[]},{"level":2,"title":"otp를 사용한 ssh, scp pipe line","slug":"otp를-사용한-ssh-scp-pipe-line","link":"#otp를-사용한-ssh-scp-pipe-line","children":[]}],"git":{"createdTime":1645000713000,"updatedTime":1695042774000,"contributors":[{"name":"ung","email":"swbs90@naver.com","commits":3},{"name":"Great-Stone","email":"hahohh@gmail.com","commits":1},{"name":"admin","email":"sulee@expernet.co.kr","commits":1}]},"readingTime":{"minutes":3.3,"words":198},"filePathRelative":"04-HashiCorp/06-Vault/04-UseCase/jenkins-with-vault-otp.md","localizedDate":"2022년 2월 16일","excerpt":"\\n<p>jenkins와 vault otp를 연동하여 pipe line에서 ssh/scp test</p>\\n<h2>otp 설정은 docmoa의 ssh-otp 참고</h2>\\n<ul>\\n<li><a href=\\"/04-HashiCorp/06-Vault/02-Secret_Engine/ssh-otp-redhat.html\\" target=\\"_blank\\">OTP 설정 링크</a></li>\\n</ul>\\n<h2>vault token 설정</h2>\\n<div class=\\"language-bash\\" data-highlighter=\\"prismjs\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"line\\"><span class=\\"token comment\\"># ssh 권한을 사용 할 policy 생성</span></span>\\n<span class=\\"line\\">$ <span class=\\"token function\\">tee</span> ssh-policy.hcl <span class=\\"token operator\\">&lt;&lt;</span><span class=\\"token string\\">EOF</span>\\n<span class=\\"line\\"># To list SSH secrets paths</span>\\n<span class=\\"line\\">path \\"ssh/*\\" {</span>\\n<span class=\\"line\\">  capabilities = [ \\"list\\" ]</span>\\n<span class=\\"line\\">}</span>\\n<span class=\\"line\\"># To use the configured SSH secrets engine otp_key_role role</span>\\n<span class=\\"line\\">path \\"ssh/creds/otp_key_role\\" {</span>\\n<span class=\\"line\\">  capabilities = [\\"create\\", \\"read\\", \\"update\\"]</span>\\n<span class=\\"line\\">}</span>\\n<span class=\\"line\\">EOF</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span class=\\"token comment\\">#ssh(otp) 정책 생성</span></span>\\n<span class=\\"line\\">$ vault policy <span class=\\"token function\\">write</span> <span class=\\"token function\\">ssh</span> ssh-policy.hcl</span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span class=\\"token comment\\">#rest api에서 사용 할 token 생성</span></span>\\n<span class=\\"line\\">$ vault token create <span class=\\"token parameter variable\\">-policy</span><span class=\\"token operator\\">=</span>ssh</span>\\n<span class=\\"line\\"></span></code></pre></div>"}');export{y as comp,q as data};
