import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r,o as n,c as i,b as o,h as a}from"./app-DVMlqOhY.js";const s="/assets/rag-YVGMfsuB.png",l="/assets/rag-finetuning-BxyjqYxt.png",h="/assets/data-compliance-CRsiiiQG.png",g="/assets/encryption_architecture-wjZ9FVDH.png",p="/assets/component--2LG09UI.png",c="/assets/result3-D2p1a7Yj.png",d={},u=a('<h1 id="안전한-rag-시스템-구축-hashicorp-vault와-amazon-bedrock-활용" tabindex="-1"><a class="header-anchor" href="#안전한-rag-시스템-구축-hashicorp-vault와-amazon-bedrock-활용"><span>안전한 RAG 시스템 구축: HashiCorp Vault와 Amazon Bedrock 활용</span></a></h1><h2 id="개요" tabindex="-1"><a class="header-anchor" href="#개요"><span>개요</span></a></h2><p>AI 기술의 발전과 함께 기업들은 데이터를 더 효과적으로 활용하기 위한 새로운 방법들을 모색하고 있습니다. 특히, <strong>생성형 AI(GenAI)</strong> 와 <strong>대규모 언어 모델(LLM)</strong> 은 조직이 데이터를 처리하고 활용하는 방식을 변화시키는 핵심 도구로 자리 잡고 있습니다. 하지만 기존의 LLM은 사전에 학습된 데이터에만 의존하기 때문에 최신 정보에 접근하거나 조직 내 특정 요구사항에 맞춘 답변을 제공하는 데 한계가 있습니다.</p><p>이러한 한계를 해결하기 위해 등장한 기술이 바로 <strong>Retrieval-Augmented Generation (RAG)</strong> 입니다. RAG는 모델이 외부 데이터 소스를 검색하여 최신 정보를 통합하고, 이를 기반으로 맞춤형 답변을 생성할 수 있도록 합니다. 이를 통해 조직은 더 정교하고 유용한 지식 기반 시스템을 구축할 수 있습니다. 그러나 RAG 시스템은 개인정보(PII), 민감정보, 클라우드 자격 증명 등 중요한 데이터를 다룰 수밖에 없기에 데이터 보안과 보호가 필수적입니다.</p><p><strong>HashiCorp Vault</strong> 는 이러한 민감정보를 안전하게 관리하고 보호할 수 있는 강력한 솔루션입니다. Vault는 <strong>Transit 암호화, Tokenization, Masking, FPE(형태 보존 암호화)</strong> 등의 기능을 통해 데이터를 안전하게 암호화하고, 컴플라이언스와 규제 요구사항을 충족할 수 있도록 지원합니다.</p><figure><img src="'+s+'" alt="참고: Vault Masking 기능을 활용한 안전한 데이터 파이프라인 예시" tabindex="0" loading="lazy"><figcaption>참고: Vault Masking 기능을 활용한 안전한 데이터 파이프라인 예시</figcaption></figure><p>본 포스팅에서는 AWS 환경에서 <strong>Amazon Bedrock</strong> 과 함께 RAG를 구축하는 방법을 소개하며, Vault를 활용해 민감정보를 안전하게 보호하는 방안을 설명합니다.</p><div class="hint-container tip"><p class="hint-container-title">💡 감사한 분(Special Thanks)</p><p>본 글은 HashiCorp의 <a href="https://www.linkedin.com/in/david-wright-57336a4/" target="_blank" rel="noopener noreferrer">David Wright</a>의 <a href="https://github.com/dawright22/aws-rag-terraform-deployment-demo" target="_blank" rel="noopener noreferrer">GitHub 저장소</a> 데모 시나리오를 분석 및 참고하여 작성되었습니다.</p></div><hr><h2 id="도입부-ai와-llm-그리고-genai" tabindex="-1"><a class="header-anchor" href="#도입부-ai와-llm-그리고-genai"><span>도입부: AI와 LLM, 그리고 GenAI</span></a></h2><h3 id="ai-기술의-발전과-llm의-등장" tabindex="-1"><a class="header-anchor" href="#ai-기술의-발전과-llm의-등장"><span>AI 기술의 발전과 LLM의 등장</span></a></h3><p>최근 AI는 기업의 데이터 활용 방식에 중요한 변화를 가져오고 있습니다. 특히, <strong>대규모 언어 모델(LLM)</strong> 은 사람처럼 자연스러운 문장을 이해하고 답변을 생성할 수 있어, 비즈니스 전반에서 폭넓게 활용되고 있습니다. 예를 들어, 자동화된 고객 지원, 문서 검색 및 요약, 그리고 맞춤형 데이터 분석이 대표적인 응용 사례입니다.</p><h3 id="rag의-필요성" tabindex="-1"><a class="header-anchor" href="#rag의-필요성"><span>RAG의 필요성</span></a></h3><p>기존의 LLM은 사전 학습된 데이터만을 기반으로 하기 때문에, 최신 정보나 특정 조직의 요구사항을 반영하기 어렵습니다. <strong>Retrieval-Augmented Generation (RAG)</strong> 은 이러한 문제를 해결하기 위해 등장한 기술로, 외부 데이터 소스에서 정보를 검색하고 이를 모델의 응답에 통합할 수 있게 합니다.</p><h4 id="rag의-주요-특징" tabindex="-1"><a class="header-anchor" href="#rag의-주요-특징"><span>RAG의 주요 특징:</span></a></h4><ol><li><strong>외부 데이터 검색</strong>: <ul><li>문서, 데이터베이스, API 등 외부 소스에서 최신 데이터를 검색하여 모델에 통합.</li></ul></li><li><strong>유연한 데이터 업데이트</strong>: <ul><li>기존 모델을 재학습하지 않고도 새로운 데이터를 쉽게 반영.</li></ul></li></ol><h4 id="rag-vs-파인튜닝" tabindex="-1"><a class="header-anchor" href="#rag-vs-파인튜닝"><span>RAG vs. 파인튜닝:</span></a></h4><ul><li><strong>비용 효율성</strong>: 별도의 모델 재학습 과정이 필요하지 않아 비용과 시간이 절약됩니다.</li><li><strong>유연성</strong>: 외부 데이터 소스를 변경함으로써 다양한 질문에 대응할 수 있습니다.</li></ul><figure><img src="'+l+'" alt="RAG vs 파인튜닝(출처: 스켈터랩스)" tabindex="0" loading="lazy"><figcaption>RAG vs 파인튜닝(출처: 스켈터랩스)</figcaption></figure><hr><h2 id="hashicorp-vault를-활용한-rag-시스템-보호" tabindex="-1"><a class="header-anchor" href="#hashicorp-vault를-활용한-rag-시스템-보호"><span>HashiCorp Vault를 활용한 RAG 시스템 보호</span></a></h2><p>RAG 시스템은 외부 데이터를 검색하고 이를 처리하는 과정에서 <strong>민감정보(PII, 시크릿, 기밀 데이터)</strong> 를 포함할 가능성이 큽니다. 이러한 데이터를 안전하게 관리하지 않으면 데이터 유출, 규제 위반, 기업 신뢰 손실로 이어질 수 있습니다.</p><h3 id="왜-rag-시스템이-안전하게-관리되어야-하는가" tabindex="-1"><a class="header-anchor" href="#왜-rag-시스템이-안전하게-관리되어야-하는가"><span>왜 RAG 시스템이 안전하게 관리되어야 하는가?</span></a></h3><h4 id="_1-컴플라이언스와-규제-준수" tabindex="-1"><a class="header-anchor" href="#_1-컴플라이언스와-규제-준수"><span>1) <strong>컴플라이언스와 규제 준수</strong></span></a></h4><ul><li><strong>GDPR, CCPA, HIPAA</strong>와 같은 글로벌 데이터 보호 규정은 개인정보와 민감정보를 안전하게 관리할 것을 요구합니다.</li><li>Vault를 사용하면 이러한 규정을 충족하기 위해 필요한 암호화, 액세스 제어, 로그 기록 등을 효과적으로 구현할 수 있습니다.</li></ul><figure><img src="'+h+'" alt="글로벌 데이터 컴플라이언스 예시(출처: Penta Security)" tabindex="0" loading="lazy"><figcaption>글로벌 데이터 컴플라이언스 예시(출처: Penta Security)</figcaption></figure><h4 id="_2-거버넌스와-보안-강화" tabindex="-1"><a class="header-anchor" href="#_2-거버넌스와-보안-강화"><span>2) <strong>거버넌스와 보안 강화</strong></span></a></h4><ul><li>기업은 데이터를 중앙에서 관리하며, 누가 어떤 데이터를 사용하는지 명확히 추적해야 합니다.</li><li>Vault는 암호화 키 관리와 동적 자격 증명 제공으로 데이터 거버넌스를 강화합니다.</li></ul><h4 id="_3-데이터-유출-방지" tabindex="-1"><a class="header-anchor" href="#_3-데이터-유출-방지"><span>3) <strong>데이터 유출 방지</strong></span></a></h4><ul><li>문서 데이터나 검색 결과가 외부로 유출될 경우, 암호화된 데이터는 안전성을 유지합니다.</li></ul><hr><h3 id="vault의-주요-암호화-기능" tabindex="-1"><a class="header-anchor" href="#vault의-주요-암호화-기능"><span>Vault의 주요 암호화 기능</span></a></h3><p><strong>HashiCorp Vault</strong> 는 RAG 시스템에서 발생하는 보안 문제를 해결하기 위해 다음과 같은 주요 암호화 기능을 제공합니다:</p><h4 id="_1-transit-암호화" tabindex="-1"><a class="header-anchor" href="#_1-transit-암호화"><span>1) Transit 암호화</span></a></h4><ul><li><strong>특징</strong>: 데이터를 실시간으로 암호화 및 복호화하여 데이터베이스나 파일 시스템에 안전하게 저장.</li><li><strong>적용 예시</strong>: 문서 데이터베이스에 저장하기 전에 민감정보를 암호화하여 안전성을 확보.</li></ul><h4 id="_2-형식-보존-암호화-fpe-format-preserving-encryption" tabindex="-1"><a class="header-anchor" href="#_2-형식-보존-암호화-fpe-format-preserving-encryption"><span>2) 형식 보존 암호화 (FPE, Format-Preserving Encryption)</span></a></h4><ul><li><strong>특징</strong>: 데이터의 원래 형식을 유지하면서 암호화하여 데이터 분석 및 처리 시에도 활용 가능.</li><li><strong>적용 예시</strong>: 신용카드 번호 <code>1234-5678-9101-1121</code>을 <code>9834-2647-8101-7532</code>와 같이 형식을 유지한 상태로 암호화.</li></ul><h4 id="_3-데이터-마스킹-masking" tabindex="-1"><a class="header-anchor" href="#_3-데이터-마스킹-masking"><span>3) 데이터 마스킹 (Masking)</span></a></h4><ul><li><strong>특징</strong>: 데이터 조회 시 민감한 정보를 제거하거나 대체하여 접근 권한이 없는 사용자의 데이터 노출을 최소화.</li><li><strong>적용 예시</strong>: 검색 결과에 포함된 신용카드 번호를 <code>****-****-****-1234</code> 형식으로 마스킹 처리.</li></ul><h4 id="_4-스토리지-레벨-암호화-tde-transparent-data-encryption" tabindex="-1"><a class="header-anchor" href="#_4-스토리지-레벨-암호화-tde-transparent-data-encryption"><span>4) 스토리지 레벨 암호화 (TDE, Transparent Data Encryption)</span></a></h4><ul><li><strong>특징</strong>: 데이터가 저장될 때 데이터베이스나 스토리지 계층에서 암호화를 수행.</li><li><strong>적용 예시</strong>: 외부 데이터베이스의 암호화 기능과 Vault를 통합하여 저장소에서 데이터를 안전하게 보호.</li></ul><figure><img src="'+g+'" alt="참고: Vault을 활용한 암호화 방안 통합 아키텍처" tabindex="0" loading="lazy"><figcaption>참고: Vault을 활용한 암호화 방안 통합 아키텍처</figcaption></figure><hr><h2 id="구현-방안-github-terraform-코드와-샘플-코드-활용" tabindex="-1"><a class="header-anchor" href="#구현-방안-github-terraform-코드와-샘플-코드-활용"><span>구현 방안: GitHub Terraform 코드와 샘플 코드 활용</span></a></h2><div class="hint-container tip"><p class="hint-container-title">Terraform 코드와 샘플 코드</p><p>Vault와 RAG를 통합한 상세한 구현 방법은 GitHub에 업로드된 <a href="https://github.com/hyungwook0221/aws-rag-terraform-deployment-demo" target="_blank" rel="noopener noreferrer">Terraform 코드와 샘플 코드</a>를 참고하세요.</p></div><h3 id="구현-기술" tabindex="-1"><a class="header-anchor" href="#구현-기술"><span>구현 기술:</span></a></h3><ul><li><strong>FAISS</strong>: 문서 벡터화 및 검색.</li><li><strong>LangChain</strong>: 데이터 검색과 LLM 통합.</li><li><strong>Streamlit</strong>: 사용자 인터페이스 구성.</li><li><strong>Amazon Bedrock</strong>: LLM을 통한 응답 생성.</li><li><strong>HashiCorp Vault</strong>: 데이터 암호화 기능 제공.</li></ul><figure><img src="'+p+'" alt="사진: 주요 컴포넌트 로고" tabindex="0" loading="lazy"><figcaption>사진: 주요 컴포넌트 로고</figcaption></figure><hr><h2 id="주요-동작-프로세스" tabindex="-1"><a class="header-anchor" href="#주요-동작-프로세스"><span>주요 동작 프로세스</span></a></h2>',50),m=a('<h2 id="핸즈온-실습-결과화면-예시" tabindex="-1"><a class="header-anchor" href="#핸즈온-실습-결과화면-예시"><span>핸즈온 실습 결과화면 예시</span></a></h2><p>제공된 샘플 데이터 중에서 AWS 자격 증명과 같은 민감정보는 Vault를 통해 암호화되어 저장되어 있으며 직접 조회가 불가능 하며, 별도 복호화 후 확인가능</p><figure><img src="'+c+'" alt="Vault 암호화 적용된 RAG 기반의 챗봇결과 예시" tabindex="0" loading="lazy"><figcaption>Vault 암호화 적용된 RAG 기반의 챗봇결과 예시</figcaption></figure><div class="hint-container warning"><p class="hint-container-title">💡 핸즈온 실습</p><p>각종 구성요소와 동작 방식에 대한 설명은 👉 <a href="https://github.com/hyungwook0221/aws-rag-terraform-deployment-demo" target="_blank" rel="noopener noreferrer">여기</a>에서 확인하실 수 있습니다.</p></div>',4);function f(A,G){const t=r("Mermaid");return n(),i("div",null,[u,o(t,{id:"mermaid-258",code:"eJxtks1Og0AUhfc+xQ0rXPQVTKrGxARXNLogXRBt2saKBnFPU5qoaNTYxp8AgURTFyYixaYLn4i5vIPjDFLAsiHn3nM+hgNtXT3pQGNzBeiFtoPenSLwu9CEWm0NyPscLQcfhiRwyL1DtxMTbRdI5KMb4+VL5oDcAqJs6C31qNc1VoUmI1cgHPzxnYS36I/JNMbxKH2cp08jReBj4HPIFyDuqmc9Axq6qp0WwMsgHB8FqRXiwEXrk1KZAi5B3Kpvy3LOKDiLUd9E73URZbISxcn576t5Q+JTJ1fAZbkFzr0OaWUUlkQmDi4UIYlN4r8t5sAX1fOVY2UUBmH6fEVPmTP4BEh4A5K0A7QSnNFvIqlae6OjdrV/2CzAsPYXmdKHZKUxlZdW35NhvXWgH+8f5oyCvwiYOayQPwCTy36LgpvH+y5N9V26/wF7t1zw"}),m])}const v=e(d,[["render",f],["__file","Secured-RAG-with-Vault-on-aws.html.vue"]]),R=JSON.parse('{"path":"/04-HashiCorp/06-Vault/04-UseCase/Secured-RAG-with-Vault-on-aws.html","title":"안전한 RAG 시스템 구축: HashiCorp Vault와 Amazon Bedrock 활용","lang":"ko-KR","frontmatter":{"description":"안전한 RAG 시스템 구축: HashiCorp Vault와 Amazon Bedrock 활용 개요 AI 기술의 발전과 함께 기업들은 데이터를 더 효과적으로 활용하기 위한 새로운 방법들을 모색하고 있습니다. 특히, 생성형 AI(GenAI) 와 대규모 언어 모델(LLM) 은 조직이 데이터를 처리하고 활용하는 방식을 변화시...","head":[["meta",{"property":"og:url","content":"https://docmoa.github.io/04-HashiCorp/06-Vault/04-UseCase/Secured-RAG-with-Vault-on-aws.html"}],["meta",{"property":"og:site_name","content":"docmoa"}],["meta",{"property":"og:title","content":"안전한 RAG 시스템 구축: HashiCorp Vault와 Amazon Bedrock 활용"}],["meta",{"property":"og:description","content":"안전한 RAG 시스템 구축: HashiCorp Vault와 Amazon Bedrock 활용 개요 AI 기술의 발전과 함께 기업들은 데이터를 더 효과적으로 활용하기 위한 새로운 방법들을 모색하고 있습니다. 특히, 생성형 AI(GenAI) 와 대규모 언어 모델(LLM) 은 조직이 데이터를 처리하고 활용하는 방식을 변화시..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2025-01-07T10:04:50.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-07T10:04:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"안전한 RAG 시스템 구축: HashiCorp Vault와 Amazon Bedrock 활용\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-01-07T10:04:50.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"개요","slug":"개요","link":"#개요","children":[]},{"level":2,"title":"도입부: AI와 LLM, 그리고 GenAI","slug":"도입부-ai와-llm-그리고-genai","link":"#도입부-ai와-llm-그리고-genai","children":[{"level":3,"title":"AI 기술의 발전과 LLM의 등장","slug":"ai-기술의-발전과-llm의-등장","link":"#ai-기술의-발전과-llm의-등장","children":[]},{"level":3,"title":"RAG의 필요성","slug":"rag의-필요성","link":"#rag의-필요성","children":[]}]},{"level":2,"title":"HashiCorp Vault를 활용한 RAG 시스템 보호","slug":"hashicorp-vault를-활용한-rag-시스템-보호","link":"#hashicorp-vault를-활용한-rag-시스템-보호","children":[{"level":3,"title":"왜 RAG 시스템이 안전하게 관리되어야 하는가?","slug":"왜-rag-시스템이-안전하게-관리되어야-하는가","link":"#왜-rag-시스템이-안전하게-관리되어야-하는가","children":[]},{"level":3,"title":"Vault의 주요 암호화 기능","slug":"vault의-주요-암호화-기능","link":"#vault의-주요-암호화-기능","children":[]}]},{"level":2,"title":"구현 방안: GitHub Terraform 코드와 샘플 코드 활용","slug":"구현-방안-github-terraform-코드와-샘플-코드-활용","link":"#구현-방안-github-terraform-코드와-샘플-코드-활용","children":[{"level":3,"title":"구현 기술:","slug":"구현-기술","link":"#구현-기술","children":[]}]},{"level":2,"title":"주요 동작 프로세스","slug":"주요-동작-프로세스","link":"#주요-동작-프로세스","children":[]},{"level":2,"title":"핸즈온 실습 결과화면 예시","slug":"핸즈온-실습-결과화면-예시","link":"#핸즈온-실습-결과화면-예시","children":[]}],"git":{"createdTime":1736241800000,"updatedTime":1736244290000,"contributors":[{"name":"Hyungwook Yu","email":"hyungwook.yu@hashicorp.com","commits":3}]},"readingTime":{"minutes":3.55,"words":213},"filePathRelative":"04-HashiCorp/06-Vault/04-UseCase/Secured-RAG-with-Vault-on-aws.md","localizedDate":"2025년 1월 7일","excerpt":"\\n<h2>개요</h2>\\n<p>AI 기술의 발전과 함께 기업들은 데이터를 더 효과적으로 활용하기 위한 새로운 방법들을 모색하고 있습니다. 특히, <strong>생성형 AI(GenAI)</strong> 와 <strong>대규모 언어 모델(LLM)</strong> 은 조직이 데이터를 처리하고 활용하는 방식을 변화시키는 핵심 도구로 자리 잡고 있습니다. 하지만 기존의 LLM은 사전에 학습된 데이터에만 의존하기 때문에 최신 정보에 접근하거나 조직 내 특정 요구사항에 맞춘 답변을 제공하는 데 한계가 있습니다.</p>\\n<p>이러한 한계를 해결하기 위해 등장한 기술이 바로 <strong>Retrieval-Augmented Generation (RAG)</strong> 입니다. RAG는 모델이 외부 데이터 소스를 검색하여 최신 정보를 통합하고, 이를 기반으로 맞춤형 답변을 생성할 수 있도록 합니다. 이를 통해 조직은 더 정교하고 유용한 지식 기반 시스템을 구축할 수 있습니다. 그러나 RAG 시스템은 개인정보(PII), 민감정보, 클라우드 자격 증명 등 중요한 데이터를 다룰 수밖에 없기에 데이터 보안과 보호가 필수적입니다.</p>","autoDesc":true}');export{v as comp,R as data};
