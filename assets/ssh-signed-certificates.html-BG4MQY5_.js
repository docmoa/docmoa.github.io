import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as e,h as n}from"./app-DVMlqOhY.js";const t={},l=n(`<h1 id="ssh-signed-certificates" tabindex="-1"><a class="header-anchor" href="#ssh-signed-certificates"><span>SSH - Signed Certificates</span></a></h1><h2 id="vault설정" tabindex="-1"><a class="header-anchor" href="#vault설정"><span>Vault설정</span></a></h2><p>시크릿 엔진 활성화</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">$ vault secrets <span class="token builtin class-name">enable</span> <span class="token parameter variable">-path</span><span class="token operator">=</span>ssh-client-signer <span class="token function">ssh</span></span>
<span class="line"></span></code></pre></div><h2 id="구성-생성" tabindex="-1"><a class="header-anchor" href="#구성-생성"><span>구성 생성</span></a></h2><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">$ vault <span class="token function">write</span> ssh-client-signer/config/ca <span class="token assign-left variable">generate_signing_key</span><span class="token operator">=</span>true</span>
<span class="line">Key           Value</span>
<span class="line">---           -----</span>
<span class="line">public_key    <span class="token punctuation">..</span>.</span>
<span class="line"></span></code></pre></div><p>keypair가 이미 있는 경우</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">$ vault <span class="token function">write</span> ssh-client-signer/config/ca <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token assign-left variable">private_key</span><span class="token operator">=</span><span class="token string">&quot;...&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token assign-left variable">public_key</span><span class="token operator">=</span><span class="token string">&quot;...&quot;</span></span>
<span class="line"></span></code></pre></div><h2 id="구성에서-public-key-가져오기" tabindex="-1"><a class="header-anchor" href="#구성에서-public-key-가져오기"><span>구성에서 public key 가져오기</span></a></h2><h3 id="api" tabindex="-1"><a class="header-anchor" href="#api"><span>API</span></a></h3><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">$ <span class="token function">curl</span> <span class="token parameter variable">-o</span> /etc/ssh/trusted-user-ca-keys.pem http://127.0.0.1:8200/v1/ssh-client-signer/public_key</span>
<span class="line"></span></code></pre></div><h3 id="cli" tabindex="-1"><a class="header-anchor" href="#cli"><span>CLI</span></a></h3><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">$ vault <span class="token builtin class-name">read</span> <span class="token parameter variable">-field</span><span class="token operator">=</span>public_key ssh-client-signer/config/ca <span class="token operator">&gt;</span> /tmp/trusted-user-ca-keys.pem</span>
<span class="line">$ /tmp/trusted-user-ca-keys.pem</span>
<span class="line">/etc/ssh/trusted-user-ca-keys.pem로 복사</span>
<span class="line"></span></code></pre></div><h2 id="ssh-설정" tabindex="-1"><a class="header-anchor" href="#ssh-설정"><span>SSH 설정</span></a></h2><p><code>/etc/ssh/sshd_config</code> 파일의 <code>TrustedUserCAKeys</code> 부분을 수정</p><blockquote><p>이미 있는 옵션은 값 수정, 없는 옵션은 추가</p></blockquote><div class="language-properties" data-highlighter="prismjs" data-ext="properties" data-title="properties"><pre class="language-properties"><code><span class="line"><span class="token key attr-name">TrustedUserCAKeys</span> <span class="token value attr-value">/etc/ssh/trusted-user-ca-keys.pem</span></span>
<span class="line"></span></code></pre></div><p>ssh 서비스 재시작</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">$ systemctl restart sshd</span>
<span class="line"></span></code></pre></div><h2 id="키-서명을-위한-role-생성" tabindex="-1"><a class="header-anchor" href="#키-서명을-위한-role-생성"><span>키 서명을 위한 Role 생성</span></a></h2><p>TTL 2분</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">$ vault <span class="token function">write</span> ssh-client-signer/roles/my-role - <span class="token operator">&lt;&lt;</span><span class="token string">EOF</span>
<span class="line">{</span>
<span class="line">  &quot;allow_user_certificates&quot;: true,</span>
<span class="line">  &quot;allowed_users&quot;: &quot;*&quot;,</span>
<span class="line">  &quot;allowed_extensions&quot;: &quot;permit-pty,permit-port-forwarding&quot;,</span>
<span class="line">  &quot;default_extensions&quot;: [</span>
<span class="line">    {</span>
<span class="line">      &quot;permit-pty&quot;: &quot;&quot;</span>
<span class="line">    }</span>
<span class="line">  ],</span>
<span class="line">  &quot;key_type&quot;: &quot;ca&quot;,</span>
<span class="line">  &quot;default_user&quot;: &quot;test&quot;,</span>
<span class="line">  &quot;ttl&quot;: &quot;0m20s&quot;</span>
<span class="line">}</span>
<span class="line">EOF</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="client-ssh-authentication" tabindex="-1"><a class="header-anchor" href="#client-ssh-authentication"><span>Client SSH Authentication</span></a></h2><ol><li><p>클라이언트에서 SSH에서 사용할 Keypair를 생성</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">$ ssh-keygen <span class="token parameter variable">-t</span> rsa <span class="token parameter variable">-C</span> <span class="token string">&quot;test@rocky&quot;</span></span>
<span class="line">Generating public/private rsa key pair.</span>
<span class="line">Enter <span class="token function">file</span> <span class="token keyword">in</span> <span class="token function">which</span> to save the key <span class="token punctuation">(</span>/Users/gs/.ssh/id_rsa<span class="token punctuation">)</span>: /Users/gs/.ssh/vault_rsa</span>
<span class="line"></span></code></pre></div><ul><li><code>-C</code> : 코맨트 옵션</li></ul></li><li><p>Vault에 생성한 키 중 공개키 (.pub)에 대한 서명 요청</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">$ vault <span class="token function">write</span> ssh-client-signer/sign/my-role <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token assign-left variable">public_key</span><span class="token operator">=</span>@<span class="token environment constant">$HOME</span>/.ssh/vault_rsa.pub</span>
<span class="line">    </span>
<span class="line">Key             Value</span>
<span class="line">---             -----</span>
<span class="line">serial_number   c73f26d2340276aa</span>
<span class="line">signed_key      ssh-rsa-cert-v01@openssh.com AAAAHHNzaC1<span class="token punctuation">..</span>.</span>
<span class="line"></span></code></pre></div><ul><li>signed_key는 또다른 public key</li></ul><p>위와 같은 방식으로 생성되는 추가 public key인 signed_key를 저장하고자 한다면 다음과 같은 방식으로 가능</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">$ vault <span class="token function">write</span> <span class="token parameter variable">-field</span><span class="token operator">=</span>signed_key ssh-client-signer/sign/my-role <span class="token assign-left variable">public_key</span><span class="token operator">=</span>@<span class="token environment constant">$HOME</span>/.ssh/vault_rsa.pub <span class="token operator">&gt;</span> /tmp/signed-cert.pub</span>
<span class="line">    </span>
<span class="line">$ vault <span class="token function">write</span> <span class="token parameter variable">-field</span><span class="token operator">=</span>signed_key ssh-client-signer/sign/my-role <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token assign-left variable">public_key</span><span class="token operator">=</span>@<span class="token environment constant">$HOME</span>/.ssh/vault_rsa.pub <span class="token operator">&gt;</span> <span class="token environment constant">$HOME</span>/.ssh/vault_rsa-cert.pub</span>
<span class="line"></span></code></pre></div></li><li><p>접속 하기</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">$ <span class="token function">ssh</span> <span class="token parameter variable">-i</span> /tmp/signed-cert.pub <span class="token parameter variable">-i</span> ~/.ssh/vault_rsa test@172.28.128.61</span>
<span class="line">$ <span class="token function">ssh</span> <span class="token parameter variable">-i</span> ~/.ssh/id_rsa test@172.28.128.61</span>
<span class="line"></span></code></pre></div></li></ol>`,24),i=[l];function p(c,r){return a(),e("div",null,i)}const h=s(t,[["render",p],["__file","ssh-signed-certificates.html.vue"]]),u=JSON.parse('{"path":"/04-HashiCorp/06-Vault/02-Secret_Engine/ssh-signed-certificates.html","title":"SSH - Signed Certificates","lang":"ko-KR","frontmatter":{"description":"Vault SSH 기능 - Signed Certificate 구성","tag":["vault","SSH"],"head":[["meta",{"property":"og:url","content":"https://docmoa.github.io/04-HashiCorp/06-Vault/02-Secret_Engine/ssh-signed-certificates.html"}],["meta",{"property":"og:site_name","content":"docmoa"}],["meta",{"property":"og:title","content":"SSH - Signed Certificates"}],["meta",{"property":"og:description","content":"Vault SSH 기능 - Signed Certificate 구성"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2023-09-18T13:12:54.000Z"}],["meta",{"property":"article:tag","content":"vault"}],["meta",{"property":"article:tag","content":"SSH"}],["meta",{"property":"article:modified_time","content":"2023-09-18T13:12:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SSH - Signed Certificates\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-18T13:12:54.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Vault설정","slug":"vault설정","link":"#vault설정","children":[]},{"level":2,"title":"구성 생성","slug":"구성-생성","link":"#구성-생성","children":[]},{"level":2,"title":"구성에서 public key 가져오기","slug":"구성에서-public-key-가져오기","link":"#구성에서-public-key-가져오기","children":[{"level":3,"title":"API","slug":"api","link":"#api","children":[]},{"level":3,"title":"CLI","slug":"cli","link":"#cli","children":[]}]},{"level":2,"title":"SSH 설정","slug":"ssh-설정","link":"#ssh-설정","children":[]},{"level":2,"title":"키 서명을 위한 Role 생성","slug":"키-서명을-위한-role-생성","link":"#키-서명을-위한-role-생성","children":[]},{"level":2,"title":"Client SSH Authentication","slug":"client-ssh-authentication","link":"#client-ssh-authentication","children":[]}],"git":{"createdTime":1628563561000,"updatedTime":1695042774000,"contributors":[{"name":"Administrator","email":"admin@example.com","commits":1},{"name":"Great-Stone","email":"hahohh@gmail.com","commits":1}]},"readingTime":{"minutes":3.7,"words":222},"filePathRelative":"04-HashiCorp/06-Vault/02-Secret_Engine/ssh-signed-certificates.md","localizedDate":"2021년 8월 10일","excerpt":"\\n<h2>Vault설정</h2>\\n<p>시크릿 엔진 활성화</p>\\n<div class=\\"language-bash\\" data-highlighter=\\"prismjs\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"line\\">$ vault secrets <span class=\\"token builtin class-name\\">enable</span> <span class=\\"token parameter variable\\">-path</span><span class=\\"token operator\\">=</span>ssh-client-signer <span class=\\"token function\\">ssh</span></span>\\n<span class=\\"line\\"></span></code></pre></div>"}');export{h as comp,u as data};
