import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as t,h as n}from"./app-DVMlqOhY.js";const e={},l=n(`<h1 id="vault-stress-test" tabindex="-1"><a class="header-anchor" href="#vault-stress-test"><span>Vault Stress Test</span></a></h1><blockquote><p>wrk github : <a href="https://github.com/wg/wrk" target="_blank" rel="noopener noreferrer">https://github.com/wg/wrk</a><br> transit : <a href="https://www.vaultproject.io/docs/secrets/transit" target="_blank" rel="noopener noreferrer">https://www.vaultproject.io/docs/secrets/transit</a></p></blockquote><h2 id="enable-transit" tabindex="-1"><a class="header-anchor" href="#enable-transit"><span>Enable Transit</span></a></h2><ol><li>Transit 시크릿 활성화</li></ol><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">$ vault secrets <span class="token builtin class-name">enable</span> transit</span>
<span class="line">Success<span class="token operator">!</span> Enabled the transit secrets engine at: transit/</span>
<span class="line"></span></code></pre></div><ol start="2"><li>암호화 키 생성</li></ol><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">$ vault <span class="token function">write</span> <span class="token parameter variable">-f</span> transit/keys/my-key</span>
<span class="line">Success<span class="token operator">!</span> Data written to: transit/keys/my-key</span>
<span class="line"></span></code></pre></div><ol start="3"><li>Test</li></ol><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">$ vault <span class="token function">write</span> transit/encrypt/my-key <span class="token assign-left variable">plaintext</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>base64 <span class="token operator">&lt;&lt;&lt;</span> <span class="token string">&quot;my secret data&quot;</span><span class="token variable">)</span></span></span>
<span class="line"></span>
<span class="line">Key           Value</span>
<span class="line">---           -----</span>
<span class="line">ciphertext    vault:v1:8SDd3WHDOjf7mq69CyCqYjBXAiQQAVZRkFM13ok481zoCmHnSeDX9vyf7w<span class="token operator">==</span></span>
<span class="line"></span></code></pre></div><h2 id="api-check" tabindex="-1"><a class="header-anchor" href="#api-check"><span>API Check</span></a></h2><div class="hint-container warning"><p class="hint-container-title">경고</p><ul><li>헤더에 <code>X-Vault-Token</code> 필요</li><li><code>plaintext</code> 데이터의 값은 base64 인코딩 필요</li></ul></div><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">curl</span> <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token parameter variable">-H</span> <span class="token string">&quot;X-Vault-Token: s.HeeRXjkW1KJhF8ofQsglI9yw&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token parameter variable">-X</span> POST <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token parameter variable">-d</span> <span class="token string">&quot;{<span class="token entity" title="\\&quot;">\\&quot;</span>plaintext<span class="token entity" title="\\&quot;">\\&quot;</span>:<span class="token entity" title="\\&quot;">\\&quot;</span>dGhlIHF1aWNrIGJyb3duIGZveAo=<span class="token entity" title="\\&quot;">\\&quot;</span>}&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">    http://192.168.60.103:8200/v1/transit/encrypt/my-key</span>
<span class="line"></span></code></pre></div><h2 id="부하테스트" tabindex="-1"><a class="header-anchor" href="#부하테스트"><span>부하테스트</span></a></h2><div class="hint-container tip"><p class="hint-container-title">팁</p><p>wrk 사용시 Vault Transit은 POST를 사용하므로 스크립트 작성이 필요</p></div><h3 id="_1-암호화-테스트" tabindex="-1"><a class="header-anchor" href="#_1-암호화-테스트"><span>1. 암호화 테스트</span></a></h3><ul><li><p>스크립트 작성</p><div class="language-lua" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token comment">-- enc.lua</span></span>
<span class="line">wrk<span class="token punctuation">.</span>method <span class="token operator">=</span> <span class="token string">&quot;POST&quot;</span></span>
<span class="line">wrk<span class="token punctuation">.</span>body   <span class="token operator">=</span> <span class="token string">&quot;{\\&quot;plaintext\\&quot;:\\&quot;dGhlIHF1aWNrIGJyb3duIGZveAo=\\&quot;}&quot;</span></span>
<span class="line">wrk<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&quot;X-Vault-Token&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;s.HeeRXjkW1KJhF8ofQsglI9yw&quot;</span></span>
<span class="line"></span></code></pre></div></li><li><p>실행</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">wrk <span class="token parameter variable">-c</span> <span class="token number">240</span> <span class="token parameter variable">-t</span> <span class="token number">8</span> <span class="token parameter variable">-d</span> 10s <span class="token parameter variable">-s</span> enc.lua http://192.168.60.103:8200/v1/transit/encrypt/my-key</span>
<span class="line"></span></code></pre></div></li></ul><h3 id="_2-복호화-테스트" tabindex="-1"><a class="header-anchor" href="#_2-복호화-테스트"><span>2. 복호화 테스트</span></a></h3><ul><li><p>스크립트 작성</p><div class="language-lua" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token comment">-- dec.lua</span></span>
<span class="line">wrk<span class="token punctuation">.</span>method <span class="token operator">=</span> <span class="token string">&quot;POST&quot;</span></span>
<span class="line">wrk<span class="token punctuation">.</span>body   <span class="token operator">=</span> <span class="token string">&quot;{\\&quot;ciphertext\\&quot;:\\&quot;vault:v1:I2JoSCrTduIDSI7BVIsFppwUop+YHFHejUbaHGeC7sb19CVZaYHEwicuJaXHxP/4\\&quot;}&quot;</span></span>
<span class="line">wrk<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&quot;X-Vault-Token&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;s.HeeRXjkW1KJhF8ofQsglI9yw&quot;</span></span>
<span class="line"></span></code></pre></div></li><li><p>실행</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">wrk <span class="token parameter variable">-c</span> <span class="token number">360</span> <span class="token parameter variable">-t</span> <span class="token number">12</span> <span class="token parameter variable">-d</span> 60s <span class="token parameter variable">-s</span> ./dec.lua http://192.168.60.103:8200/v1/transit/decrypt/my-key</span>
<span class="line"></span></code></pre></div></li></ul>`,18),p=[l];function r(o,i){return s(),t("div",null,p)}const h=a(e,[["render",r],["__file","transit-stress-test.html.vue"]]),d=JSON.parse('{"path":"/04-HashiCorp/06-Vault/04-UseCase/transit-stress-test.html","title":"Vault Stress Test","lang":"ko-KR","frontmatter":{"description":"Vault Transit Stress Test","tag":["vault","performance","transit"],"head":[["meta",{"property":"og:url","content":"https://docmoa.github.io/04-HashiCorp/06-Vault/04-UseCase/transit-stress-test.html"}],["meta",{"property":"og:site_name","content":"docmoa"}],["meta",{"property":"og:title","content":"Vault Stress Test"}],["meta",{"property":"og:description","content":"Vault Transit Stress Test"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2023-09-18T13:12:54.000Z"}],["meta",{"property":"article:tag","content":"vault"}],["meta",{"property":"article:tag","content":"performance"}],["meta",{"property":"article:tag","content":"transit"}],["meta",{"property":"article:modified_time","content":"2023-09-18T13:12:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Vault Stress Test\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-18T13:12:54.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Enable Transit","slug":"enable-transit","link":"#enable-transit","children":[]},{"level":2,"title":"API Check","slug":"api-check","link":"#api-check","children":[]},{"level":2,"title":"부하테스트","slug":"부하테스트","link":"#부하테스트","children":[{"level":3,"title":"1. 암호화 테스트","slug":"_1-암호화-테스트","link":"#_1-암호화-테스트","children":[]},{"level":3,"title":"2. 복호화 테스트","slug":"_2-복호화-테스트","link":"#_2-복호화-테스트","children":[]}]}],"git":{"createdTime":1647319815000,"updatedTime":1695042774000,"contributors":[{"name":"Administrator","email":"admin@example.com","commits":2},{"name":"Great-Stone","email":"hahohh@gmail.com","commits":1}]},"readingTime":{"minutes":2.55,"words":153},"filePathRelative":"04-HashiCorp/06-Vault/04-UseCase/transit-stress-test.md","localizedDate":"2022년 3월 15일","excerpt":"\\n<blockquote>\\n<p>wrk github : <a href=\\"https://github.com/wg/wrk\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://github.com/wg/wrk</a><br>\\ntransit : <a href=\\"https://www.vaultproject.io/docs/secrets/transit\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://www.vaultproject.io/docs/secrets/transit</a></p>\\n</blockquote>"}');export{h as comp,d as data};
