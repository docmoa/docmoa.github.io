import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as t,o as p,c as e,b as o,a,h as c}from"./app-DVMlqOhY.js";const l="/assets/aws-ui-terraform-apply-aborted-DIviU08F.png",r={},i=a("h1",{id:"terraform-apply-aborted-tainted",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#terraform-apply-aborted-tainted"},[a("span",null,"Terraform Apply Aborted - Tainted")])],-1),u=a("h2",{id:"정상-동작의-예",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#정상-동작의-예"},[a("span",null,"정상 동작의 예")])],-1),k=c(`<h2 id="terraform-apply-도중-네트워크가-끊긴다면" tabindex="-1"><a class="header-anchor" href="#terraform-apply-도중-네트워크가-끊긴다면"><span>Terraform Apply 도중 네트워크가 끊긴다면?</span></a></h2><p>클라우드들의 API의 경우 대부분 Sync로 동작하므로, Terraform이 생성 요청을 하면 그에 대한 응답을 받습니다. AWS의 경우 네트워크가 단절 되더라도, 이미 요청한 API 대한 응답을 AWS에서 반환하므로 timeout으로 인한 에러가발생 한 이후 응답을 기준으로 State가 작성됩니다. 다만 정상적인 완료 응답을 받지 못했으므로 Terraform State에는 해당 리소스는 <code>tainted</code>(불확실한) 상태로 기록됩니다.</p><p>Apply 후 Creating되는 도중 네트워크 절체하면 발생하는 에러 메시지는 다음과 같습니다.</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">Plan: <span class="token number">1</span> to add, <span class="token number">0</span> to change, <span class="token number">0</span> to destroy.</span>
<span class="line">aws_instance.web: Creating<span class="token punctuation">..</span>.</span>
<span class="line">aws_instance.web: Still creating<span class="token punctuation">..</span>. <span class="token punctuation">[</span>10s elapsed<span class="token punctuation">]</span></span>
<span class="line">aws_instance.web: Still creating<span class="token punctuation">..</span>. <span class="token punctuation">[</span>20s elapsed<span class="token punctuation">]</span></span>
<span class="line">aws_instance.web: Still creating<span class="token punctuation">..</span>. <span class="token punctuation">[</span>30s elapsed<span class="token punctuation">]</span></span>
<span class="line">aws_instance.web: Still creating<span class="token punctuation">..</span>. <span class="token punctuation">[</span>40s elapsed<span class="token punctuation">]</span></span>
<span class="line">aws_instance.web: Still creating<span class="token punctuation">..</span>. <span class="token punctuation">[</span>50s elapsed<span class="token punctuation">]</span></span>
<span class="line">╷</span>
<span class="line">│ Error: getting attribute <span class="token punctuation">(</span>userData<span class="token punctuation">)</span>: RequestError: send request failed</span>
<span class="line">│ caused by: Post <span class="token string">&quot;https://ec2.ap-northeast-2.amazonaws.com/&quot;</span><span class="token builtin class-name">:</span> dial tcp: lookup ec2.ap-northeast-2.amazonaws.com: no such <span class="token function">host</span></span>
<span class="line">│ </span>
<span class="line">│   with aws_instance.web,</span>
<span class="line">│   on main.tf line <span class="token number">21</span>, <span class="token keyword">in</span> resource <span class="token string">&quot;aws_instance&quot;</span> <span class="token string">&quot;web&quot;</span><span class="token builtin class-name">:</span></span>
<span class="line">│   <span class="token number">21</span>: resource <span class="token string">&quot;aws_instance&quot;</span> <span class="token string">&quot;web&quot;</span> <span class="token punctuation">{</span></span>
<span class="line"></span></code></pre></div><p>오류 이후 작성되는 State 및 <code>tainted</code>상태의 리소스(aws_instance) 정보는 다음과 같습니다.</p><div class="language-json" data-highlighter="prismjs" data-ext="json" data-title="json"><pre class="language-json"><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;terraform_version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1.8.0&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;serial&quot;</span><span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;lineage&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2c770c35-18c5-035d-b7f2-b569d6b326d6&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;outputs&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;resources&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">      <span class="token property">&quot;mode&quot;</span><span class="token operator">:</span> <span class="token string">&quot;managed&quot;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;aws_instance&quot;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;web&quot;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token property">&quot;provider&quot;</span><span class="token operator">:</span> <span class="token string">&quot;provider[\\&quot;registry.terraform.io/hashicorp/aws\\&quot;]&quot;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token property">&quot;instances&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">        <span class="token punctuation">{</span></span>
<span class="line highlighted">          <span class="token property">&quot;status&quot;</span><span class="token operator">:</span> <span class="token string">&quot;tainted&quot;</span><span class="token punctuation">,</span></span>
<span class="line">          <span class="token property">&quot;schema_version&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">          <span class="token property">&quot;attributes&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token property">&quot;ami&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ami-01ed8ade75d4eee2f&quot;</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token property">&quot;arn&quot;</span><span class="token operator">:</span> <span class="token string">&quot;arn:aws:ec2:ap-northeast-2:467567795630:instance/i-09e9cd90c86d46ecc&quot;</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token property">&quot;associate_public_ip_address&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token property">&quot;availability_zone&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ap-northeast-2a&quot;</span><span class="token punctuation">,</span></span>
<span class="line">       ...</span>
<span class="line">            <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;i-09e9cd90c86d46ecc&quot;</span><span class="token punctuation">,</span></span>
<span class="line">       ...</span>
<span class="line">      <span class="token punctuation">]</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;check_results&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><p>이미 AWS에 EC2 인스턴스 생성을 요청한 상태에서 네트워크 단절이 발생하였기 때문에 AWS상에는 EC2의 생성이 진행됩니다.</p><figure><img src="`+l+`" alt="AWS Console" tabindex="0" loading="lazy"><figcaption>AWS Console</figcaption></figure><h2 id="복구-방안" tabindex="-1"><a class="header-anchor" href="#복구-방안"><span>복구 방안</span></a></h2><blockquote><p>untaint : <a href="https://developer.hashicorp.com/terraform/cli/commands/untaint" target="_blank" rel="noopener noreferrer">https://developer.hashicorp.com/terraform/cli/commands/untaint</a><br> import : <a href="https://developer.hashicorp.com/terraform/cli/commands/import" target="_blank" rel="noopener noreferrer">https://developer.hashicorp.com/terraform/cli/commands/import</a></p></blockquote><p>정상적으로 동기화되지 않은 경우(tainted)라 <code>terraform plan</code> 실행 시 replace가 발생합니다.</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">$ terraform plan</span>
<span class="line">aws_instance.web: Refreshing state<span class="token punctuation">..</span>. <span class="token punctuation">[</span>id<span class="token operator">=</span>i-09e9cd90c86d46ecc<span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line">Terraform used the selected providers to generate the following execution plan.</span>
<span class="line">Resource actions are indicated with the following symbols:</span>
<span class="line">-/+ destroy and <span class="token keyword">then</span> create replacement</span>
<span class="line"></span>
<span class="line">Terraform will perform the following actions:</span>
<span class="line"></span>
<span class="line">  <span class="token comment"># aws_instance.web is tainted, so must be replaced</span></span>
<span class="line">-/+ resource <span class="token string">&quot;aws_instance&quot;</span> <span class="token string">&quot;web&quot;</span> <span class="token punctuation">{</span></span>
<span class="line">      ~ arn                                  <span class="token operator">=</span> <span class="token string">&quot;arn:aws:ec2:ap-northeast-2:467567795630:instance/i-09e9cd90c86d46ecc&quot;</span> -<span class="token operator">&gt;</span> <span class="token punctuation">(</span>known after apply<span class="token punctuation">)</span></span>
<span class="line">      ~ associate_public_ip_address          <span class="token operator">=</span> <span class="token boolean">true</span> -<span class="token operator">&gt;</span> <span class="token punctuation">(</span>known after apply<span class="token punctuation">)</span></span>
<span class="line">      ~ availability_zone                    <span class="token operator">=</span> <span class="token string">&quot;ap-northeast-2a&quot;</span> -<span class="token operator">&gt;</span> <span class="token punctuation">(</span>known after apply<span class="token punctuation">)</span></span>
<span class="line">      ~ cpu_core_count                       <span class="token operator">=</span> <span class="token number">1</span> -<span class="token operator">&gt;</span> <span class="token punctuation">(</span>known after apply<span class="token punctuation">)</span></span>
<span class="line">      ~ cpu_threads_per_core                 <span class="token operator">=</span> <span class="token number">2</span> -<span class="token operator">&gt;</span> <span class="token punctuation">(</span>known after apply<span class="token punctuation">)</span></span>
<span class="line">      ~ disable_api_stop                     <span class="token operator">=</span> <span class="token boolean">false</span> -<span class="token operator">&gt;</span> <span class="token punctuation">(</span>known after apply<span class="token punctuation">)</span></span>
<span class="line">      ~ disable_api_termination              <span class="token operator">=</span> <span class="token boolean">false</span> -<span class="token operator">&gt;</span> <span class="token punctuation">(</span>known after apply<span class="token punctuation">)</span></span>
<span class="line">      ~ ebs_optimized                        <span class="token operator">=</span> <span class="token boolean">false</span> -<span class="token operator">&gt;</span> <span class="token punctuation">(</span>known after apply<span class="token punctuation">)</span></span>
<span class="line">      - hibernation                          <span class="token operator">=</span> <span class="token boolean">false</span> -<span class="token operator">&gt;</span> null</span>
<span class="line">      <span class="token punctuation">..</span>.</span>
<span class="line"></span></code></pre></div><p>리소스가 의도한 경우로 생성된 경우 tainted된 리소스를 <code>untaint</code> 하여 State 기준으로 <code>tainted</code> 상태를 복구하거나 <code>terraform import</code>를 사용하여 State를 생성된 형상 기준으로 맞춰주는 작업이 필요합니다.</p>`,13);function d(m,h){const n=t("Mermaid");return p(),e("div",null,[i,u,o(n,{id:"mermaid-6",code:"eJyNUbtOwzAU3fMVd4QhQxk7VEKUjY2B2QouipTGxnEHtghYIB06EEAoQY1UiYWKVwa+Cd/8A1euShoSCbxc6fg87iPipxMeenzosxPFxg7Qk0xp3/MlCzUcCI8FLXT36NCxoP12BwNb+6C5Umwk1BiYlMEZYLKobq8aTJL2YX9vB/ww0oySAS9yvHwDfLjB96XlEsetTX8Tt9aA29vesF57r1hmlv0I8W4GZhpXaQY4T81HCYrriQo7svSIJNoq6tiV5uvz1RR5M906BELI9uSPzxvDd62qneT2MC8Bi5LEVXpvXmJTZGCSBSbUuR2LYHyKAdNrzKfWmofHnacY8kgrQY3Ua22c4N/5eL7EOZW/z2OJzjf2e/WP"}),k])}const f=s(r,[["render",d],["__file","apply-aborted.html.vue"]]),b=JSON.parse('{"path":"/04-HashiCorp/03-Terraform/04-TroubleShooting/apply-aborted.html","title":"Terraform Apply Aborted - Tainted","lang":"ko-KR","frontmatter":{"description":"Terraform Apply 도중 중단되는 상황","tag":["Terraform","State"],"head":[["meta",{"property":"og:url","content":"https://docmoa.github.io/04-HashiCorp/03-Terraform/04-TroubleShooting/apply-aborted.html"}],["meta",{"property":"og:site_name","content":"docmoa"}],["meta",{"property":"og:title","content":"Terraform Apply Aborted - Tainted"}],["meta",{"property":"og:description","content":"Terraform Apply 도중 중단되는 상황"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2024-04-12T05:22:33.000Z"}],["meta",{"property":"article:tag","content":"Terraform"}],["meta",{"property":"article:tag","content":"State"}],["meta",{"property":"article:modified_time","content":"2024-04-12T05:22:33.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Terraform Apply Aborted - Tainted\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-12T05:22:33.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"정상 동작의 예","slug":"정상-동작의-예","link":"#정상-동작의-예","children":[]},{"level":2,"title":"Terraform Apply 도중 네트워크가 끊긴다면?","slug":"terraform-apply-도중-네트워크가-끊긴다면","link":"#terraform-apply-도중-네트워크가-끊긴다면","children":[]},{"level":2,"title":"복구 방안","slug":"복구-방안","link":"#복구-방안","children":[]}],"git":{"createdTime":1712899353000,"updatedTime":1712899353000,"contributors":[{"name":"Great-Stone","email":"hahohh@gmail.com","commits":1}]},"readingTime":{"minutes":6,"words":360},"filePathRelative":"04-HashiCorp/03-Terraform/04-TroubleShooting/apply-aborted.md","localizedDate":"2024년 4월 12일","excerpt":"\\n<h2>정상 동작의 예</h2>\\n<h2>Terraform Apply 도중 네트워크가 끊긴다면?</h2>\\n<p>클라우드들의 API의 경우 대부분 Sync로 동작하므로, Terraform이 생성 요청을 하면 그에 대한 응답을 받습니다. AWS의 경우 네트워크가 단절 되더라도, 이미 요청한 API 대한 응답을 AWS에서 반환하므로 timeout으로 인한 에러가발생 한 이후 응답을 기준으로 State가 작성됩니다. 다만 정상적인 완료 응답을 받지 못했으므로 Terraform State에는 해당 리소스는 <code>tainted</code>(불확실한) 상태로 기록됩니다.</p>"}');export{f as comp,b as data};
