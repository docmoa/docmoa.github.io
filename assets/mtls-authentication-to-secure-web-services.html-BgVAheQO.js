import{_ as u}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,o as d,c as m,b as t,w as a,h as i,a as s,g as n}from"./app-DVMlqOhY.js";const v="/assets/mtls-auth-browser-nomad-system-files-B0SdKQDs.png",k="/assets/mtls-auth-browser-nomad-ui-run-job-DGr0wfBH.png",h="/assets/mtls-auth-browser-nomad-ui-job-definition-BjbDv2Z3.png",b="/assets/mtls-auth-browser-nomad-ui-files-C4KCxgKv.png",g="/assets/mtls-auth-browser-ca-issue-Bv9PJmZL.png",_="/assets/mtls-auth-browser-ca-issue-allow-Om_kR9JX.png",f="/assets/mtls-auth-browser-default-page-r0gk2kDn.png",x="/assets/mtls-auth-browser-secure-page-forbidden-CUiw67YY.png",w="/assets/mtls-auth-pki-get-Jonlxynh.png",y="/assets/mtls-auth-browser-pk12-auth-registration-D1amwkAx.png",S="/assets/mtls-auth-browser-keychain-BoEf7LBc.png",T="/assets/mtls-auth-browser-check-cert-CUvIs8oU.png",L="/assets/mtls-auth-browser-secure-page-access-CZLz2KFv.png",q={},A=i('<h1 id="vault를-활용한-mtls-인증-자동화로-웹-서비스-보안-강화하기" tabindex="-1"><a class="header-anchor" href="#vault를-활용한-mtls-인증-자동화로-웹-서비스-보안-강화하기"><span>Vault를 활용한 mTLS 인증 자동화로 웹 서비스 보안 강화하기</span></a></h1><p>웹 서비스의 보안은 현대 IT 인프라에서 가장 중요한 요소 중 하나입니다. 특히 민감한 데이터를 다루는 서비스에서는 단순한 사용자명/패스워드 인증을 넘어선 보다 강력한 보안 메커니즘이 필요합니다. 이러한 맥락에서 상호 TLS(mTLS) 인증은 클라이언트와 서버 간의 양방향 인증을 제공하는 강력한 보안 솔루션입니다.</p><h2 id="mtls의-필요성과-도전-과제" tabindex="-1"><a class="header-anchor" href="#mtls의-필요성과-도전-과제"><span>mTLS의 필요성과 도전 과제</span></a></h2><blockquote><p>참고 &#39;mTLS 인증&#39; : <a href="https://wiki.kreonet.net/web-auth-sso/mtls-51119765.html" target="_blank" rel="noopener noreferrer">https://wiki.kreonet.net/web-auth-sso/mtls-51119765.html</a></p></blockquote><p>mTLS(mutual TLS)는 클라이언트와 서버가 서로를 인증하는 프로토콜입니다. 일반적인 TLS가 서버만을 인증하는 것과 달리, mTLS에서는 클라이언트도 인증서를 통해 자신의 신원을 증명해야 합니다. 이는 다음과 같은 이점을 제공합니다:</p><ul><li>무단 액세스 방지</li><li>중간자 공격 차단</li><li>클라이언트 신원의 암호화 기반 검증</li><li>API와 서비스에 대한 세밀한 접근 제어</li></ul><p>특히 상호간 인증이라는 점에서 무작위로 웹사이트를 크롤링 하거나, 외부인이 접근하지 말아야할 웹 리소스를 보호할 수 있습니다.</p><p>하지만 mTLS 구현에는 여러 가지 어려움이 있습니다:</p><ul><li>인증서 수명 주기 관리의 복잡성</li><li>인증서 배포와 갱신의 번거로움</li><li>사용자 경험 저하 가능성</li><li>인프라 구성의 복잡성 증가</li></ul><h2 id="hashicorp-vault를-활용한-자동화된-mtls-구현" tabindex="-1"><a class="header-anchor" href="#hashicorp-vault를-활용한-자동화된-mtls-구현"><span>HashiCorp Vault를 활용한 자동화된 mTLS 구현</span></a></h2><p>HashiCorp Vault는 이러한 mTLS 구현의 어려움을 해결할 수 있는 강력한 도구입니다. Vault의 PKI 시크릿 엔진을 활용하면 다음과 같은 이점을 얻을 수 있습니다:</p><h3 id="_1-자동화된-인증서-수명-주기-관리" tabindex="-1"><a class="header-anchor" href="#_1-자동화된-인증서-수명-주기-관리"><span>1. 자동화된 인증서 수명 주기 관리</span></a></h3><p>Vault는 PKI 시크릿 엔진을 통해 인증서의 발급, 갱신, 폐기를 자동화할 수 있습니다. 이는 다음과 같은 장점을 제공합니다:</p><ul><li>인증서 만료 관리의 자동화</li><li>실시간 인증서 발급 및 갱신</li><li>중앙화된 인증서 관리</li></ul><h3 id="_2-세밀한-접근-제어" tabindex="-1"><a class="header-anchor" href="#_2-세밀한-접근-제어"><span>2. 세밀한 접근 제어</span></a></h3><p>Vault의 정책 기반 접근 제어를 통해 다음과 같은 보안 강화가 가능합니다:</p><ul><li>사용자/애플리케이션별 맞춤형 인증서 정책</li><li>역할 기반 접근 제어(RBAC) 구현</li><li>감사 로그를 통한 모든 인증서 작업 추적</li></ul><h3 id="_3-보안-강화" tabindex="-1"><a class="header-anchor" href="#_3-보안-강화"><span>3. 보안 강화</span></a></h3><p>Vault를 통한 mTLS 구현은 다음과 같은 보안 이점을 제공합니다:</p><ul><li>중요 시스템에 대한 무단 접근 차단</li><li>암호화된 통신 보장</li><li>민감한 데이터의 노출 위험 감소</li></ul><h2 id="실제-적용-사례" tabindex="-1"><a class="header-anchor" href="#실제-적용-사례"><span>실제 적용 사례</span></a></h2><p>Vault를 통한 mTLS 구현은 다음과 같은 환경에서 특히 유용합니다:</p><ul><li>마이크로서비스 아키텍처 <ul><li>서비스 간 통신의 보안 강화</li><li>서비스 신원 확인의 자동화</li></ul></li><li>기업 내부 시스템 <ul><li>중요 관리 도구에 대한 접근 제어</li><li>내부 API의 보안 강화</li></ul></li><li>규제 대상 산업 <ul><li>컴플라이언스 요구사항 충족</li><li>감사 추적 기능 제공</li></ul></li></ul><div class="hint-container info"><p class="hint-container-title">관련 글</p><p>서비스 간 mTLS에 대해서는 다음 글에서 데모와 함께 다루었습니다.</p><p><a href="https://docmoa.github.io/04-HashiCorp/06-Vault/04-UseCase/mtls.html" target="_blank" rel="noopener noreferrer">Vault PKI - mTLS demo</a></p></div><h2 id="구현-예시" tabindex="-1"><a class="header-anchor" href="#구현-예시"><span>구현 예시</span></a></h2><blockquote><ul><li><p>GitHub Source : <a href="https://github.com/Great-Stone/vault-pki-ssl-client-auth" target="_blank" rel="noopener noreferrer">https://github.com/Great-Stone/vault-pki-ssl-client-auth</a></p></li><li><p>GitHub 한국어 README (macOS, Linux) : <a href="https://github.com/Great-Stone/vault-pki-ssl-client-auth/blob/main/README_KR.md" target="_blank" rel="noopener noreferrer">https://github.com/Great-Stone/vault-pki-ssl-client-auth/blob/main/README_KR.md</a></p></li><li><p>GitHub 한국어 README (windows11) : <a href="https://github.com/Great-Stone/vault-pki-ssl-client-auth/blob/main/README_WIN.md" target="_blank" rel="noopener noreferrer">https://github.com/Great-Stone/vault-pki-ssl-client-auth/blob/main/README_WIN.md</a></p></li></ul></blockquote><p>Vault를 사용한 mTLS 구현은 다음과 같은 단계로 이루어집니다:</p><ul><li>Vault PKI 시크릿 엔진 설정</li><li>인증서 발급 정책 및 역할 구성</li><li>클라이언트 인증서(인증용) 자동 발급 시스템 구축</li><li>웹 서버의 mTLS 구성</li><li>클라이언트 인증 자동화 구현</li></ul><p>인증서를 발급받고, 대상 웹서버에 접근하는 프로세스는 다음과 같습니다.</p>',29),O=i('<div class="hint-container warning"><p class="hint-container-title">데모 실행 준비사항</p><p>필수 설치 및 실행 환경은 다음과 같습니다.</p><ul><li>Vault, Nomad, Docker가 실행가능한 환경이여야 합니다. <ul><li>Install Vault - <a href="https://developer.hashicorp.com/vault/install?product_intent=vault" target="_blank" rel="noopener noreferrer">https://developer.hashicorp.com/vault/install?product_intent=vault</a></li><li>Install Nomad - <a href="https://developer.hashicorp.com/nomad/install?product_intent=nomad" target="_blank" rel="noopener noreferrer">https://developer.hashicorp.com/nomad/install?product_intent=nomad</a></li></ul></li><li>Python 3 및 필요한 패키지 (flask, hvac, cryptography)를 설치해야 합니다.</li></ul></div><div class="hint-container info"><p class="hint-container-title">정보</p><p>빠른 구성 및 테스트를 위해 CLI(shell, powershell)로 설명되었습니다. UI나 Terraform을 사용하는 것도 무방합니다.</p></div><h3 id="_1-setup-env" tabindex="-1"><a class="header-anchor" href="#_1-setup-env"><span>1. Setup ENV</span></a></h3><p>명령어를 실행할 터미널에서 다음을 설정합니다.</p>',4),N=s("div",{class:"language-bash","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[s("pre",{class:"language-bash"},[s("code",null,[s("span",{class:"line"},[s("span",{class:"token builtin class-name"},"export"),n(),s("span",{class:"token assign-left variable"},"NOMAD_ADDR"),s("span",{class:"token operator"},"="),s("span",{class:"token string"},"'http://127.0.0.1:4646'")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token builtin class-name"},"export"),n(),s("span",{class:"token assign-left variable"},"VAULT_ADDR"),s("span",{class:"token operator"},"="),s("span",{class:"token string"},"'http://127.0.0.1:8200'")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token builtin class-name"},"export"),n(),s("span",{class:"token assign-left variable"},"VAULT_TOKEN"),s("span",{class:"token operator"},"="),n("root")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token builtin class-name"},"export"),n(),s("span",{class:"token assign-left variable"},"NOMAD_POLICY"),s("span",{class:"token operator"},"="),n("nomad-server")]),n(`
`),s("span",{class:"line"})])])],-1),V=s("div",{class:"language-bash","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[s("pre",{class:"language-bash"},[s("code",null,[s("span",{class:"line"},[s("span",{class:"token variable"},"$env"),n(":NOMAD_ADDR "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token string"},"'http://127.0.0.1:4646'")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token variable"},"$env"),n(":VAULT_ADDR "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token string"},"'http://127.0.0.1:8200'")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token variable"},"$env"),n(":VAULT_TOKEN "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token string"},"'root'")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token variable"},"$env"),n(":NOMAD_POLICY "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token string"},"'nomad-server'")]),n(`
`),s("span",{class:"line"})])])],-1),C=s("h3",{id:"_2-run-vault",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_2-run-vault"},[s("span",null,"2. Run Vault")])],-1),D=s("p",null,"다른 창에서 실행",-1),E=s("div",{class:"language-bash","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[s("pre",{class:"language-bash"},[s("code",null,[s("span",{class:"line"},[s("span",{class:"token builtin class-name"},"export"),n(),s("span",{class:"token assign-left variable"},"VAULT_TOKEN"),s("span",{class:"token operator"},"="),n("root")]),n(`
`),s("span",{class:"line"},[n("vault server "),s("span",{class:"token parameter variable"},"-dev"),n(" -dev-listen-address"),s("span",{class:"token operator"},"="),s("span",{class:"token number"},"0.0"),n(".0.0:8200 -dev-root-token-id"),s("span",{class:"token operator"},"="),s("span",{class:"token variable"},"$VAULT_TOKEN")]),n(`
`),s("span",{class:"line"})])])],-1),I=s("div",{class:"language-bash","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[s("pre",{class:"language-bash"},[s("code",null,[s("span",{class:"line"},[s("span",{class:"token variable"},"$env"),n(":VAULT_TOKEN "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token string"},"'root'")]),n(`
`),s("span",{class:"line"},[n("vault server "),s("span",{class:"token parameter variable"},"-dev"),n(" -dev-listen-address"),s("span",{class:"token operator"},"="),s("span",{class:"token number"},"0.0"),n(".0.0:8200 -dev-root-token-id"),s("span",{class:"token operator"},"="),s("span",{class:"token variable"},"$env"),n(":VAULT_TOKEN")]),n(`
`),s("span",{class:"line"})])])],-1),P=s("h3",{id:"_3-setup-vault-pki",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_3-setup-vault-pki"},[s("span",null,"3. Setup Vault PKI")])],-1),U=s("ul",null,[s("li",null,[n("웹서버의 "),s("code",null,"HTTPS(TLS)"),n(" 구성을 위한 PKI와 클라이언트 인증을 위한 PKI는 별개 입니다. 여기서는 구성 편의 상 같은 PKI 엔진을 사용합니다.")]),s("li",null,[n("사용자 인증을 받기 위한 PKI Role인 "),s("code",null,"pki/roles/user-auth"),n("에는 "),s("code",null,"client_flag=true"),n(" 옵션이 추가되어 클라이언트 인증용 인증서를 발급하도록 합니다.")])],-1),R=s("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[s("pre",{class:"language-bash"},[s("code",null,[s("span",{class:"line"},[n("vault secrets "),s("span",{class:"token builtin class-name"},"enable"),n(" pki")]),n(`
`),s("span",{class:"line"},[n("vault secrets tune -max-lease-ttl"),s("span",{class:"token operator"},"="),n("87600h pki")]),n(`
`),s("span",{class:"line"},[n("vault "),s("span",{class:"token function"},"write"),n(" pki/root/generate/internal "),s("span",{class:"token punctuation"},"\\")]),n(`
`),s("span",{class:"line"},[n("  "),s("span",{class:"token assign-left variable"},"key_bits"),s("span",{class:"token operator"},"="),s("span",{class:"token number"},"2048"),n(),s("span",{class:"token punctuation"},"\\")]),n(`
`),s("span",{class:"line"},[n("  "),s("span",{class:"token assign-left variable"},"private_key_format"),s("span",{class:"token operator"},"="),n("pem "),s("span",{class:"token punctuation"},"\\")]),n(`
`),s("span",{class:"line"},[n("  "),s("span",{class:"token assign-left variable"},"signature_bits"),s("span",{class:"token operator"},"="),s("span",{class:"token number"},"256"),n(),s("span",{class:"token punctuation"},"\\")]),n(`
`),s("span",{class:"line"},[n("  "),s("span",{class:"token assign-left variable"},"country"),s("span",{class:"token operator"},"="),n("KR "),s("span",{class:"token punctuation"},"\\")]),n(`
`),s("span",{class:"line"},[n("  "),s("span",{class:"token assign-left variable"},"province"),s("span",{class:"token operator"},"="),n("Seoul "),s("span",{class:"token punctuation"},"\\")]),n(`
`),s("span",{class:"line"},[n("  "),s("span",{class:"token assign-left variable"},"locality"),s("span",{class:"token operator"},"="),n("KR "),s("span",{class:"token punctuation"},"\\")]),n(`
`),s("span",{class:"line"},[n("  "),s("span",{class:"token assign-left variable"},"organization"),s("span",{class:"token operator"},"="),n("COMPANY "),s("span",{class:"token punctuation"},"\\")]),n(`
`),s("span",{class:"line"},[n("  "),s("span",{class:"token assign-left variable"},"ou"),s("span",{class:"token operator"},"="),n("DEV "),s("span",{class:"token punctuation"},"\\")]),n(`
`),s("span",{class:"line"},[n("  "),s("span",{class:"token assign-left variable"},"common_name"),s("span",{class:"token operator"},"="),n("example.com "),s("span",{class:"token punctuation"},"\\")]),n(`
`),s("span",{class:"line"},[n("  "),s("span",{class:"token assign-left variable"},"ttl"),s("span",{class:"token operator"},"="),n("87600h")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[n("vault "),s("span",{class:"token function"},"write"),n(" pki/config/urls "),s("span",{class:"token punctuation"},"\\")]),n(`
`),s("span",{class:"line"},[n("  "),s("span",{class:"token assign-left variable"},"issuing_certificates"),s("span",{class:"token operator"},"="),s("span",{class:"token string"},'"http://127.0.0.1:8200/v1/pki/ca"'),n(),s("span",{class:"token punctuation"},"\\")]),n(`
`),s("span",{class:"line"},[n("  "),s("span",{class:"token assign-left variable"},"crl_distribution_points"),s("span",{class:"token operator"},"="),s("span",{class:"token string"},'"http://127.0.0.1:8200/v1/pki/crl"')]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[n("vault "),s("span",{class:"token function"},"write"),n(" pki/roles/example-dot-com "),s("span",{class:"token punctuation"},"\\")]),n(`
`),s("span",{class:"line"},[n("  "),s("span",{class:"token assign-left variable"},"allowed_domains"),s("span",{class:"token operator"},"="),n("example.com "),s("span",{class:"token punctuation"},"\\")]),n(`
`),s("span",{class:"line"},[n("  "),s("span",{class:"token assign-left variable"},"allow_subdomains"),s("span",{class:"token operator"},"="),n("true "),s("span",{class:"token punctuation"},"\\")]),n(`
`),s("span",{class:"line"},[n("  "),s("span",{class:"token assign-left variable"},"max_ttl"),s("span",{class:"token operator"},"="),n("72h")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[n("vault "),s("span",{class:"token function"},"write"),n(" pki/roles/user-auth "),s("span",{class:"token punctuation"},"\\")]),n(`
`),s("span",{class:"line"},[n("  "),s("span",{class:"token assign-left variable"},"allowed_domains"),s("span",{class:"token operator"},"="),n("example.com "),s("span",{class:"token punctuation"},"\\")]),n(`
`),s("span",{class:"line"},[n("  "),s("span",{class:"token assign-left variable"},"allow_subdomains"),s("span",{class:"token operator"},"="),n("true "),s("span",{class:"token punctuation"},"\\")]),n(`
`),s("span",{class:"line"},[n("  "),s("span",{class:"token assign-left variable"},"client_flag"),s("span",{class:"token operator"},"="),n("true "),s("span",{class:"token punctuation"},"\\")]),n(`
`),s("span",{class:"line"},[n("  "),s("span",{class:"token assign-left variable"},"max_ttl"),s("span",{class:"token operator"},"="),n("72h")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[n("vault policy "),s("span",{class:"token function"},"write"),n(" pki_policy - "),s("span",{class:"token operator"},"<<-"),s("span",{class:"token string"},"EOF"),n(`
`),s("span",{class:"line"},'  path "pki/issue/*" {'),n(`
`),s("span",{class:"line"},'    capabilities = [ "create", "read", "update", "delete", "list", "sudo" ]'),n(`
`),s("span",{class:"line"},"  }"),n(`
`),s("span",{class:"line"},"EOF")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),j=s("div",{class:"language-powershell line-numbers-mode","data-highlighter":"prismjs","data-ext":"powershell","data-title":"powershell"},[s("pre",{class:"language-powershell"},[s("code",null,[s("span",{class:"line"},"vault secrets enable pki"),n(`
`),s("span",{class:"line"},[n("vault secrets tune "),s("span",{class:"token operator"},"-"),n("max-lease-ttl=87600h pki")]),n(`
`),s("span",{class:"line"},[n("vault "),s("span",{class:"token function"},"write"),n(" pki/root/generate/internal `")]),n(`
`),s("span",{class:"line"},"  key_bits=2048 `"),n(`
`),s("span",{class:"line"},"  private_key_format=pem `"),n(`
`),s("span",{class:"line"},"  signature_bits=256 `"),n(`
`),s("span",{class:"line"},"  country=KR `"),n(`
`),s("span",{class:"line"},"  province=Seoul `"),n(`
`),s("span",{class:"line"},"  locality=KR `"),n(`
`),s("span",{class:"line"},"  organization=COMPANY `"),n(`
`),s("span",{class:"line"},"  ou=DEV `"),n(`
`),s("span",{class:"line"},[n("  common_name=example"),s("span",{class:"token punctuation"},"."),n("com `")]),n(`
`),s("span",{class:"line"},"  ttl=87600h"),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[n("vault "),s("span",{class:"token function"},"write"),n(" pki/config/urls `")]),n(`
`),s("span",{class:"line"},[n("  issuing_certificates="),s("span",{class:"token string"},'"http://127.0.0.1:8200/v1/pki/ca"'),n(" `")]),n(`
`),s("span",{class:"line"},[n("  crl_distribution_points="),s("span",{class:"token string"},'"http://127.0.0.1:8200/v1/pki/crl"')]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[n("vault "),s("span",{class:"token function"},"write"),n(" pki/roles/example-dot-com `")]),n(`
`),s("span",{class:"line"},[n("  allowed_domains=example"),s("span",{class:"token punctuation"},"."),n("com `")]),n(`
`),s("span",{class:"line"},"  allow_subdomains=true `"),n(`
`),s("span",{class:"line"},"  max_ttl=72h"),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[n("vault "),s("span",{class:"token function"},"write"),n(" pki/roles/user-auth `")]),n(`
`),s("span",{class:"line"},[n("  allowed_domains=example"),s("span",{class:"token punctuation"},"."),n("com `")]),n(`
`),s("span",{class:"line"},"  allow_subdomains=true `"),n(`
`),s("span",{class:"line"},"  client_flag=true `"),n(`
`),s("span",{class:"line"},"  max_ttl=72h"),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# PowerShell에서 Here-String 사용")]),n(`
`),s("span",{class:"line"},[n("@"),s("span",{class:"token string"},'"'),n(`
`),s("span",{class:"line"},'path "'),n("pki/issue/"),s("span",{class:"token operator"},"*"),s("span",{class:"token string"},'" {'),n(`
`),s("span",{class:"line"},'  capabilities = [ "'),n("create"),s("span",{class:"token string"},'", "'),n("read"),s("span",{class:"token string"},'", "'),n("update"),s("span",{class:"token string"},'", "'),n("delete"),s("span",{class:"token string"},'", "'),n("list"),s("span",{class:"token string"},'", "'),n("sudo"),s("span",{class:"token string"},'" ]'),n(`
`),s("span",{class:"line"},"}"),n(`
`),s("span",{class:"line"},'"'),n("@ "),s("span",{class:"token punctuation"},"|"),n(" vault policy "),s("span",{class:"token function"},"write"),n(" pki_policy "),s("span",{class:"token operator"},"-")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),K=s("h3",{id:"_4-vault-policy-token-for-nomad",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_4-vault-policy-token-for-nomad"},[s("span",null,"4. Vault Policy & Token for Nomad")])],-1),M=s("p",null,"인증서 적용을 자동화하기위해 Nomad를 활용하였습니다. 예제에서 제시한 Nginx의 인증서를 수동으로 파일을 작성하여 설정해주어도 무방합니다. 또한 K8s 환경에서는 VSO를 연계하여 사용하여도 됩니다.",-1),F=s("blockquote",null,[s("p",null,[n("VSO 설명 : "),s("a",{href:"https://docmoa.github.io/04-HashiCorp/06-Vault/04-UseCase/vault-k8s-usecase-csi-injection.html",target:"_blank",rel:"noopener noreferrer"},"https://docmoa.github.io/04-HashiCorp/06-Vault/04-UseCase/vault-k8s-usecase-csi-injection.html")])],-1),H=s("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[s("pre",{class:"language-bash"},[s("code",null,[s("span",{class:"line"},[s("span",{class:"token function"},"cat"),n(),s("span",{class:"token operator"},"<<"),s("span",{class:"token string"},[n("EOF"),s("span",{class:"token bash punctuation"},[n(),s("span",{class:"token operator"},"|"),n(" vault policy "),s("span",{class:"token function"},"write"),n(),s("span",{class:"token variable"},"$NOMAD_POLICY"),n(" -")])]),n(`
`),s("span",{class:"line"},'path "auth/token/create/nomad-cluster" {'),n(`
`),s("span",{class:"line"},'  capabilities = ["update"]'),n(`
`),s("span",{class:"line"},"}"),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},'path "auth/token/roles/nomad-cluster" {'),n(`
`),s("span",{class:"line"},'  capabilities = ["read"]'),n(`
`),s("span",{class:"line"},"}"),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},'path "auth/token/lookup-self" {'),n(`
`),s("span",{class:"line"},'  capabilities = ["read"]'),n(`
`),s("span",{class:"line"},"}"),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},'path "auth/token/lookup" {'),n(`
`),s("span",{class:"line"},'  capabilities = ["update"]'),n(`
`),s("span",{class:"line"},"}"),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},'path "auth/token/revoke-accessor" {'),n(`
`),s("span",{class:"line"},'  capabilities = ["update"]'),n(`
`),s("span",{class:"line"},"}"),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},'path "sys/capabilities-self" {'),n(`
`),s("span",{class:"line"},'  capabilities = ["update"]'),n(`
`),s("span",{class:"line"},"}"),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},'path "auth/token/renew-self" {'),n(`
`),s("span",{class:"line"},'  capabilities = ["update"]'),n(`
`),s("span",{class:"line"},"}"),n(`
`),s("span",{class:"line"},"EOF")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),Y=s("div",{class:"language-powershell line-numbers-mode","data-highlighter":"prismjs","data-ext":"powershell","data-title":"powershell"},[s("pre",{class:"language-powershell"},[s("code",null,[s("span",{class:"line"},[n("@"),s("span",{class:"token string"},'"'),n(`
`),s("span",{class:"line"},'path "'),n("auth/token/create/nomad-cluster"),s("span",{class:"token string"},'" {'),n(`
`),s("span",{class:"line"},'  capabilities = ["'),n("update"),s("span",{class:"token string"},'"]'),n(`
`),s("span",{class:"line"},"}"),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},'path "'),n("auth/token/roles/nomad-cluster"),s("span",{class:"token string"},'" {'),n(`
`),s("span",{class:"line"},'  capabilities = ["'),n("read"),s("span",{class:"token string"},'"]'),n(`
`),s("span",{class:"line"},"}"),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},'path "'),n("auth/token/lookup-self"),s("span",{class:"token string"},'" {'),n(`
`),s("span",{class:"line"},'  capabilities = ["'),n("read"),s("span",{class:"token string"},'"]'),n(`
`),s("span",{class:"line"},"}"),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},'path "'),n("auth/token/lookup"),s("span",{class:"token string"},'" {'),n(`
`),s("span",{class:"line"},'  capabilities = ["'),n("update"),s("span",{class:"token string"},'"]'),n(`
`),s("span",{class:"line"},"}"),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},'path "'),n("auth/token/"),s("span",{class:"token function"},"revoke-accessor"),s("span",{class:"token string"},'" {'),n(`
`),s("span",{class:"line"},'  capabilities = ["'),n("update"),s("span",{class:"token string"},'"]'),n(`
`),s("span",{class:"line"},"}"),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},'path "'),n("sys/capabilities-self"),s("span",{class:"token string"},'" {'),n(`
`),s("span",{class:"line"},'  capabilities = ["'),n("update"),s("span",{class:"token string"},'"]'),n(`
`),s("span",{class:"line"},"}"),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},'path "'),n("auth/token/renew-self"),s("span",{class:"token string"},'" {'),n(`
`),s("span",{class:"line"},'  capabilities = ["'),n("update"),s("span",{class:"token string"},'"]'),n(`
`),s("span",{class:"line"},"}"),n(`
`),s("span",{class:"line"},'"'),n("@ "),s("span",{class:"token punctuation"},"|"),n(" vault policy "),s("span",{class:"token function"},"write"),n(),s("span",{class:"token variable"},"$env"),n(":NOMAD_POLICY "),s("span",{class:"token operator"},"-")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),W=i('<h3 id="_5-run-nomad-with-vault-toekn" tabindex="-1"><a class="header-anchor" href="#_5-run-nomad-with-vault-toekn"><span>5. Run Nomad with Vault Toekn</span></a></h3><p>Nginx를 실행 및 관리하기 위한 Nomad를 실행합니다. Nomad에서 Vault의 PKI가 발급하는 인증서를 자동 생성/갱신 하기위해 Vault의 Token을 사용합니다.</p><ul><li><a href="#4-vault-policy--token-for-nomad">4. Vault Policy &amp; Token for Nomad</a>에서 구성한 Vault와의 인증을 위한 Token Role을 생성합니다. <ul><li>Token Role 생성 시 pki에 대한 권한이 부여된 정책을 사용할 수 있도록 <code>allowed_policies=&quot;pki_policy&quot;</code> 옵션을 추가합니다.</li><li>Nomad 연계를 위한 자체 정책인 <code>nomad-server</code>는 생성할 수 없도록 <code>disallowed_policies=&quot;$NOMAD_POLICY&quot;</code> 옵션을 추가합니다.</li><li><code>orphan=true</code> 옵션을 주면 최대 만료 TTL 없이 계속 갱신할 수 있는 고아 토큰으로 생성됩니다.</li></ul></li></ul>',3),z=s("div",{class:"language-bash","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[s("pre",{class:"language-bash"},[s("code",null,[s("span",{class:"line"},[s("span",{class:"token builtin class-name"},"export"),n(),s("span",{class:"token assign-left variable"},"NOMAD_POLICY"),s("span",{class:"token operator"},"="),n("nomad-server")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[n("vault "),s("span",{class:"token function"},"write"),n(" auth/token/roles/nomad-cluster "),s("span",{class:"token assign-left variable"},"allowed_policies"),s("span",{class:"token operator"},"="),s("span",{class:"token string"},'"pki_policy"'),n(),s("span",{class:"token assign-left variable"},"disallowed_policies"),s("span",{class:"token operator"},"="),s("span",{class:"token string"},[n('"'),s("span",{class:"token variable"},"$NOMAD_POLICY"),n('"')]),n(),s("span",{class:"token assign-left variable"},"token_explicit_max_ttl"),s("span",{class:"token operator"},"="),s("span",{class:"token number"},"0"),n(),s("span",{class:"token assign-left variable"},"orphan"),s("span",{class:"token operator"},"="),n("true "),s("span",{class:"token assign-left variable"},"token_period"),s("span",{class:"token operator"},"="),s("span",{class:"token string"},'"259200"'),n(),s("span",{class:"token assign-left variable"},"renewable"),s("span",{class:"token operator"},"="),n("true")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# 토큰 생성 및 임시 파일에 저장")]),n(`
`),s("span",{class:"line"},[n("vault token create "),s("span",{class:"token parameter variable"},"-field"),n(" token "),s("span",{class:"token parameter variable"},"-policy"),n(),s("span",{class:"token variable"},"$NOMAD_POLICY"),n(),s("span",{class:"token parameter variable"},"-period"),n(" 72h "),s("span",{class:"token parameter variable"},"-orphan"),n(),s("span",{class:"token operator"},">"),n(" /tmp/token.txt")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# 토큰을 사용하여 Nomad 실행")]),n(`
`),s("span",{class:"line"},[n("nomad agent "),s("span",{class:"token parameter variable"},"-dev"),n(" -vault-enabled"),s("span",{class:"token operator"},"="),n("true -vault-address"),s("span",{class:"token operator"},"="),n("http://127.0.0.1:8200 -vault-token"),s("span",{class:"token operator"},"="),s("span",{class:"token variable"},[s("span",{class:"token variable"},"$("),s("span",{class:"token function"},"cat"),n(" /tmp/token.txt"),s("span",{class:"token variable"},")")]),n(" -vault-tls-skip-verify"),s("span",{class:"token operator"},"="),n("true -vault-create-from-role"),s("span",{class:"token operator"},"="),n("nomad-cluster")]),n(`
`),s("span",{class:"line"})])])],-1),J=s("div",{class:"language-bash","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[s("pre",{class:"language-bash"},[s("code",null,[s("span",{class:"line"},[s("span",{class:"token variable"},"$env"),n(":NOMAD_POLICY "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token string"},"'nomad-server'")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[n("vault "),s("span",{class:"token function"},"write"),n(" auth/token/roles/nomad-cluster "),s("span",{class:"token assign-left variable"},"allowed_policies"),s("span",{class:"token operator"},"="),s("span",{class:"token string"},'"pki_policy"'),n(),s("span",{class:"token assign-left variable"},"disallowed_policies"),s("span",{class:"token operator"},"="),s("span",{class:"token string"},[n('"'),s("span",{class:"token variable"},"$env"),n(':NOMAD_POLICY"')]),n(),s("span",{class:"token assign-left variable"},"token_explicit_max_ttl"),s("span",{class:"token operator"},"="),s("span",{class:"token number"},"0"),n(),s("span",{class:"token assign-left variable"},"orphan"),s("span",{class:"token operator"},"="),n("true "),s("span",{class:"token assign-left variable"},"token_period"),s("span",{class:"token operator"},"="),s("span",{class:"token string"},'"259200"'),n(),s("span",{class:"token assign-left variable"},"renewable"),s("span",{class:"token operator"},"="),n("true")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# 토큰 생성 및 임시 파일에 저장")]),n(`
`),s("span",{class:"line"},[n("vault token create "),s("span",{class:"token parameter variable"},"-field"),n(" token "),s("span",{class:"token parameter variable"},"-policy"),n(),s("span",{class:"token variable"},"$env"),n(":NOMAD_POLICY "),s("span",{class:"token parameter variable"},"-period"),n(" 72h "),s("span",{class:"token parameter variable"},"-orphan"),n(),s("span",{class:"token operator"},"|"),n(" Out-File "),s("span",{class:"token parameter variable"},"-FilePath"),n(),s("span",{class:"token string"},[n('"'),s("span",{class:"token variable"},"$env"),n(":TEMP"),s("span",{class:"token entity",title:"\\t"},"\\t"),n('oken.txt"')])]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# 토큰을 사용하여 Nomad 실행")]),n(`
`),s("span",{class:"line"},[n("nomad agent "),s("span",{class:"token parameter variable"},"-dev"),n(" -vault-enabled"),s("span",{class:"token operator"},"="),n("true -vault-address"),s("span",{class:"token operator"},"="),n("http://127.0.0.1:8200 -vault-token"),s("span",{class:"token operator"},"="),s("span",{class:"token punctuation"},"("),n("Get-Content "),s("span",{class:"token string"},[n('"'),s("span",{class:"token variable"},"$env"),n(":TEMP"),s("span",{class:"token entity",title:"\\t"},"\\t"),n('oken.txt"')]),s("span",{class:"token punctuation"},")"),n(" -vault-tls-skip-verify"),s("span",{class:"token operator"},"="),n("true -vault-create-from-role"),s("span",{class:"token operator"},"="),n("nomad-cluster")]),n(`
`),s("span",{class:"line"})])])],-1),G=i(`<h3 id="_6-setup-vault-userpass" tabindex="-1"><a class="header-anchor" href="#_6-setup-vault-userpass"><span>6. Setup Vault Userpass</span></a></h3><p>사용자는 브라우저 접속을 위한 인증서를 받기위한 인증 메커니즘이 필요합니다. 여기서는 별도의 IDP를 구성하지 않고 Vault의 <code>userpass</code>인증으로 사용자 인증을 처리합니다.</p><ul><li><code>user1</code>이라는 사용자를 생성하고, 해당 사용자는 pki를 요청할 수 있는 정책을 소유합니다.</li></ul><div class="hint-container tip"><p class="hint-container-title">팁</p><p>Vault는 API를 제공하므로, 타 시스템에서 인증 IDP로도 사용할 수 있습니다.</p></div><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">vault auth <span class="token builtin class-name">enable</span> userpass</span>
<span class="line">vault <span class="token function">write</span> auth/userpass/users/user1 <span class="token assign-left variable">password</span><span class="token operator">=</span>password <span class="token assign-left variable">policies</span><span class="token operator">=</span>pki_policy</span>
<span class="line"></span></code></pre></div><h3 id="_7-nginx-run-on-nomad-with-mtls-configuration" tabindex="-1"><a class="header-anchor" href="#_7-nginx-run-on-nomad-with-mtls-configuration"><span>7. Nginx run on Nomad with mTLS configuration</span></a></h3><p>클라이언트 인증서 인증 옵션이 적용된 Nginx를 배포 합니다. UI에서 배포하는 것도 가능합니다.</p>`,7),B=s("p",null,[n("GitHub에서 받은 코드 위치에서 "),s("code",null,"nginx.job.hcl"),n("을 확인하고 실행합니다.")],-1),$=s("p",null,"Docker가 실행되어있어야 합니다.",-1),Q=s("div",{class:"language-bash","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[s("pre",{class:"language-bash"},[s("code",null,[s("span",{class:"line"},"nomad job run nginx.job.hcl"),n(`
`),s("span",{class:"line"})])])],-1),Z=s("p",null,[n("Nomad 실행 로그를 확인해보면 "),s("code",null,"using alloc directory"),n(" 라는 곳에 임시로(Nomadr가 dev mode여서) 파일을 생성합니다.")],-1),X=s("div",{class:"language-log","data-highlighter":"prismjs","data-ext":"log","data-title":"log"},[s("pre",{class:"language-log"},[s("code",null,[s("span",{class:"line"},[s("span",{class:"token punctuation"},"."),s("span",{class:"token punctuation"},"."),s("span",{class:"token punctuation"},".")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token date number"},"2025-02-12T"),s("span",{class:"token time number"},"10:11:48.561+0900"),n(),s("span",{class:"token punctuation"},"["),s("span",{class:"token level info keyword"},"INFO"),s("span",{class:"token punctuation"},"]"),n("  "),s("span",{class:"token property"},"client:"),n(),s("span",{class:"token property"},"using alloc directory:"),n(" alloc_dir"),s("span",{class:"token operator"},"="),s("span",{class:"token operator"},"/"),n("private"),s("span",{class:"token operator"},"/"),n("var"),s("span",{class:"token operator"},"/"),n("folders"),s("span",{class:"token operator"},"/"),n("vw"),s("span",{class:"token operator"},"/"),n("ds0qqs412s9f8yfc7yrlhz5r0000gn"),s("span",{class:"token operator"},"/"),n("T"),s("span",{class:"token operator"},"/"),n("NomadClient3290112717")]),n(`
`),s("span",{class:"line"})])])],-1),ss=s("p",null,"Job이 정상적으로 실행되면 해당 위치에서 생성된 파일을 확인할 수 있습니다.",-1),ns=s("figure",null,[s("img",{src:v,alt:"Nomad - System Files",tabindex:"0",loading:"lazy"}),s("figcaption",null,"Nomad - System Files")],-1),as=s("p",null,null,-1),es=s("ol",null,[s("li",null,[s("a",{href:"http://localhost:4646",target:"_blank",rel:"noopener noreferrer"},"http://localhost:4646"),n(" 으로 접속하여 "),s("code",null,"Run Job"),n(" 버튼을 클릭합니다.")])],-1),ls=s("figure",null,[s("img",{src:k,alt:"Nomad UI - Run Job",tabindex:"0",loading:"lazy"}),s("figcaption",null,"Nomad UI - Run Job")],-1),ts=s("ol",{start:"2"},[s("li",null,[s("code",null,"Job Definition"),n(" 란에 "),s("code",null,"nginx.job.hcl"),n(" 파일 내용을 붙여넣고 "),s("code",null,"Plan"),n(" 버튼을 클릭합니다. 이서 정상적으로 Plan이 완료되면 "),s("code",null,"Run"),n(" 버튼을 클릭합니다.")])],-1),is=s("figure",null,[s("img",{src:h,alt:"Nomad UI - Job Definition",tabindex:"0",loading:"lazy"}),s("figcaption",null,"Nomad UI - Job Definition")],-1),cs=s("ol",{start:"3"},[s("li",null,[n("정상적으로 배포가 완료되면 해당 Alloc > Task >"),s("code",null,"server"),n(" 의 "),s("code",null,"Files"),n(" 탭으로 이동하면 생성된 인증서와 웹 리소스를 확인할 수 있습니다.")])],-1),ps=s("figure",null,[s("img",{src:b,alt:"Nomad UI - Job Files",tabindex:"0",loading:"lazy"}),s("figcaption",null,"Nomad UI - Job Files")],-1),os=i(`<details class="hint-container details"><summary>Nomad Job 설명</summary><div class="language-hcl line-numbers-mode" data-highlighter="prismjs" data-ext="hcl" data-title="hcl"><pre class="language-hcl"><code><span class="line">job <span class="token string">&quot;nginx&quot;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">datacenters</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token string">&quot;dc1&quot;</span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line">  group <span class="token string">&quot;nginx&quot;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">network</span> <span class="token punctuation">{</span></span>
<span class="line">      port <span class="token string">&quot;https&quot;</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">to</span>      <span class="token punctuation">=</span> <span class="token number">443</span></span>
<span class="line">        <span class="token property">static</span>  <span class="token punctuation">=</span> <span class="token number">443</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    task <span class="token string">&quot;server&quot;</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">      <span class="token property">driver</span> <span class="token punctuation">=</span> <span class="token string">&quot;docker&quot;</span></span>
<span class="line"></span>
<span class="line">      <span class="token keyword">config</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">image</span> <span class="token punctuation">=</span> <span class="token string">&quot;nginx&quot;</span></span>
<span class="line">        <span class="token property">ports</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token string">&quot;https&quot;</span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment"># Docker의 Volume으로 생성된 인증서와 웹페이지를 지정합니다.</span></span>
<span class="line">        <span class="token property">volumes</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span></span>
<span class="line">          <span class="token string">&quot;local/conf.d:/etc/nginx/conf.d&quot;</span>,</span>
<span class="line">          <span class="token string">&quot;local/certs:/etc/nginx/certs&quot;</span>,</span>
<span class="line">          <span class="token string">&quot;local/www:/home/www&quot;</span>,</span>
<span class="line">          <span class="token string">&quot;local/secure:/home/secure&quot;</span></span>
<span class="line">        <span class="token punctuation">]</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">      <span class="token comment"># Nginx용 구성 파일을 템플릿팅 합니다.</span></span>
<span class="line">      <span class="token keyword">template</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">data</span> <span class="token punctuation">=</span> <span class="token heredoc string">&lt;&lt;-EOF</span>
<span class="line">        server {</span>
<span class="line">          listen 443 ssl;</span>
<span class="line">          server_name service-a.example.com;</span>
<span class="line">          ssl_certificate &quot;/etc/nginx/certs/server.pem&quot;;</span>
<span class="line">          ssl_certificate_key &quot;/etc/nginx/certs/server.key&quot;;</span>
<span class="line"></span>
<span class="line">          ssl_client_certificate  &quot;/etc/nginx/certs/server.pem&quot;; # 클라이언트 인증서 확인을 위한 CA 인증서, TLS를 위한 웹서버용 인증서와는 별도 관리 가능</span>
<span class="line">          # ssl_verify_client       on; # 클라이언트 인증서 검증 활성화</span>
<span class="line">          ssl_verify_client       optional;</span>
<span class="line"></span>
<span class="line">          ssl_protocols           TLSv1.2 TLSv1.3;</span>
<span class="line">          ssl_session_timeout     10m;</span>
<span class="line">          </span>
<span class="line">          proxy_read_timeout      300;</span>
<span class="line">          proxy_buffers           64 16k;</span>
<span class="line"></span>
<span class="line">          location / {</span>
<span class="line">            root /home/www;</span>
<span class="line">            index index.html;</span>
<span class="line">          }</span>
<span class="line"></span>
<span class="line">          location /secure { # 클라이언트 인증서가 확인되지 않으면 이 경로에는 접근할 수 없습니다.</span>
<span class="line">            if ($ssl_client_verify != SUCCESS) { return 403; }</span>
<span class="line">            alias /home/secure;</span>
<span class="line">            index index.html;</span>
<span class="line">          }</span>
<span class="line">        }</span>
<span class="line">        EOF</span></span>
<span class="line"></span>
<span class="line">        <span class="token property">destination</span>   <span class="token punctuation">=</span> <span class="token string">&quot;local/conf.d/default.conf&quot;</span></span>
<span class="line">        <span class="token property">change_mode</span>   <span class="token punctuation">=</span> <span class="token string">&quot;signal&quot;</span></span>
<span class="line">        <span class="token property">change_signal</span> <span class="token punctuation">=</span> <span class="token string">&quot;SIGHUP&quot;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">      <span class="token comment"># Nginx용 서버인증서(HTTPS)를 생성합니다.</span></span>
<span class="line">      <span class="token keyword">template</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">data</span> <span class="token punctuation">=</span> <span class="token heredoc string">&lt;&lt;-EOF</span>
<span class="line">        {{ with secret &quot;pki/issue/example-dot-com&quot; &quot;common_name=service-a.example.com&quot; &quot;ttl=60m&quot; }}</span>
<span class="line">        {{ .Data.certificate }}</span>
<span class="line">        {{ .Data.issuing_ca }}{{ end }}</span>
<span class="line">        EOF</span></span>
<span class="line">        <span class="token property">destination</span>   <span class="token punctuation">=</span> <span class="token string">&quot;local/certs/server.pem&quot;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">      <span class="token comment"># Nginx용 서버인증서(HTTPS) 키를 생성합니다.</span></span>
<span class="line">      <span class="token keyword">template</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">data</span> <span class="token punctuation">=</span> <span class="token heredoc string">&lt;&lt;-EOF</span>
<span class="line">        {{ with secret &quot;pki/issue/example-dot-com&quot; &quot;common_name=service-a.example.com&quot; &quot;ttl=60m&quot; }}</span>
<span class="line">        {{ .Data.private_key }}{{ end }}</span>
<span class="line">        EOF</span></span>
<span class="line">        <span class="token property">destination</span>   <span class="token punctuation">=</span> <span class="token string">&quot;local/certs/server.key&quot;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">      <span class="token comment"># Nginx용 클라이언트 인증서를 확인할 수 있는 CA 인증서를 생성합니다.</span></span>
<span class="line">      <span class="token keyword">template</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">data</span> <span class="token punctuation">=</span> <span class="token heredoc string">&lt;&lt;-EOF</span>
<span class="line">        {{ with secret &quot;pki/root/generate/internal&quot; &quot;common_name=example.com&quot; &quot;ttl=87600h&quot; }}</span>
<span class="line">        {{ .Data.certificate }}{{ end }}</span>
<span class="line">        EOF</span></span>
<span class="line">        <span class="token property">destination</span>   <span class="token punctuation">=</span> <span class="token string">&quot;local/certs/ca.pem&quot;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">      <span class="token keyword">template</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">data</span> <span class="token punctuation">=</span> <span class="token heredoc string">&lt;&lt;-EOF</span>
<span class="line">        &lt;h1&gt;Default page&lt;/h1&gt;</span>
<span class="line">        EOF</span></span>
<span class="line">        <span class="token property">destination</span>   <span class="token punctuation">=</span> <span class="token string">&quot;local/www/index.html&quot;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">      <span class="token keyword">template</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">data</span> <span class="token punctuation">=</span> <span class="token heredoc string">&lt;&lt;-EOF</span>
<span class="line">        &lt;h1&gt;Secure page&lt;/h1&gt;</span>
<span class="line">        EOF</span></span>
<span class="line">        <span class="token property">destination</span>   <span class="token punctuation">=</span> <span class="token string">&quot;local/secure/index.html&quot;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="_8-set-hosts-file-and-browser-check" tabindex="-1"><a class="header-anchor" href="#_8-set-hosts-file-and-browser-check"><span>8. Set <code>hosts</code> file and browser check</span></a></h3><p>dns로 페이지를 접근할 수 있도록 <code>hosts</code> 파일을 수정합니다.</p>`,3),rs=s("p",null,[s("code",null,"/etc/hosts"),n(" 파일을 관리자 권한으로 수정합니다:")],-1),us=s("div",{class:"language-bash","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[s("pre",{class:"language-bash"},[s("code",null,[s("span",{class:"line"},[s("span",{class:"token builtin class-name"},"echo"),n(),s("span",{class:"token string"},'"127.0.0.1   service-a.example.com"'),n(),s("span",{class:"token operator"},">>"),n(" /etc/hosts")]),n(`
`),s("span",{class:"line"})])])],-1),ds=s("p",null,"Windows의 hosts 파일을 관리자 권한으로 수정합니다:",-1),ms=s("p",null,[n("메모장을 관리자 권한으로 실행"),s("br"),s("code",null,"C:\\Windows\\System32\\drivers\\etc\\hosts"),n(" 파일을 열기"),s("br"),n(" 다음 줄 추가:")],-1),vs=s("div",{class:"language-txt","data-highlighter":"prismjs","data-ext":"txt","data-title":"txt"},[s("pre",{class:"language-txt"},[s("code",null,[s("span",{class:"line"},"127.0.0.1   service-a.example.com"),n(`
`),s("span",{class:"line"})])])],-1),ks=i('<h4 id="_8-1-check-page-default" tabindex="-1"><a class="header-anchor" href="#_8-1-check-page-default"><span>8.1 check page - Default</span></a></h4><p>각 페이지에 접속하여 어떻게 출력되는지 확인합니다.</p><p>click(allow) : <a href="https://service-a.example.com" target="_blank" rel="noopener noreferrer">https://service-a.example.com</a></p><p>서비스용 인증서는 공인 인증서가 아니고, Vault가 생성한 Root CA를 시스템에 등록하지 않았기 때문에 경고 페이지가 발생합니다. <code>세부사항 보기</code>로 이동하여 웹 사이트를 허용합니다.</p><figure><img src="'+g+'" alt="browser-ca-issue" tabindex="0" loading="lazy"><figcaption>browser-ca-issue</figcaption></figure><figure><img src="'+_+'" alt="browser-ca-issue" tabindex="0" loading="lazy"><figcaption>browser-ca-issue</figcaption></figure><p>Default page가 있는 <code>Root</code>경로는 인증을 요구하지 않으므로 접속이 확인됩니다.</p><figure><img src="'+f+`" alt="browser-default-page" tabindex="0" loading="lazy"><figcaption>browser-default-page</figcaption></figure><h4 id="_8-2-check-page-default" tabindex="-1"><a class="header-anchor" href="#_8-2-check-page-default"><span>8.2 check page - Default</span></a></h4><p>Nginx 서버 구성에서 <code>/secure</code> 경로는 인증이 안되는경우 오류를 반환하도록 구성했습니다.</p><div class="language-ini" data-highlighter="prismjs" data-ext="ini" data-title="ini"><pre class="language-ini"><code><span class="line">location /secure { # 클라이언트 인증서가 확인되지 않으면 이 경로에는 접근할 수 없습니다.</span>
<span class="line highlighted">  <span class="token key attr-name">if ($ssl_client_verify !</span><span class="token punctuation">=</span> <span class="token value attr-value">SUCCESS) { return 403; }</span></span>
<span class="line">  alias /home/secure;</span>
<span class="line">  index index.html;</span>
<span class="line">}</span>
<span class="line"></span></code></pre></div><p>click(deny) : <a href="https://service-a.example.com/secure" target="_blank" rel="noopener noreferrer">https://service-a.example.com/secure</a></p><p>인증에 필요한 인증서가 제시되지 않았으므로, 해당 페이지에서는 403에러를 반환합니다.</p><figure><img src="`+x+`" alt="browser-secure-page-forbidden" tabindex="0" loading="lazy"><figcaption>browser-secure-page-forbidden</figcaption></figure><h3 id="_9-pkcs12-client-key-받기" tabindex="-1"><a class="header-anchor" href="#_9-pkcs12-client-key-받기"><span>9. pkcs12 client key 받기</span></a></h3><p>웹서버 인증에 필요한 인증서를 발급받는 절차를 설명합니다. GitHub에서 다운받은 디렉토리에서 <code>₩pk12-app</code> 위치에서 실행합니다.</p><div class="hint-container warning"><p class="hint-container-title">경고</p><ul><li>Python3 가 필요합니다.</li><li>필요 패키지를 설치해야 합니다.</li></ul><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">python <span class="token parameter variable">-m</span> pip <span class="token function">install</span> flask hvac cryptography</span>
<span class="line"></span></code></pre></div></div><p>Python으로 작성된 파일을 실행합니다.</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">python main.py</span>
<span class="line"></span></code></pre></div><p>해당 앱은 <code>8888</code>포트로 열려있습니다. <a href="http://127.0.0.1:8888" target="_blank" rel="noopener noreferrer">http://127.0.0.1:8888</a> 페이지로 이동합니다.</p><figure><img src="`+w+`" alt="pki-get" tabindex="0" loading="lazy"><figcaption>pki-get</figcaption></figure><p>앞서 생성한 Vault userpass 인증의 username인 <code>user1</code>과 password인 <code>password</code>를 입력하고, 인증서용 비밀번호(예: <code>1234</code>)를 입력하면 Vault로 부터 PEM인증서를 받아 pkcs#12 인증서로 변환 후 다운로드가 진행됩니다.</p><p>만약 Vault 에서 PEM을 직접 받는 경우, <code>OpenSSL</code>을 사용하여 다음과 같이 PEM 인증서를 pkcs#12 형태로 변경할 수 있습니다.</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">openssl pkcs12 <span class="token parameter variable">-export</span> <span class="token parameter variable">-out</span> user1.p12 <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-inkey</span> private_key.pem <span class="token parameter variable">-in</span> certificate.pem <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-certfile</span> issuing_ca.pem</span>
<span class="line"></span></code></pre></div><p>다운 받은 인증서를 더블클릭하여 Host OS에 인증서를 등록합니다. 등록시 인증서 발급 때 입력한 인증서용 비밀번호가 필요합니다.</p><figure><img src="`+y+'" alt="pk12 registration - macOS" tabindex="0" loading="lazy"><figcaption>pk12 registration - macOS</figcaption></figure><p>인증서 등록이 완료되면 내 인증서 목록에 표기됩니다.</p><figure><img src="'+S+'" alt="\bKey Chain - macOS" tabindex="0" loading="lazy"><figcaption>\bKey Chain - macOS</figcaption></figure><h2 id="_10-인증서로-웹서버-인증-받기" tabindex="-1"><a class="header-anchor" href="#_10-인증서로-웹서버-인증-받기"><span>10. 인증서로 웹서버 인증 받기</span></a></h2><p>다시 인증서를 요구하는 페이지로 이동합니다.</p><p>click : <a href="https://service-a.example.com/secure" target="_blank" rel="noopener noreferrer">https://service-a.example.com/secure</a></p><p><code>example.com</code>에 대한 인증서이므로, 브라우저에서는 해당 DNS가 같으면 자동으로 인식합니다.</p><figure><img src="'+T+'" alt="Check Cert" tabindex="0" loading="lazy"><figcaption>Check Cert</figcaption></figure><p>인증서를 등록하면 이제 <code>secure</code> 경로의 페이지 내용을 확인할 수 있습니다.</p><figure><img src="'+L+'" alt="browser-secure-page-access" tabindex="0" loading="lazy"><figcaption>browser-secure-page-access</figcaption></figure><h2 id="결론" tabindex="-1"><a class="header-anchor" href="#결론"><span>결론</span></a></h2><p>Vault를 활용한 mTLS 구현은 현대 웹 서비스의 보안 요구사항을 효과적으로 충족시킬 수 있는 솔루션입니다. 자동화된 인증서 관리, 세밀한 접근 제어, 강력한 보안성을 통해 민감한 데이터와 시스템을 보호할 수 있습니다. 특히 Vault의 자동화 기능은 운영 부담을 줄이면서도 보안을 강화할 수 있는 균형 잡힌 접근 방식을 제공합니다.<br> 보안은 단순한 기능이 아닌 지속적인 프로세스입니다. Vault를 통한 mTLS 구현은 이러한 보안 프로세스를 자동화하고 표준화하는 데 큰 도움이 될 것입니다.</p>',37);function hs(bs,gs){const r=p("Mermaid"),c=p("CodeTabs"),o=p("Tabs");return d(),m("div",null,[A,t(r,{id:"mermaid-264",code:"eJyVU8tu2kAU3ecrrtSNqRQjsmQRqa9F1Ecq0XQ/RaPEKhDXmCRLUtyqhT5ACU1C7YhI6UuiKglEdaV8EXPnHzoPA04Mi3hhjUfnnnvOuddl+qpCS3l63yLrDikugHhs4rhW3rJJyYW1MnWAlAFf97DzC4+bCcRqLnF119ncjupY+IEFl9jpY7eawD0nlYIrUfqAns/OvQTq6cOVO7aduH6ybpV2FtS1FLm4vKxYsurLJmWhOQjxewD8yEfvjB/tg0Eq7gbQEnlRoFCJYKkZFBO3MBp42G0bEpxJAdYCQQXGltK77VguBcmZHpOpg35nwDRNTR7voN1khat7uVuZpUiksA6s74/C94CdfTz/DUY8OTxoSgR2W/j2o+bUPFPJuuXY8ldvHrEqVjVxMQ8ez8AHLda4uNpMmhDxTKGNU+wM2YnP9nwwbpv2y8xS6spQVnNxPDZ8rJ/yN75wBGzvjJ0EGh2tjChQcxU1Yhn+eQIsXY/+Xk5y2XBdu5xNpwV6y8rTRWLSHVK0C9TMbxZ1NopCUEWkUoC0Akbx2aMcsD+hnq9UI9jbWNsdNxn1q6z+LXKQ0MQGQ2y/A/7pEIMh/qjeSJq4zVccOkch3x3KaQvaLyGvh/HIpmObCro+B/S6vBbA2grwli9sxScw6aHzZk0Bv1Y4ZwQTFP/c4+2fvH2IBz3AYxHeRNOMrNUKiv9kNLhQm5iMTW/Wf3YfCW0="}),O,t(c,{id:"305",data:[{id:"macOS/Linux"},{id:"Windows"}]},{title0:a(({value:e,isActive:l})=>[n("macOS/Linux")]),title1:a(({value:e,isActive:l})=>[n("Windows")]),tab0:a(({value:e,isActive:l})=>[N]),tab1:a(({value:e,isActive:l})=>[V]),_:1}),C,D,t(c,{id:"319",data:[{id:"macOS/Linux"},{id:"Windows"}]},{title0:a(({value:e,isActive:l})=>[n("macOS/Linux")]),title1:a(({value:e,isActive:l})=>[n("Windows")]),tab0:a(({value:e,isActive:l})=>[E]),tab1:a(({value:e,isActive:l})=>[I]),_:1}),P,U,t(c,{id:"342",data:[{id:"macOS/Linux"},{id:"Windows"}]},{title0:a(({value:e,isActive:l})=>[n("macOS/Linux")]),title1:a(({value:e,isActive:l})=>[n("Windows")]),tab0:a(({value:e,isActive:l})=>[R]),tab1:a(({value:e,isActive:l})=>[j]),_:1}),K,M,F,t(c,{id:"361",data:[{id:"macOS/Linux"},{id:"Windows"}]},{title0:a(({value:e,isActive:l})=>[n("macOS/Linux")]),title1:a(({value:e,isActive:l})=>[n("Windows")]),tab0:a(({value:e,isActive:l})=>[H]),tab1:a(({value:e,isActive:l})=>[Y]),_:1}),W,t(c,{id:"399",data:[{id:"macOS/Linux"},{id:"Windows"}]},{title0:a(({value:e,isActive:l})=>[n("macOS/Linux")]),title1:a(({value:e,isActive:l})=>[n("Windows")]),tab0:a(({value:e,isActive:l})=>[z]),tab1:a(({value:e,isActive:l})=>[J]),_:1}),G,t(o,{id:"432",data:[{id:"CLI"},{id:"UI"}]},{title0:a(({value:e,isActive:l})=>[n("CLI")]),title1:a(({value:e,isActive:l})=>[n("UI")]),tab0:a(({value:e,isActive:l})=>[B,$,Q,Z,X,ss,ns,as]),tab1:a(({value:e,isActive:l})=>[es,ls,ts,is,cs,ps]),_:1}),os,t(o,{id:"497",data:[{id:"macOS/Linux"},{id:"Windows"}]},{title0:a(({value:e,isActive:l})=>[n("macOS/Linux")]),title1:a(({value:e,isActive:l})=>[n("Windows")]),tab0:a(({value:e,isActive:l})=>[rs,us]),tab1:a(({value:e,isActive:l})=>[ds,ms,vs]),_:1}),ks])}const xs=u(q,[["render",hs],["__file","mtls-authentication-to-secure-web-services.html.vue"]]),ws=JSON.parse(`{"path":"/04-HashiCorp/06-Vault/04-UseCase/mtls-authentication-to-secure-web-services.html","title":"Vault를 활용한 mTLS 인증 자동화로 웹 서비스 보안 강화하기","lang":"ko-KR","frontmatter":{"head":[["meta",{"name":"Vault를 활용한 mTLS 인증 자동화로 웹 서비스 보안 강화하기","content":"Vault PKI와 mTLS를 활용한 웹서버 인증"}],["meta",{"property":"og:url","content":"https://docmoa.github.io/04-HashiCorp/06-Vault/04-UseCase/mtls-authentication-to-secure-web-services.html"}],["meta",{"property":"og:site_name","content":"docmoa"}],["meta",{"property":"og:title","content":"Vault를 활용한 mTLS 인증 자동화로 웹 서비스 보안 강화하기"}],["meta",{"property":"og:description","content":"Vault를 활용한 mTLS 인증 자동화로 웹 서비스 보안 강화하기 웹 서비스의 보안은 현대 IT 인프라에서 가장 중요한 요소 중 하나입니다. 특히 민감한 데이터를 다루는 서비스에서는 단순한 사용자명/패스워드 인증을 넘어선 보다 강력한 보안 메커니즘이 필요합니다. 이러한 맥락에서 상호 TLS(mTLS) 인증은 클라이..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2025-02-12T01:58:15.000Z"}],["meta",{"property":"article:tag","content":"vault"}],["meta",{"property":"article:tag","content":"pki"}],["meta",{"property":"article:tag","content":"mTLS"}],["meta",{"property":"article:modified_time","content":"2025-02-12T01:58:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Vault를 활용한 mTLS 인증 자동화로 웹 서비스 보안 강화하기\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-12T01:58:15.000Z\\",\\"author\\":[]}"]],"tag":["vault","pki","mTLS"],"description":"Vault를 활용한 mTLS 인증 자동화로 웹 서비스 보안 강화하기 웹 서비스의 보안은 현대 IT 인프라에서 가장 중요한 요소 중 하나입니다. 특히 민감한 데이터를 다루는 서비스에서는 단순한 사용자명/패스워드 인증을 넘어선 보다 강력한 보안 메커니즘이 필요합니다. 이러한 맥락에서 상호 TLS(mTLS) 인증은 클라이..."},"headers":[{"level":2,"title":"mTLS의 필요성과 도전 과제","slug":"mtls의-필요성과-도전-과제","link":"#mtls의-필요성과-도전-과제","children":[]},{"level":2,"title":"HashiCorp Vault를 활용한 자동화된 mTLS 구현","slug":"hashicorp-vault를-활용한-자동화된-mtls-구현","link":"#hashicorp-vault를-활용한-자동화된-mtls-구현","children":[{"level":3,"title":"1. 자동화된 인증서 수명 주기 관리","slug":"_1-자동화된-인증서-수명-주기-관리","link":"#_1-자동화된-인증서-수명-주기-관리","children":[]},{"level":3,"title":"2. 세밀한 접근 제어","slug":"_2-세밀한-접근-제어","link":"#_2-세밀한-접근-제어","children":[]},{"level":3,"title":"3. 보안 강화","slug":"_3-보안-강화","link":"#_3-보안-강화","children":[]}]},{"level":2,"title":"실제 적용 사례","slug":"실제-적용-사례","link":"#실제-적용-사례","children":[]},{"level":2,"title":"구현 예시","slug":"구현-예시","link":"#구현-예시","children":[{"level":3,"title":"1. Setup ENV","slug":"_1-setup-env","link":"#_1-setup-env","children":[]},{"level":3,"title":"2. Run Vault","slug":"_2-run-vault","link":"#_2-run-vault","children":[]},{"level":3,"title":"3. Setup Vault PKI","slug":"_3-setup-vault-pki","link":"#_3-setup-vault-pki","children":[]},{"level":3,"title":"4. Vault Policy & Token for Nomad","slug":"_4-vault-policy-token-for-nomad","link":"#_4-vault-policy-token-for-nomad","children":[]},{"level":3,"title":"5. Run Nomad with Vault Toekn","slug":"_5-run-nomad-with-vault-toekn","link":"#_5-run-nomad-with-vault-toekn","children":[]},{"level":3,"title":"6. Setup Vault Userpass","slug":"_6-setup-vault-userpass","link":"#_6-setup-vault-userpass","children":[]},{"level":3,"title":"7. Nginx run on Nomad with mTLS configuration","slug":"_7-nginx-run-on-nomad-with-mtls-configuration","link":"#_7-nginx-run-on-nomad-with-mtls-configuration","children":[]},{"level":3,"title":"8. Set hosts file and browser check","slug":"_8-set-hosts-file-and-browser-check","link":"#_8-set-hosts-file-and-browser-check","children":[]},{"level":3,"title":"9. pkcs12 client key 받기","slug":"_9-pkcs12-client-key-받기","link":"#_9-pkcs12-client-key-받기","children":[]}]},{"level":2,"title":"10. 인증서로 웹서버 인증 받기","slug":"_10-인증서로-웹서버-인증-받기","link":"#_10-인증서로-웹서버-인증-받기","children":[]},{"level":2,"title":"결론","slug":"결론","link":"#결론","children":[]}],"git":{"createdTime":1739325495000,"updatedTime":1739325495000,"contributors":[{"name":"Great-Stone","email":"hahohh@gmail.com","commits":1}]},"readingTime":{"minutes":22.82,"words":1369},"filePathRelative":"04-HashiCorp/06-Vault/04-UseCase/mtls-authentication-to-secure-web-services.md","localizedDate":"2025년 2월 12일","excerpt":"\\n<p>웹 서비스의 보안은 현대 IT 인프라에서 가장 중요한 요소 중 하나입니다. 특히 민감한 데이터를 다루는 서비스에서는 단순한 사용자명/패스워드 인증을 넘어선 보다 강력한 보안 메커니즘이 필요합니다. 이러한 맥락에서 상호 TLS(mTLS) 인증은 클라이언트와 서버 간의 양방향 인증을 제공하는 강력한 보안 솔루션입니다.</p>\\n<h2>mTLS의 필요성과 도전 과제</h2>\\n<blockquote>\\n<p>참고 'mTLS 인증' : <a href=\\"https://wiki.kreonet.net/web-auth-sso/mtls-51119765.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://wiki.kreonet.net/web-auth-sso/mtls-51119765.html</a></p>\\n</blockquote>","autoDesc":true}`);export{xs as comp,ws as data};
