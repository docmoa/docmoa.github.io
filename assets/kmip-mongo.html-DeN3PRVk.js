import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as n,h as e}from"./app-DVMlqOhY.js";const t={},p=e(`<h1 id="kmip-mongodb" tabindex="-1"><a class="header-anchor" href="#kmip-mongodb"><span>KMIP - MongoDB</span></a></h1><blockquote><p>Enterprise 기능</p></blockquote><h2 id="vault-dev-mode-run-option" tabindex="-1"><a class="header-anchor" href="#vault-dev-mode-run-option"><span>Vault - dev mode run (Option)</span></a></h2><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token assign-left variable">VAULT_UI</span><span class="token operator">=</span>true vault server -dev-root-token-id<span class="token operator">=</span>root <span class="token parameter variable">-dev</span> -log-level<span class="token operator">=</span>trace</span>
<span class="line"></span>
<span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable">VAULT_ADDR</span><span class="token operator">=</span><span class="token string">&quot;http://127.0.0.1:8200&quot;</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;export VAULT_ADDR=<span class="token variable">$VAULT_ADDR</span>&quot;</span> <span class="token operator">&gt;&gt;</span> /root/.bashrc</span>
<span class="line">vault status</span>
<span class="line">vault login root</span>
<span class="line"></span></code></pre></div><h2 id="kmip-구성" tabindex="-1"><a class="header-anchor" href="#kmip-구성"><span>KMIP 구성</span></a></h2><p>KMIP 활성화</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">$ vault secrets <span class="token builtin class-name">enable</span> kmip</span>
<span class="line"></span>
<span class="line">Success<span class="token operator">!</span> Enabled the kmip secrets engine at: kmip/</span>
<span class="line"></span></code></pre></div><p>KMIP Listner 구성 (5696은 표준 기본 포트 입니다.)</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">$ vault <span class="token function">write</span> kmip/config <span class="token assign-left variable">listen_addrs</span><span class="token operator">=</span><span class="token number">0.0</span>.0.0:5696 <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token assign-left variable">tls_ca_key_type</span><span class="token operator">=</span><span class="token string">&quot;rsa&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token assign-left variable">tls_ca_key_bits</span><span class="token operator">=</span><span class="token number">2048</span></span>
<span class="line">  </span>
<span class="line">Success<span class="token operator">!</span> Data written to: kmip/config</span>
<span class="line"></span></code></pre></div><p>MongoDB에 전달할 KMIP CA 인증서를 저장</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">$ vault <span class="token builtin class-name">read</span> <span class="token parameter variable">-format</span> json kmip/ca <span class="token operator">|</span> jq <span class="token parameter variable">-r</span> .data.ca_pem <span class="token operator">&gt;</span> ca.pem</span>
<span class="line"></span></code></pre></div><p>샘플로 &quot;HashiCup&quot; 앱의 관리 개체에 대한 범위를 생성</p><ul><li>범위는 KMIP 관리 객체를 여러 명명된 버킷으로 분할합니다. (여기서는 &quot;HashiCup&quot;)</li><li>버킷 하위의 Role(역할)은 버킷 내에서 관리되며 다양한 허용 KMIP 작업을 할당할 수 있습니다. 여기서는 MongoDB가 수행할 수 있는 허용된 KMIP 작업을 지정하는 &quot;payment&quot; 역할도 생성합니다.</li></ul><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">$ vault <span class="token function">write</span> <span class="token parameter variable">-f</span> kmip/scope/hashicups</span>
<span class="line">Success<span class="token operator">!</span> Data written to: kmip/scope/hashicups</span>
<span class="line"></span>
<span class="line">$ vault <span class="token function">write</span> kmip/scope/hashicups/role/payments <span class="token assign-left variable">operation_all</span><span class="token operator">=</span>true</span>
<span class="line">Success<span class="token operator">!</span> Data written to: kmip/scope/hashicups/role/payments</span>
<span class="line"></span></code></pre></div><p>리프 인증서와 개인 키 생성</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">$ vault <span class="token function">write</span> <span class="token parameter variable">-format</span><span class="token operator">=</span>json <span class="token punctuation">\\</span></span>
<span class="line">  kmip/scope/hashicups/role/payments/credential/generate <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token assign-left variable">format</span><span class="token operator">=</span>pem <span class="token operator">&gt;</span> credential.json</span>
<span class="line">$ jq <span class="token parameter variable">-r</span> .data.certificate <span class="token operator">&lt;</span> credential.json <span class="token operator">&gt;</span> cert.pem</span>
<span class="line">$ jq <span class="token parameter variable">-r</span> .data.private_key <span class="token operator">&lt;</span> credential.json <span class="token operator">&gt;</span> key.pem</span>
<span class="line">$ <span class="token function">cat</span> cert.pem key.pem <span class="token operator">&gt;</span> client.pem</span>
<span class="line"></span></code></pre></div><h2 id="mongodb-구성" tabindex="-1"><a class="header-anchor" href="#mongodb-구성"><span>MongoDB 구성</span></a></h2><p>KMIP을 사용하기 위한 옵션과 함께 mongoDB를 시작</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">$ mongod <span class="token parameter variable">--dbpath</span> /var/lib/mongodb <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">--logpath</span> /var/log/mongodb/mongo.log <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">--enableEncryption</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">--kmipServerName</span> localhost <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">--kmipPort</span> <span class="token number">5696</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">--kmipServerCAFile</span> ca.pem <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">--kmipClientCertificateFile</span> client.pem</span>
<span class="line"></span></code></pre></div><p>KMIP 적용 확인</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">$ <span class="token function">cat</span> /var/log/mongodb/mongo.log  <span class="token operator">|</span> <span class="token function">grep</span> KMIP <span class="token operator">|</span> jq</span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token string">&quot;t&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&quot;<span class="token variable">$date</span>&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;2021-07-20T02:03:34.031+00:00&quot;</span></span>
<span class="line">  <span class="token punctuation">}</span>,</span>
<span class="line">  <span class="token string">&quot;s&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;I&quot;</span>,</span>
<span class="line">  <span class="token string">&quot;c&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;STORAGE&quot;</span>,</span>
<span class="line">  <span class="token string">&quot;id&quot;</span><span class="token builtin class-name">:</span> <span class="token number">24199</span>,</span>
<span class="line">  <span class="token string">&quot;ctx&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;initandlisten&quot;</span>,</span>
<span class="line">  <span class="token string">&quot;msg&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;Created KMIP key&quot;</span>,</span>
<span class="line">  <span class="token string">&quot;attr&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&quot;keyId&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;agZTSeeJyQjVOKJgn3xeGJ6Va8sXfRXP&quot;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="test" tabindex="-1"><a class="header-anchor" href="#test"><span>TEST</span></a></h2><p>샘플 데이터 삽입</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">$ mongo</span>
<span class="line"></span>
<span class="line">MongoDB Enterprise <span class="token operator">&gt;</span> db.examples.insertOne<span class="token punctuation">(</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    name: <span class="token string">&quot;sue&quot;</span>,</span>
<span class="line">    age: <span class="token number">26</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">MongoDB Enterprise <span class="token operator">&gt;</span> <span class="token builtin class-name">exit</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>결과 확인</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token comment"># Collection WiredTiger 파일에 기록된 정보</span></span>
<span class="line"><span class="token comment"># KMIP 적용 전</span></span>
<span class="line">$ <span class="token function">cat</span> /var/lib/mongodb/collection-7*</span>
<span class="line">A�<span class="token comment">#�\\�D���1_id\`�1�g�~R=��namesueage:@4�D��8�����D��2</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># KMIP 적용 후</span></span>
<span class="line">$ <span class="token function">cat</span> /var/lib/mongodb/collection-7*</span>
<span class="line">A�<span class="token comment">#�\\</span></span>
<span class="line">     ��$�<span class="token operator">|</span>��H�<span class="token punctuation">}</span>l�����<span class="token punctuation">(</span>ں?����s�ɛocD��<span class="token punctuation">\\</span>K�<span class="token operator">&gt;</span>J������m��N��<span class="token comment">#����_�������К</span></span>
<span class="line">�X���ϩ<span class="token punctuation">}</span>_�z6��L�nQ���pQ�sO�<span class="token punctuation">]</span>�0���h_�     <span class="token comment">#�Ȟ�߳2</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,26),l=[p];function o(i,c){return a(),n("div",null,l)}const d=s(t,[["render",o],["__file","kmip-mongo.html.vue"]]),m=JSON.parse('{"path":"/04-HashiCorp/06-Vault/02-Secret_Engine/kmip-mongo.html","title":"KMIP - MongoDB","lang":"ko-KR","frontmatter":{"description":"Vault의 KMIP 기능과 MongoDB 연동","tag":["vault","Vault Enterprise","KMIP","MongoDB"],"head":[["meta",{"property":"og:url","content":"https://docmoa.github.io/04-HashiCorp/06-Vault/02-Secret_Engine/kmip-mongo.html"}],["meta",{"property":"og:site_name","content":"docmoa"}],["meta",{"property":"og:title","content":"KMIP - MongoDB"}],["meta",{"property":"og:description","content":"Vault의 KMIP 기능과 MongoDB 연동"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2023-09-18T13:12:54.000Z"}],["meta",{"property":"article:tag","content":"vault"}],["meta",{"property":"article:tag","content":"Vault Enterprise"}],["meta",{"property":"article:tag","content":"KMIP"}],["meta",{"property":"article:tag","content":"MongoDB"}],["meta",{"property":"article:modified_time","content":"2023-09-18T13:12:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"KMIP - MongoDB\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-18T13:12:54.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Vault - dev mode run (Option)","slug":"vault-dev-mode-run-option","link":"#vault-dev-mode-run-option","children":[]},{"level":2,"title":"KMIP 구성","slug":"kmip-구성","link":"#kmip-구성","children":[]},{"level":2,"title":"MongoDB 구성","slug":"mongodb-구성","link":"#mongodb-구성","children":[]},{"level":2,"title":"TEST","slug":"test","link":"#test","children":[]}],"git":{"createdTime":1628563561000,"updatedTime":1695042774000,"contributors":[{"name":"Administrator","email":"admin@example.com","commits":1},{"name":"Great-Stone","email":"hahohh@gmail.com","commits":1}]},"readingTime":{"minutes":4.27,"words":256},"filePathRelative":"04-HashiCorp/06-Vault/02-Secret_Engine/kmip-mongo.md","localizedDate":"2021년 8월 10일","excerpt":"\\n<blockquote>\\n<p>Enterprise 기능</p>\\n</blockquote>\\n<h2>Vault - dev mode run (Option)</h2>\\n<div class=\\"language-bash\\" data-highlighter=\\"prismjs\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"line\\"><span class=\\"token assign-left variable\\">VAULT_UI</span><span class=\\"token operator\\">=</span>true vault server -dev-root-token-id<span class=\\"token operator\\">=</span>root <span class=\\"token parameter variable\\">-dev</span> -log-level<span class=\\"token operator\\">=</span>trace</span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span class=\\"token builtin class-name\\">export</span> <span class=\\"token assign-left variable\\">VAULT_ADDR</span><span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"http://127.0.0.1:8200\\"</span></span>\\n<span class=\\"line\\"><span class=\\"token builtin class-name\\">echo</span> <span class=\\"token string\\">\\"export VAULT_ADDR=<span class=\\"token variable\\">$VAULT_ADDR</span>\\"</span> <span class=\\"token operator\\">&gt;&gt;</span> /root/.bashrc</span>\\n<span class=\\"line\\">vault status</span>\\n<span class=\\"line\\">vault login root</span>\\n<span class=\\"line\\"></span></code></pre></div>"}');export{d as comp,m as data};
