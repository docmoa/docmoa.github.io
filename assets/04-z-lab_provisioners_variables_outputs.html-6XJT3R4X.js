import{_ as a}from"./lab1-02-By4gwc7V.js";import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as r,h as t}from"./app-DVMlqOhY.js";const n="/assets/lab4-01-BF_dIRYq.png",o={},l=t('<h1 id="lab-provisioners-variables-outputs" tabindex="-1"><a class="header-anchor" href="#lab-provisioners-variables-outputs"><span>💻 Lab - Provisioners, Variables, Outputs</span></a></h1><h3 id="편집기에서-열기" tabindex="-1"><a class="header-anchor" href="#편집기에서-열기"><span>편집기에서 열기</span></a></h3><figure><img src="'+a+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>VSCode를 실행하고 File(파일) 메뉴에서 <code>Open Folder...</code> 를 클릭합니다.</li><li>앞서 실습을 진행한 <code>lab02</code>을 열어줍니다.</li></ul><hr><h2 id="🛠️-use-a-provisioner" tabindex="-1"><a class="header-anchor" href="#🛠️-use-a-provisioner"><span>🛠️ Use a Provisioner</span></a></h2><p>@slidestart blood</p><h3 id="terraform-프로비저닝-도구는-생성-시-한-번-실행됩니다" tabindex="-1"><a class="header-anchor" href="#terraform-프로비저닝-도구는-생성-시-한-번-실행됩니다"><span>Terraform 프로비저닝 도구는 생성 시 한 번 실행됩니다.</span></a></h3><hr><h3 id="특별한-상황을-제외하고는-후속-적용에서-실행되지-않습니다-이-실습실처럼" tabindex="-1"><a class="header-anchor" href="#특별한-상황을-제외하고는-후속-적용에서-실행되지-않습니다-이-실습실처럼"><span>특별한 상황을 제외하고는 후속 적용에서 실행되지 않습니다. (이 실습실처럼...)</span></a></h3><hr><h3 id="terraform-apply-를-입력할-때마다-프로비저닝-도구가-강제로-실행되도록-몇-가지-특별한-조정을-했습니다" tabindex="-1"><a class="header-anchor" href="#terraform-apply-를-입력할-때마다-프로비저닝-도구가-강제로-실행되도록-몇-가지-특별한-조정을-했습니다"><span><code>terraform apply</code> 를 입력할 때마다 프로비저닝 도구가 강제로 실행되도록 몇 가지 특별한 조정을 했습니다.</span></a></h3><p>이는 변경할 때마다 가상 머신을 파괴하고 다시 생성하지 않고 프로비저닝 도구를 사용하여 연습할 수 있도록 하기 위한 것입니다.</p><div class="language-hcl" data-highlighter="prismjs" data-ext="hcl" data-title="hcl"><pre class="language-hcl"><code><span class="line"><span class="token property">triggers</span> <span class="token punctuation">=</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">build_number</span> <span class="token punctuation">=</span> timestamp()</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><hr><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">______________________</span>
<span class="line"><span class="token operator">&lt;</span> Cows love Terraform<span class="token operator">!</span> <span class="token operator">&gt;</span></span>
<span class="line"> ----------------------</span>
<span class="line">         <span class="token punctuation">\\</span>   ^__^</span>
<span class="line">          <span class="token punctuation">\\</span>  <span class="token punctuation">(</span>oo<span class="token punctuation">)</span><span class="token punctuation">\\</span>_______</span>
<span class="line">             <span class="token punctuation">(</span>__<span class="token punctuation">)</span><span class="token punctuation">\\</span>       <span class="token punctuation">)</span><span class="token punctuation">\\</span>/<span class="token punctuation">\\</span></span>
<span class="line">                 <span class="token operator">||</span>----w <span class="token operator">|</span></span>
<span class="line">                 <span class="token operator">||</span>     <span class="token operator">||</span></span>
<span class="line"><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span></span>
<span class="line"></span></code></pre></div><p>@slideend</p><h4 id="provisioner를-수정합니다" tabindex="-1"><a class="header-anchor" href="#provisioner를-수정합니다"><span>💻 Provisioner를 수정합니다.</span></a></h4><p><code>main.tf</code> 파일을 열어 <code>remote-exec</code> 항목이 있는 곳으로 이동합니다.</p><p><code>inline</code> 항목에 다음을 두줄 추가합니다.</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token string">&quot;sudo apt -y install cowsay&quot;</span>,</span>
<span class="line"><span class="token string">&quot;cowsay Mooooooooooo!&quot;</span>,</span>
<span class="line"></span></code></pre></div><div class="hint-container tip"><p class="hint-container-title">팁</p><p><code>terraform fmt</code>명령을 사용하여 코드를 멋지게 정렬 할 수 있는 좋은 시간 입니다.</p></div><p>이제 변경 사항을 적용하십시오.</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">terraform apply -auto-approve</span>
<span class="line"></span></code></pre></div><p>로그 출력을 뒤로 스크롤합니다. &quot;Moooooooo!&quot;라고 말하는 ASCII 아트 암소가 보일 것입니다.</p><details class="hint-container details"><summary>Result example</summary><figure><img src="`+n+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></details><hr><h2 id="🖨️-add-an-output" tabindex="-1"><a class="header-anchor" href="#🖨️-add-an-output"><span>🖨️ Add an Output</span></a></h2><p>@slidestart blood</p><h3 id="출력에서-terraform-데이터와-함께-일반-텍스트를-혼합할-수-있습니다" tabindex="-1"><a class="header-anchor" href="#출력에서-terraform-데이터와-함께-일반-텍스트를-혼합할-수-있습니다"><span>출력에서 Terraform 데이터와 함께 일반 텍스트를 혼합할 수 있습니다.</span></a></h3><p>출력은 실행이 끝날 때 사용자에게 유용한 정보를 전달하는 데 사용할 수 있습니다.</p><hr><h3 id="terraform-refresh-명령은-상태-파일을-인프라에-있는-파일과-동기화합니다" tabindex="-1"><a class="header-anchor" href="#terraform-refresh-명령은-상태-파일을-인프라에-있는-파일과-동기화합니다"><span><code>terraform refresh</code> 명령은 상태 파일을 인프라에 있는 파일과 동기화합니다.</span></a></h3><p>이 명령은 인프라를 변경하지 않습니다.</p><hr><h3 id="terraform-출력을-다시-보고-싶을-때-언제든지-terraform-output-명령을-실행할-수-있습니다" tabindex="-1"><a class="header-anchor" href="#terraform-출력을-다시-보고-싶을-때-언제든지-terraform-output-명령을-실행할-수-있습니다"><span>Terraform 출력을 다시 보고 싶을 때 언제든지 <code>terraform output</code> 명령을 실행할 수 있습니다.</span></a></h3><p>단일 출력을 보려면 <code>terraform output &lt;output_name&gt;</code>을 실행합니다.</p><p>@slideend</p><h4 id="output을-수정합니다" tabindex="-1"><a class="header-anchor" href="#output을-수정합니다"><span>💻 Output을 수정합니다.</span></a></h4><p><code>output.tf</code> 파일을 열어 아래 항목을 추가합니다.</p><div class="language-hcl" data-highlighter="prismjs" data-ext="hcl" data-title="hcl"><pre class="language-hcl"><code><span class="line"><span class="token keyword">output<span class="token type variable"> &quot;ssh_info&quot; </span></span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">value</span> <span class="token punctuation">=</span> nonsensitive(<span class="token string">&quot;sshpass -p &#39;<span class="token interpolation"><span class="token punctuation">$</span><span class="token punctuation">{</span><span class="token keyword">data</span><span class="token punctuation">.</span><span class="token type variable">ncloud_root_password</span><span class="token punctuation">.</span>hashicat<span class="token punctuation">.</span>root_password<span class="token punctuation">}</span></span>&#39; ssh root@<span class="token interpolation"><span class="token punctuation">$</span><span class="token punctuation">{</span>ncloud_public_ip<span class="token punctuation">.</span>hashicat<span class="token punctuation">.</span>public_ip<span class="token punctuation">}</span></span> -oStrictHostKeyChecking=no&quot;</span>)</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><p>해당 output의 이름은 <code>ssh_info</code> 입니다.</p><p>어떤 유형의 출력이 유효한지 보려면 문서 페이지를 참조하세요.</p><ul><li>ncloud_root_password : <a href="https://registry.terraform.io/providers/NaverCloudPlatform/ncloud/latest/docs/data-sources/root_password#argument-reference" target="_blank" rel="noopener noreferrer">https://registry.terraform.io/providers/NaverCloudPlatform/ncloud/latest/docs/data-sources/root_password#argument-reference</a></li><li>ncloud_public_ip :<a href="https://registry.terraform.io/providers/NaverCloudPlatform/ncloud/latest/docs/resources/public_ip#attributes-reference" target="_blank" rel="noopener noreferrer">https://registry.terraform.io/providers/NaverCloudPlatform/ncloud/latest/docs/resources/public_ip#attributes-reference</a></li></ul><p><code>output.tf</code>에 새로운 내용을 저장하고 <code>terraform refresh</code> 명령을 실행하여 새로운 출력을 확인합니다.</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">terraform refresh</span>
<span class="line"></span></code></pre></div><p><code>terraform output</code> 명령을 실행하여 모든 출력을 볼 수도 있습니다.</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">terraform output</span>
<span class="line"></span></code></pre></div><hr><h2 id="🐶-fun-with-variables" tabindex="-1"><a class="header-anchor" href="#🐶-fun-with-variables"><span>🐶 Fun With Variables</span></a></h2><p>@slidestart blood</p><h3 id="terraform-변수에는-5가지-수준의-우선-순위가-있습니다-1-최고-5-최저" tabindex="-1"><a class="header-anchor" href="#terraform-변수에는-5가지-수준의-우선-순위가-있습니다-1-최고-5-최저"><span>Terraform 변수에는 5가지 수준의 우선 순위가 있습니다. 1=최고 5=최저:</span></a></h3><ol><li>명령줄 플래그 - 명령줄 스위치로 실행</li><li>구성 파일 - terraform.tfvars 파일에 설정</li><li>환경 변수 - 쉘 환경의 일부</li><li>기본 구성 - variables.tf의 기본값</li><li>사용자 수동 입력 - 지정하지 않은 경우 사용자에게 입력을 요청합니다.</li></ol><hr><h3 id="다음은-placeholder-변수로-시도할-수-있는-다른-재미있는-사이트입니다" tabindex="-1"><a class="header-anchor" href="#다음은-placeholder-변수로-시도할-수-있는-다른-재미있는-사이트입니다"><span>다음은 <code>placeholder</code> 변수로 시도할 수 있는 다른 재미있는 사이트입니다.</span></a></h3><ul><li><a href="http://placedog.net" target="_blank" rel="noopener noreferrer">placedog.net</a></li><li><a href="http://placebear.com" target="_blank" rel="noopener noreferrer">placebear.com</a></li><li><a href="http://www.fillmurray.com" target="_blank" rel="noopener noreferrer">www.fillmurray.com</a></li><li><a href="http://www.placecage.com" target="_blank" rel="noopener noreferrer">www.placecage.com</a></li><li><a href="http://placebeard.it" target="_blank" rel="noopener noreferrer">placebeard.it</a></li><li><a href="http://loremflickr.com" target="_blank" rel="noopener noreferrer">loremflickr.com</a></li><li><a href="http://baconmockup.com" target="_blank" rel="noopener noreferrer">baconmockup.com</a></li><li><a href="http://placeimg.com" target="_blank" rel="noopener noreferrer">placeimg.com</a></li></ul><p>@slideend</p><h4 id="변수를-조정합니다" tabindex="-1"><a class="header-anchor" href="#변수를-조정합니다"><span>💻 변수를 조정합니다.</span></a></h4><p>Terraform 변수를 구성하는 방법에는 여러 가지가 있습니다. 지금까지 <code>terraform.tfvars</code> 파일을 사용하여 변수를 설정했습니다.</p><p>명령줄에서 기본값과 다른 <code>height</code>, <code>width</code> 변수를 사용 하여 애플리케이션을 다시 배포해 보십시오.</p><p>변경 사항을 관찰하기 위해 적용할 때마다 웹 앱을 다시 로드합니다.</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">terraform apply -auto-approve <span class="token parameter variable">-var</span> <span class="token assign-left variable">height</span><span class="token operator">=</span><span class="token number">600</span> <span class="token parameter variable">-var</span> <span class="token assign-left variable">width</span><span class="token operator">=</span><span class="token number">800</span></span>
<span class="line"></span></code></pre></div><p>다음으로 Terraform이 읽을 수 있는 환경 변수를 설정해 보십시오. 다음 명령을 실행하여 <code>placeholder</code> 변수를 설정합니다.</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable">TF_VAR_placeholder</span><span class="token operator">=</span>placedog.net</span>
<span class="line"></span></code></pre></div><p>환경 변수 적용 후 <code>terraform apply -auto-approve</code>를 실행하여 다시 적용해 봅니다.</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">terraform apply -auto-approve</span>
<span class="line"></span></code></pre></div><p>이제 명령줄에서 동일한 변수를 다르게 설정하여 다시 시도하십시오.</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">terraform apply -auto-approve <span class="token parameter variable">-var</span> <span class="token assign-left variable">placeholder</span><span class="token operator">=</span>placebear.com</span>
<span class="line"></span></code></pre></div><p>어떤 변수가 우선시 되었습니까? 잘 이해 되셨나요?</p><p>다음 <a href="https://www.terraform.io/docs/language/values/variables.html#variable-definition-precedence" target="_blank" rel="noopener noreferrer">공식문서</a>를 참고할 수 있습니다.</p><hr><h2 id="quiz-time-4-terraform-variables" tabindex="-1"><a class="header-anchor" href="#quiz-time-4-terraform-variables"><span>😱 Quiz Time 4. Terraform Variables</span></a></h2><p>Q. <code>*.tfvars</code> 파일과 환경 변수에 동일한 변수가 설정되어 있습니다. 어느 것이 우선합니까?</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> 환경변수로 구성된 변수</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-1" disabled="disabled"><label class="task-list-item-label" for="task-item-1"> tfvars 파일의 변수</label></li></ul><details class="hint-container details"><summary>답</summary><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-2" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-2"> tfvars 파일의 변수</label></li></ul></details><hr><p>이 장에서 우리는 :</p><ul><li>Terraform Provisioners에 대해 배웠습니다.</li><li><code>file</code> 과 <code>remote-exec</code> 프로비저닝 도구에 대해 알아보았습니다.</li><li>새로운 프로비저닝 단계로 웹서버 재구성 해보았습니다.</li></ul>`,78),p=[l];function i(c,d){return s(),r("div",null,p)}const f=e(o,[["render",i],["__file","04-z-lab_provisioners_variables_outputs.html.vue"]]),g=JSON.parse('{"path":"/03-PublicCloud/NCP/09-Terraform-Workshop/01-intro_to_terraform_on_ncp/04-z-lab_provisioners_variables_outputs.html","title":"💻 Lab - Provisioners, Variables, Outputs","lang":"ko-KR","frontmatter":{"description":"Naver Cloud Platform에서의 Terraform 실습","tag":["ncloud","ncp","terraform","workshop"],"head":[["meta",{"property":"og:url","content":"https://docmoa.github.io/03-PublicCloud/NCP/09-Terraform-Workshop/01-intro_to_terraform_on_ncp/04-z-lab_provisioners_variables_outputs.html"}],["meta",{"property":"og:site_name","content":"docmoa"}],["meta",{"property":"og:title","content":"💻 Lab - Provisioners, Variables, Outputs"}],["meta",{"property":"og:description","content":"Naver Cloud Platform에서의 Terraform 실습"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2023-09-18T13:12:54.000Z"}],["meta",{"property":"article:tag","content":"ncloud"}],["meta",{"property":"article:tag","content":"ncp"}],["meta",{"property":"article:tag","content":"terraform"}],["meta",{"property":"article:tag","content":"workshop"}],["meta",{"property":"article:modified_time","content":"2023-09-18T13:12:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"💻 Lab - Provisioners, Variables, Outputs\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-18T13:12:54.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":3,"title":"편집기에서 열기","slug":"편집기에서-열기","link":"#편집기에서-열기","children":[]},{"level":2,"title":"🛠️ Use a Provisioner","slug":"🛠️-use-a-provisioner","link":"#🛠️-use-a-provisioner","children":[{"level":3,"title":"Terraform 프로비저닝 도구는 생성 시 한 번 실행됩니다.","slug":"terraform-프로비저닝-도구는-생성-시-한-번-실행됩니다","link":"#terraform-프로비저닝-도구는-생성-시-한-번-실행됩니다","children":[]},{"level":3,"title":"특별한 상황을 제외하고는 후속 적용에서 실행되지 않습니다. (이 실습실처럼...)","slug":"특별한-상황을-제외하고는-후속-적용에서-실행되지-않습니다-이-실습실처럼","link":"#특별한-상황을-제외하고는-후속-적용에서-실행되지-않습니다-이-실습실처럼","children":[]},{"level":3,"title":"terraform apply 를 입력할 때마다 프로비저닝 도구가 강제로 실행되도록 몇 가지 특별한 조정을 했습니다.","slug":"terraform-apply-를-입력할-때마다-프로비저닝-도구가-강제로-실행되도록-몇-가지-특별한-조정을-했습니다","link":"#terraform-apply-를-입력할-때마다-프로비저닝-도구가-강제로-실행되도록-몇-가지-특별한-조정을-했습니다","children":[]}]},{"level":2,"title":"🖨️ Add an Output","slug":"🖨️-add-an-output","link":"#🖨️-add-an-output","children":[{"level":3,"title":"출력에서 Terraform 데이터와 함께 일반 텍스트를 혼합할 수 있습니다.","slug":"출력에서-terraform-데이터와-함께-일반-텍스트를-혼합할-수-있습니다","link":"#출력에서-terraform-데이터와-함께-일반-텍스트를-혼합할-수-있습니다","children":[]},{"level":3,"title":"terraform refresh 명령은 상태 파일을 인프라에 있는 파일과 동기화합니다.","slug":"terraform-refresh-명령은-상태-파일을-인프라에-있는-파일과-동기화합니다","link":"#terraform-refresh-명령은-상태-파일을-인프라에-있는-파일과-동기화합니다","children":[]},{"level":3,"title":"Terraform 출력을 다시 보고 싶을 때 언제든지 terraform output 명령을 실행할 수 있습니다.","slug":"terraform-출력을-다시-보고-싶을-때-언제든지-terraform-output-명령을-실행할-수-있습니다","link":"#terraform-출력을-다시-보고-싶을-때-언제든지-terraform-output-명령을-실행할-수-있습니다","children":[]}]},{"level":2,"title":"🐶 Fun With Variables","slug":"🐶-fun-with-variables","link":"#🐶-fun-with-variables","children":[{"level":3,"title":"Terraform 변수에는 5가지 수준의 우선 순위가 있습니다. 1=최고 5=최저:","slug":"terraform-변수에는-5가지-수준의-우선-순위가-있습니다-1-최고-5-최저","link":"#terraform-변수에는-5가지-수준의-우선-순위가-있습니다-1-최고-5-최저","children":[]},{"level":3,"title":"다음은 placeholder 변수로 시도할 수 있는 다른 재미있는 사이트입니다.","slug":"다음은-placeholder-변수로-시도할-수-있는-다른-재미있는-사이트입니다","link":"#다음은-placeholder-변수로-시도할-수-있는-다른-재미있는-사이트입니다","children":[]}]},{"level":2,"title":"😱 Quiz Time 4. Terraform Variables","slug":"quiz-time-4-terraform-variables","link":"#quiz-time-4-terraform-variables","children":[]}],"git":{"createdTime":1634733306000,"updatedTime":1695042774000,"contributors":[{"name":"Great-Stone","email":"hahohh@gmail.com","commits":1}]},"readingTime":{"minutes":4.33,"words":260},"filePathRelative":"03-PublicCloud/NCP/09-Terraform-Workshop/01-intro_to_terraform_on_ncp/04-z-lab_provisioners_variables_outputs.md","localizedDate":"2021년 10월 20일","excerpt":"\\n<h3>편집기에서 열기</h3>\\n<figure><figcaption></figcaption></figure>\\n<ul>\\n<li>VSCode를 실행하고 File(파일) 메뉴에서 <code>Open Folder...</code> 를 클릭합니다.</li>\\n<li>앞서 실습을 진행한 <code>lab02</code>을 열어줍니다.</li>\\n</ul>\\n<hr>\\n<h2>🛠️ Use a Provisioner</h2>\\n<p>@slidestart blood</p>\\n<h3>Terraform 프로비저닝 도구는 생성 시 한 번 실행됩니다.</h3>\\n<hr>"}');export{f as comp,g as data};
