import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as e,c as n,h as a}from"./app-DVMlqOhY.js";const i="/assets/03-use-crd-github-GQpHsMA9.png",l="/assets/03-use-crd-error-BKh9b3mR.png",t="/assets/02-intention-alldeny-CpsNCiFl.png",c="/assets/02-intention-crd-DDJBL_BF.png",r="/assets/03-use-crd-hashicups-BHVZ8qNM.png",p={},o=a(`<h1 id="_03-crd로-consul-serive-mesh-관리" tabindex="-1"><a class="header-anchor" href="#_03-crd로-consul-serive-mesh-관리"><span>03. CRD로 Consul Serive Mesh 관리</span></a></h1><blockquote><p>참고 : <a href="https://learn.hashicorp.com/tutorials/consul/kubernetes-custom-resource-definitions?in=consul/kubernetes" target="_blank" rel="noopener noreferrer">https://learn.hashicorp.com/tutorials/consul/kubernetes-custom-resource-definitions?in=consul/kubernetes</a></p><p>참고 : <a href="https://learn.hashicorp.com/tutorials/consul/service-mesh-zero-trust-network?in=consul/gs-consul-service-mesh" target="_blank" rel="noopener noreferrer">https://learn.hashicorp.com/tutorials/consul/service-mesh-zero-trust-network?in=consul/gs-consul-service-mesh</a></p></blockquote><p>Consul 1.9 이전에는 Kubernetes에서 Consul과 함께 구성 항목을 사용할 때 운영자가 실행 중인 컨테이너에 들어가거나 로컬 Consul 바이너리를 사용하여 구성해야 했습니다. 1.9 이전 버전에서는 구성 항목을 Consul CLI, HTTP API로 관리하거나 시작하는 동안 구성 파일로 에이전트에 제공해야 합니다.</p><p>Consul 1.9부터 대부분의 구성 항목은 Kubernetes 사용자 지정 리소스 정의(CRD)로 관리할 수 있습니다. 이제 대부분의 구성 항목을 YAML로 정의하고 익숙한 <code>kubectl apply</code>명령을 사용하여 Consul에 등록할 수 있습니다.</p><p>현재 Kubernetes에서 Consul의 CRD로 사용할 수 있는 구성 항목은 다음과 같습니다.</p><ul><li><a href="https://learn.hashicorp.com/tutorials/consul/kubernetes-custom-resource-definitions?in=consul/kubernetes#proxy-defaults" target="_blank" rel="noopener noreferrer"><code>proxy-defaults</code></a>- 프록시 구성 제어</li><li><a href="https://learn.hashicorp.com/tutorials/consul/kubernetes-custom-resource-definitions?in=consul/kubernetes#service-defaults" target="_blank" rel="noopener noreferrer"><code>service-defaults</code></a>- 주어진 서비스의 모든 인스턴스에 대한 기본값을 구성합니다.</li><li><a href="https://learn.hashicorp.com/tutorials/consul/kubernetes-custom-resource-definitions?in=consul/kubernetes#service-resolver" target="_blank" rel="noopener noreferrer"><code>service-resolver</code></a>- 서비스 인스턴스를 특정 Connect 업스트림 검색 요청과 일치시킵니다.</li><li><a href="https://learn.hashicorp.com/tutorials/consul/kubernetes-custom-resource-definitions?in=consul/kubernetes#service-router" target="_blank" rel="noopener noreferrer"><code>service-router</code></a>- HTTP 경로를 기반으로 레이어 7 트래픽을 보낼 위치를 정의합니다.</li><li><a href="https://learn.hashicorp.com/tutorials/consul/kubernetes-custom-resource-definitions?in=consul/kubernetes#service-splitter" target="_blank" rel="noopener noreferrer"><code>service-splitter</code></a>- 백분율에 따라 단일 HTTP 경로에 대한 요청을 나누는 방법을 정의합니다.</li><li><a href="https://learn.hashicorp.com/tutorials/consul/kubernetes-custom-resource-definitions?in=consul/kubernetes#service-intentions" target="_blank" rel="noopener noreferrer"><code>service-intentions</code></a>- 특정 서비스 대 서비스 상호 작용에 대한 제한을 정의합니다.</li></ul><h2 id="샘플-애플리케이션-준비" tabindex="-1"><a class="header-anchor" href="#샘플-애플리케이션-준비"><span>샘플 애플리케이션 준비</span></a></h2><p>필요한 애플리케이션을 다운로드 받습니다. git clone 또는 <a href="https://github.com/hashicorp/learn-consul-kubernetes" target="_blank" rel="noopener noreferrer">https://github.com/hashicorp/learn-consul-kubernetes</a> 로 접속하여 Code를 다운로드 받습니다.</p><ul><li><p>git clone</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">git</span> clone https://github.com/hashicorp/learn-consul-kubernetes.git</span>
<span class="line"></span></code></pre></div></li><li><p>Code download</p><figure><img src="`+i+`" alt="image-20220219195033888" tabindex="0" loading="lazy"><figcaption>image-20220219195033888</figcaption></figure></li></ul><p>다운로드 후 <code>learn-consul-kubernetes/service-mesh/deploy</code> 경로로 이동하고 샘플 구성을 반영합니다.</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token builtin class-name">cd</span> learn-consul-kubernetes/service-mesh/deploy</span>
<span class="line">kubectl apply <span class="token parameter variable">-f</span> hashicups/</span>
<span class="line"></span></code></pre></div><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token comment"># 출력</span></span>
<span class="line">service/frontend created</span>
<span class="line">serviceaccount/frontend created</span>
<span class="line">servicedefaults.consul.hashicorp.com/frontend created</span>
<span class="line">configmap/nginx-configmap created</span>
<span class="line">deployment.apps/frontend created</span>
<span class="line">service/postgres created</span>
<span class="line">serviceaccount/postgres created</span>
<span class="line">servicedefaults.consul.hashicorp.com/postgres created</span>
<span class="line">deployment.apps/postgres created</span>
<span class="line">service/product-api created</span>
<span class="line">serviceaccount/product-api created</span>
<span class="line">servicedefaults.consul.hashicorp.com/product-api created</span>
<span class="line">configmap/db-configmap created</span>
<span class="line">deployment.apps/product-api created</span>
<span class="line">service/public-api created</span>
<span class="line">serviceaccount/public-api created</span>
<span class="line">servicedefaults.consul.hashicorp.com/public-api created</span>
<span class="line">deployment.apps/public-api created</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>서비스는 Consul이 각 서비스에 대한 프록시를 자동으로 삽입할 수 있도록 하는 <code>annotation</code> 을 사용합니다. 프록시 는 Consul의 구성을 기반으로 서비스 간의 요청을 처리하기 위해 <strong>데이터 플레인을 생성합니다.</strong> Consul이 주입되는 label을 선택하여 프록시가 있는 응용 프로그램을 확인할 수 있습니다.</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">kubectl get pods <span class="token parameter variable">--selector</span> consul.hashicorp.com/connect-inject-status<span class="token operator">=</span>injected</span>
<span class="line"></span></code></pre></div><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token comment"># 출력</span></span>
<span class="line">NAME                           READY   STATUS    RESTARTS   AGE</span>
<span class="line">frontend-98cb6859b-6ndvk       <span class="token number">2</span>/2     Running   <span class="token number">0</span>          3m10s</span>
<span class="line">postgres-6ccb6d9968-hkbgz      <span class="token number">2</span>/2     Running   <span class="token number">0</span>          3m9s</span>
<span class="line">product-api-6798bc4b4d-9ddv4   <span class="token number">2</span>/2     Running   <span class="token number">2</span>          3m9s</span>
<span class="line">public-api-5bdf986897-tlxj2    <span class="token number">2</span>/2     Running   <span class="token number">0</span>          3m9s</span>
<span class="line"></span></code></pre></div><p>배포된 앱에 접근하기 위해 <code>port-forward</code>를 구성합니다.</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">kubectl port-forward service/frontend <span class="token number">18080</span>:80 <span class="token parameter variable">--address</span> <span class="token number">0.0</span>.0.0</span>
<span class="line"></span></code></pre></div><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token comment"># 출력</span></span>
<span class="line">Forwarding from <span class="token number">0.0</span>.0.0:18080 -<span class="token operator">&gt;</span> <span class="token number">80</span></span>
<span class="line"></span></code></pre></div><p>브라우저에서 <a href="http://localhost:18080" target="_blank" rel="noopener noreferrer">http://localhost:18080</a> 로 접근합니다.</p><figure><img src="`+l+'" alt="image-20220219202023073" tabindex="0" loading="lazy"><figcaption>image-20220219202023073</figcaption></figure><p>현재 <code>Intention</code> 규칙이 모두 <code>deny</code>로 구성되어있다면 에러 화면을 확인하게 됩니다.</p><figure><img src="'+t+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="crd-적용해보기" tabindex="-1"><a class="header-anchor" href="#crd-적용해보기"><span>CRD 적용해보기</span></a></h2><p>UI에서가 아닌 CRD를 통해 <code>Intention</code> 을 정의하기위해 아래와 같이 구성합니다.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">cat</span> <span class="token operator">&gt;</span> ./service-to-service.yaml <span class="token operator">&lt;&lt;</span><span class="token string">EOF</span>
<span class="line">apiVersion: consul.hashicorp.com/v1alpha1</span>
<span class="line">kind: ServiceIntentions</span>
<span class="line">metadata:</span>
<span class="line">  name: frontend-to-public-api</span>
<span class="line">spec:</span>
<span class="line">  destination:</span>
<span class="line">    name: public-api</span>
<span class="line">  sources:</span>
<span class="line">    - name: frontend</span>
<span class="line">      action: allow</span>
<span class="line">---</span>
<span class="line">apiVersion: consul.hashicorp.com/v1alpha1</span>
<span class="line">kind: ServiceIntentions</span>
<span class="line">metadata:</span>
<span class="line">  name: public-api-to-product-api</span>
<span class="line">spec:</span>
<span class="line">  destination:</span>
<span class="line">    name: product-api</span>
<span class="line">  sources:</span>
<span class="line">    - name: public-api</span>
<span class="line">      action: allow</span>
<span class="line">---</span>
<span class="line">apiVersion: consul.hashicorp.com/v1alpha1</span>
<span class="line">kind: ServiceIntentions</span>
<span class="line">metadata:</span>
<span class="line">  name: product-api-to-postgres</span>
<span class="line">spec:</span>
<span class="line">  destination:</span>
<span class="line">    name: postgres</span>
<span class="line">  sources:</span>
<span class="line">    - name: product-api</span>
<span class="line">      action: allow</span>
<span class="line">EOF</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>규칙의 내용은 다음과 같습니다.</p><ul><li>frontend -&gt; public-api</li><li>public-api -&gt; product-api</li><li>product-api -&gt; postgres</li></ul><p>규칙을 적용합니다.</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">kubectl apply <span class="token parameter variable">-f</span> service-to-service.yaml</span>
<span class="line"></span></code></pre></div><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token comment"># 출력</span></span>
<span class="line">serviceintentions.consul.hashicorp.com/frontend-to-public-api created</span>
<span class="line">serviceintentions.consul.hashicorp.com/public-api-to-product-api created</span>
<span class="line">serviceintentions.consul.hashicorp.com/product-api-to-postgres created</span>
<span class="line"></span></code></pre></div><p>Consul UI에서 확인해보면 해당 Intention 규칙은 CRD로 적용되었기 때문에 <code>Managed by CRD</code> 표시가 붙는것을 확인할 수 있습니다.</p><figure><img src="`+c+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>배포된 앱에 접근하기 위해 <code>port-forward</code>를 구성합니다.</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">kubectl port-forward service/frontend <span class="token number">18080</span>:80 <span class="token parameter variable">--address</span> <span class="token number">0.0</span>.0.0</span>
<span class="line"></span></code></pre></div><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token comment"># 출력</span></span>
<span class="line">Forwarding from <span class="token number">0.0</span>.0.0:18080 -<span class="token operator">&gt;</span> <span class="token number">80</span></span>
<span class="line"></span></code></pre></div><p>브라우저에서 <a href="http://localhost:18080" target="_blank" rel="noopener noreferrer">http://localhost:18080</a> 로 접근합니다.</p><figure><img src="`+r+`" alt="image-20220219202943498" tabindex="0" loading="lazy"><figcaption>image-20220219202943498</figcaption></figure><p>서비스 간 연결이 허용되었으므로 페이지가 잘 표시됩니다.</p><p>다음 과정을 위해 배포된 리소스를 정리합니다.</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">kubectl delete <span class="token parameter variable">-f</span> service-to-service.yaml</span>
<span class="line"></span></code></pre></div><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token comment"># 출력</span></span>
<span class="line">serviceintentions.consul.hashicorp.com <span class="token string">&quot;frontend-to-public-api&quot;</span> deleted</span>
<span class="line">serviceintentions.consul.hashicorp.com <span class="token string">&quot;public-api-to-product-api&quot;</span> deleted</span>
<span class="line">serviceintentions.consul.hashicorp.com <span class="token string">&quot;product-api-to-postgres&quot;</span> deleted</span>
<span class="line"></span></code></pre></div><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">kubectl delete <span class="token parameter variable">-f</span> hashicups/</span>
<span class="line"></span></code></pre></div><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token comment"># 출력</span></span>
<span class="line"><span class="token function">service</span> <span class="token string">&quot;frontend&quot;</span> deleted</span>
<span class="line">serviceaccount <span class="token string">&quot;frontend&quot;</span> deleted</span>
<span class="line">servicedefaults.consul.hashicorp.com <span class="token string">&quot;frontend&quot;</span> deleted</span>
<span class="line">configmap <span class="token string">&quot;nginx-configmap&quot;</span> deleted</span>
<span class="line">deployment.apps <span class="token string">&quot;frontend&quot;</span> deleted</span>
<span class="line"><span class="token function">service</span> <span class="token string">&quot;postgres&quot;</span> deleted</span>
<span class="line">serviceaccount <span class="token string">&quot;postgres&quot;</span> deleted</span>
<span class="line">servicedefaults.consul.hashicorp.com <span class="token string">&quot;postgres&quot;</span> deleted</span>
<span class="line">deployment.apps <span class="token string">&quot;postgres&quot;</span> deleted</span>
<span class="line"><span class="token function">service</span> <span class="token string">&quot;product-api&quot;</span> deleted</span>
<span class="line">serviceaccount <span class="token string">&quot;product-api&quot;</span> deleted</span>
<span class="line">servicedefaults.consul.hashicorp.com <span class="token string">&quot;product-api&quot;</span> deleted</span>
<span class="line">configmap <span class="token string">&quot;db-configmap&quot;</span> deleted</span>
<span class="line">deployment.apps <span class="token string">&quot;product-api&quot;</span> deleted</span>
<span class="line"><span class="token function">service</span> <span class="token string">&quot;public-api&quot;</span> deleted</span>
<span class="line">serviceaccount <span class="token string">&quot;public-api&quot;</span> deleted</span>
<span class="line">servicedefaults.consul.hashicorp.com <span class="token string">&quot;public-api&quot;</span> deleted</span>
<span class="line">deployment.apps <span class="token string">&quot;public-api&quot;</span> deleted</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,43),d=[o];function u(h,m){return e(),n("div",null,d)}const b=s(p,[["render",u],["__file","03-use-crd.html.vue"]]),k=JSON.parse('{"path":"/04-HashiCorp/04-Consul/06-on_Kubernetes/ServiceMesh101/03-use-crd.html","title":"03. CRD로 Consul Serive Mesh 관리","lang":"ko-KR","frontmatter":{"description":"Consul Service Mesh on Kubernetes (Ent)","tag":["Consul","ServiceMesh","K8s","Kubernetes"],"head":[["meta",{"property":"og:url","content":"https://docmoa.github.io/04-HashiCorp/04-Consul/06-on_Kubernetes/ServiceMesh101/03-use-crd.html"}],["meta",{"property":"og:site_name","content":"docmoa"}],["meta",{"property":"og:title","content":"03. CRD로 Consul Serive Mesh 관리"}],["meta",{"property":"og:description","content":"Consul Service Mesh on Kubernetes (Ent)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2023-09-18T13:12:54.000Z"}],["meta",{"property":"article:tag","content":"Consul"}],["meta",{"property":"article:tag","content":"ServiceMesh"}],["meta",{"property":"article:tag","content":"K8s"}],["meta",{"property":"article:tag","content":"Kubernetes"}],["meta",{"property":"article:modified_time","content":"2023-09-18T13:12:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"03. CRD로 Consul Serive Mesh 관리\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-18T13:12:54.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"샘플 애플리케이션 준비","slug":"샘플-애플리케이션-준비","link":"#샘플-애플리케이션-준비","children":[]},{"level":2,"title":"CRD 적용해보기","slug":"crd-적용해보기","link":"#crd-적용해보기","children":[]}],"git":{"createdTime":1645936869000,"updatedTime":1695042774000,"contributors":[{"name":"Administrator","email":"admin@example.com","commits":1},{"name":"Great-Stone","email":"hahohh@gmail.com","commits":1}]},"readingTime":{"minutes":9.32,"words":559},"filePathRelative":"04-HashiCorp/04-Consul/06-on_Kubernetes/ServiceMesh101/03-use-crd.md","localizedDate":"2022년 2월 27일","excerpt":"\\n<blockquote>\\n<p>참고 : <a href=\\"https://learn.hashicorp.com/tutorials/consul/kubernetes-custom-resource-definitions?in=consul/kubernetes\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://learn.hashicorp.com/tutorials/consul/kubernetes-custom-resource-definitions?in=consul/kubernetes</a></p>\\n<p>참고 : <a href=\\"https://learn.hashicorp.com/tutorials/consul/service-mesh-zero-trust-network?in=consul/gs-consul-service-mesh\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://learn.hashicorp.com/tutorials/consul/service-mesh-zero-trust-network?in=consul/gs-consul-service-mesh</a></p>\\n</blockquote>"}');export{b as comp,k as data};
