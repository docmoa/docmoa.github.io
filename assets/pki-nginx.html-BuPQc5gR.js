import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as n,h as e}from"./app-DVMlqOhY.js";const t={},p=e(`<h1 id="pki-nginx-샘플" tabindex="-1"><a class="header-anchor" href="#pki-nginx-샘플"><span>PKI - nginx 샘플</span></a></h1><blockquote><p><a href="https://learn.hashicorp.com/tutorials/vault/pki-engine" target="_blank" rel="noopener noreferrer">https://learn.hashicorp.com/tutorials/vault/pki-engine</a></p></blockquote><h2 id="vault-구성" tabindex="-1"><a class="header-anchor" href="#vault-구성"><span>Vault 구성</span></a></h2><p>환경 변수</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable">VAULT_SKIP_VERIFY</span><span class="token operator">=</span>True</span>
<span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable">VAULT_ADDR</span><span class="token operator">=</span><span class="token string">&#39;http://172.28.128.11:8200&#39;</span></span>
<span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable">VAULT_TOKEN</span><span class="token operator">=</span>s.8YXFI825TZxnwLtYHsLc9Fnb</span>
<span class="line"></span></code></pre></div><p>정책 및 사용자 구성</p><p>. ./&lt;pki-policy.hcl&gt;</p><div class="language-ruby line-numbers-mode" data-highlighter="prismjs" data-ext="rb" data-title="rb"><pre class="language-ruby"><code><span class="line">$ vault policy write pki <span class="token operator">-</span> <span class="token operator">&lt;&lt;</span> <span class="token constant">EOF</span></span>
<span class="line"><span class="token comment"># Enable secrets engine</span></span>
<span class="line">path <span class="token string-literal"><span class="token string">&quot;sys/mounts/*&quot;</span></span> <span class="token punctuation">{</span></span>
<span class="line">  capabilities <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token string-literal"><span class="token string">&quot;create&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;read&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;update&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;delete&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;list&quot;</span></span> <span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># List enabled secrets engine</span></span>
<span class="line">path <span class="token string-literal"><span class="token string">&quot;sys/mounts&quot;</span></span> <span class="token punctuation">{</span></span>
<span class="line">  capabilities <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token string-literal"><span class="token string">&quot;read&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;list&quot;</span></span> <span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Work with pki secrets engine</span></span>
<span class="line">path <span class="token string-literal"><span class="token string">&quot;pki*&quot;</span></span> <span class="token punctuation">{</span></span>
<span class="line">  capabilities <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token string-literal"><span class="token string">&quot;create&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;read&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;update&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;delete&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;list&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;sudo&quot;</span></span> <span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token constant">EOF</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="인증-생성" tabindex="-1"><a class="header-anchor" href="#인증-생성"><span>인증 생성</span></a></h2><h3 id="user-pass-생성" tabindex="-1"><a class="header-anchor" href="#user-pass-생성"><span>user/pass 생성</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">$ vault auth <span class="token builtin class-name">enable</span> userpass</span>
<span class="line"></span>
<span class="line">$ vault <span class="token function">write</span> auth/userpass/users/pki <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token assign-left variable">password</span><span class="token operator">=</span>pki <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token assign-left variable">policies</span><span class="token operator">=</span>pki</span>
<span class="line">    </span>
<span class="line">$ vault login <span class="token parameter variable">-method</span> userpass <span class="token assign-left variable">username</span><span class="token operator">=</span>pki <span class="token assign-left variable">password</span><span class="token operator">=</span>pki</span>
<span class="line">Success<span class="token operator">!</span> You are now authenticated. The token information displayed below</span>
<span class="line">is already stored <span class="token keyword">in</span> the token helper. You <span class="token keyword">do</span> NOT need to run <span class="token string">&quot;vault login&quot;</span></span>
<span class="line">again. Future Vault requests will automatically use this token.</span>
<span class="line"></span>
<span class="line">Key                    Value</span>
<span class="line">---                    -----</span>
<span class="line">token                  s.ldJApybiqGBmq3CuBAaqsKXZ</span>
<span class="line">token_accessor         Maek0IMLkOLmFVkpG4DoGUdY</span>
<span class="line">token_duration         768h</span>
<span class="line">token_renewable        <span class="token boolean">true</span></span>
<span class="line">token_policies         <span class="token punctuation">[</span><span class="token string">&quot;pki&quot;</span><span class="token punctuation">]</span></span>
<span class="line">identity_policies      <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line">policies               <span class="token punctuation">[</span><span class="token string">&quot;pki&quot;</span><span class="token punctuation">]</span></span>
<span class="line">token_meta_username    db</span>
<span class="line"></span>
<span class="line">$ <span class="token builtin class-name">export</span> <span class="token assign-left variable">VAULT_TOKEN</span><span class="token operator">=</span>s.7mN7t6hd1a1m97j2ptytfCqf</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="approle-생성" tabindex="-1"><a class="header-anchor" href="#approle-생성"><span>approle 생성</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">$ vault auth <span class="token builtin class-name">enable</span> approle</span>
<span class="line">Success<span class="token operator">!</span> Enabled approle auth method at: approle/</span>
<span class="line"></span>
<span class="line">$ vault <span class="token function">write</span> auth/approle/role/pki-agent <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token assign-left variable">secret_id_ttl</span><span class="token operator">=</span>120m <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token assign-left variable">token_ttl</span><span class="token operator">=</span>60m <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token assign-left variable">token_max_tll</span><span class="token operator">=</span>120m <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token assign-left variable">policies</span><span class="token operator">=</span><span class="token string">&quot;pki&quot;</span></span>
<span class="line">Success<span class="token operator">!</span> Data written to: auth/approle/role/pki-agent</span>
<span class="line"></span>
<span class="line">$ vault <span class="token builtin class-name">read</span> auth/approle/role/pki-agent/role-id</span>
<span class="line">Key        Value</span>
<span class="line">---        -----</span>
<span class="line">role_id    dfa2a248-1e1b-e2e9-200c-69c63b9ca447</span>
<span class="line"></span>
<span class="line">$ vault <span class="token function">write</span> <span class="token parameter variable">-f</span> auth/approle/role/pki-agent/secret-id</span>
<span class="line">Key                   Value</span>
<span class="line">---                   -----</span>
<span class="line">secret_id             864360c1-c79f-ea7c-727b-7752361fe1ba</span>
<span class="line">secret_id_accessor    3cc068e2-a172-2bb1-c097-b777c3525ba6</span>
<span class="line"></span>
<span class="line"><span class="token comment">#Tip</span></span>
<span class="line">$ <span class="token builtin class-name">echo</span> <span class="token variable"><span class="token variable">$(</span>vault <span class="token function">write</span> <span class="token parameter variable">-f</span> <span class="token parameter variable">-format</span><span class="token operator">=</span>json auth/approle/role/pki-agent/secret-id <span class="token operator">|</span> jq <span class="token parameter variable">-r</span> <span class="token string">&#39;.data.secret_id&#39;</span><span class="token variable">)</span></span> <span class="token operator">&gt;</span> secretid</span>
<span class="line"></span>
<span class="line">$ vault <span class="token function">write</span> auth/approle/login <span class="token assign-left variable">role_id</span><span class="token operator">=</span>dfa2a248-1e1b-e2e9-200c-69c63b9ca447 <span class="token assign-left variable">secret_id</span><span class="token operator">=</span>864360c1-c79f-ea7c-727b-7752361fe1ba</span>
<span class="line">Key                     Value</span>
<span class="line">---                     -----</span>
<span class="line">token                   s.uGtTFun8zSNcczBrtEJrSx5y</span>
<span class="line">token_accessor          eLjxnLYqfVTWFbOCXDVqwb3S</span>
<span class="line">token_duration          1h</span>
<span class="line">token_renewable         <span class="token boolean">true</span></span>
<span class="line">token_policies          <span class="token punctuation">[</span><span class="token string">&quot;default&quot;</span> <span class="token string">&quot;pki&quot;</span><span class="token punctuation">]</span></span>
<span class="line">identity_policies       <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line">policies                <span class="token punctuation">[</span><span class="token string">&quot;default&quot;</span> <span class="token string">&quot;pki&quot;</span><span class="token punctuation">]</span></span>
<span class="line">token_meta_role_name    pki-agent</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="pki-engin" tabindex="-1"><a class="header-anchor" href="#pki-engin"><span>PKI Engin</span></a></h2><h3 id="_1단계-root-ca-생성-없는-경우" tabindex="-1"><a class="header-anchor" href="#_1단계-root-ca-생성-없는-경우"><span>1단계 : Root CA 생성 (없는 경우)</span></a></h3><ul><li><p>pki secret engine 활성화</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">$ vault secrets <span class="token builtin class-name">enable</span> <span class="token parameter variable">-path</span> pki pki</span>
<span class="line">Success<span class="token operator">!</span> Enabled the database secrets engine at: pki/</span>
<span class="line"></span></code></pre></div></li><li><p>최대 TTL (Time-to-Live)이 87600 시간(10년) 인 인증서를 발급</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">$ vault secrets tune -max-lease-ttl 87600h pki</span>
<span class="line">Success<span class="token operator">!</span> Tuned the secrets engine at: pki/</span>
<span class="line"></span></code></pre></div></li><li><p>루트 인증서 생성 <code>CA_cert.crt</code></p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">$ vault <span class="token function">write</span> <span class="token parameter variable">-f</span> <span class="token parameter variable">-field</span><span class="token operator">=</span>certificate pki/root/generate/internal <span class="token punctuation">\\</span></span>
<span class="line">        <span class="token assign-left variable">common_name</span><span class="token operator">=</span><span class="token string">&quot;example.com&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">        <span class="token assign-left variable">ttl</span><span class="token operator">=</span>87600h <span class="token operator">&gt;</span> CA_cert.crt</span>
<span class="line"></span></code></pre></div><p>이렇게하면 새로운 자체 서명 된 CA 인증서와 개인 키가 생성됩니다. Vault는 임대 기간 (TTL)이 끝나면 생성 된 루트를 자동으로 취소합니다. CA 인증서는 자체 인증서 해지 목록 (CRL)에 서명합니다.</p></li><li><p>CA 와 CRL URL 구성</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">$ vault <span class="token function">write</span> pki/config/urls <span class="token punctuation">\\</span></span>
<span class="line">        <span class="token assign-left variable">issuing_certificates</span><span class="token operator">=</span><span class="token string">&quot;http://172.28.128.11:8200/v1/pki/ca&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">        <span class="token assign-left variable">crl_distribution_points</span><span class="token operator">=</span><span class="token string">&quot;http://172.28.128.11:8200/v1/pki/crl&quot;</span></span>
<span class="line"></span></code></pre></div></li></ul><h3 id="_2단계-intermediate-ca-구성" tabindex="-1"><a class="header-anchor" href="#_2단계-intermediate-ca-구성"><span>2단계 : Intermediate CA 구성</span></a></h3><p>이전 단계에서 생성한 Root CA를 사용하여 Intermediate CA 생성</p><ul><li><p>pki secret engine 활성화</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">$ vault secrets <span class="token builtin class-name">enable</span> <span class="token parameter variable">-path</span><span class="token operator">=</span>pki_int pki</span>
<span class="line">Success<span class="token operator">!</span> Enabled the pki secrets engine at: pki_int/</span>
<span class="line"></span></code></pre></div></li><li><p>최대 TTL (Time-to-Live)이 43800 시간(5년) 인 인증서를 발급 하도록 비밀 엔진을 조정</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">$ vault secrets tune -max-lease-ttl<span class="token operator">=</span>43800h pki_int</span>
<span class="line">Success<span class="token operator">!</span> Tuned the secrets engine at: pki_int/</span>
<span class="line"></span></code></pre></div></li><li><p>Intermediate CSR 생성 &lt;pki_intermediate.csr&gt;</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">$ vault <span class="token function">write</span> <span class="token parameter variable">-format</span><span class="token operator">=</span>json pki_int/intermediate/generate/internal <span class="token punctuation">\\</span></span>
<span class="line">        <span class="token assign-left variable">common_name</span><span class="token operator">=</span><span class="token string">&quot;example.com Intermediate Authority&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">        <span class="token operator">|</span> jq <span class="token parameter variable">-r</span> <span class="token string">&#39;.data.csr&#39;</span> <span class="token operator">&gt;</span> pki_intermediate.csr</span>
<span class="line"></span></code></pre></div></li><li><p>Root 인증서로 Intermediate 인증서에 서명 &lt;intermediate.cert.pem&gt;</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">$ vault <span class="token function">write</span> <span class="token parameter variable">-format</span><span class="token operator">=</span>json pki/root/sign-intermediate <span class="token assign-left variable">csr</span><span class="token operator">=</span>@pki_intermediate.csr <span class="token punctuation">\\</span></span>
<span class="line">        <span class="token assign-left variable">format</span><span class="token operator">=</span>pem_bundle <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token string">&quot;43800h&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">        <span class="token operator">|</span> jq <span class="token parameter variable">-r</span> <span class="token string">&#39;.data.certificate&#39;</span> <span class="token operator">&gt;</span> intermediate.cert.pem</span>
<span class="line"></span></code></pre></div></li><li><p>CSR이 서명되고 Root CA가 인증서를 반환하면 다시 Vault에서 가져옴</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">$ vault <span class="token function">write</span> <span class="token parameter variable">-f</span> pki_int/intermediate/set-signed <span class="token assign-left variable">certificate</span><span class="token operator">=</span>@intermediate.cert.pem</span>
<span class="line">Success<span class="token operator">!</span> Data written to: pki_int/intermediate/set-signed</span>
<span class="line"></span></code></pre></div></li><li><p>URL 구성</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">$ vault <span class="token function">write</span> pki_int/config/urls <span class="token punctuation">\\</span></span>
<span class="line">        <span class="token assign-left variable">issuing_certificates</span><span class="token operator">=</span><span class="token string">&quot;http://172.28.128.11:8200/v1/pki_int/ca&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">        <span class="token assign-left variable">crl_distribution_points</span><span class="token operator">=</span><span class="token string">&quot;http://172.28.128.11:8200/v1/pki_int/crl&quot;</span></span>
<span class="line"></span></code></pre></div></li></ul><h3 id="_3단계-role-생성" tabindex="-1"><a class="header-anchor" href="#_3단계-role-생성"><span>3단계 : Role 생성</span></a></h3><p>Role은 자격 증명을 생성하는데 사용되는 정책에 매핑되는 논리적 이름으로, 구성 매개변수가 인증서 일반 이름, 대체 이름, 유효한 키 사용등을 제어 가능</p><h5 id="주요-매개-변수" tabindex="-1"><a class="header-anchor" href="#주요-매개-변수"><span>[주요 매개 변수]</span></a></h5><table><thead><tr><th style="text-align:left;">Param</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>allowed_domains</code></td><td style="text-align:left;">역할의 도메인을 지정합니다 (<code>allow_bare_domains</code> 및<code>allow-subdomains</code> 옵션과 함께 사용).</td></tr><tr><td style="text-align:left;"><code>allow_bare_domains</code></td><td style="text-align:left;">클라이언트가 실제 도메인 자체의 값과 일치하는 인증서를 요청할 수 있는지 여부를 지정합니다.</td></tr><tr><td style="text-align:left;"><code>allow_subdomains</code></td><td style="text-align:left;">클라이언트가 다른 역할 옵션에서 허용하는 CN의 하위 도메인 인 CN을 사용하여 인증서를 요청할 수 있는지 여부를 지정합니다 (참고 : 여기에는 와일드 카드 하위 도메인이 포함됨).</td></tr><tr><td style="text-align:left;"><code>allow_glob_domains</code></td><td style="text-align:left;">allowed_domains에 지정된 이름에 glob 패턴 (예 : ftp * .example.com)을 포함 할 수 있습니다.</td></tr></tbody></table><p>여기서는 example-dot-com 이라는 Role 을 생성</p><ul><li><p>하위 도메인을 허용하는 <code>example-dot.com</code> Role 생성</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">$ vault <span class="token function">write</span> pki_int/roles/example-dot-com <span class="token punctuation">\\</span></span>
<span class="line">        <span class="token assign-left variable">allowed_domains</span><span class="token operator">=</span><span class="token string">&quot;example.com&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">        <span class="token assign-left variable">allow_subdomains</span><span class="token operator">=</span>true <span class="token punctuation">\\</span></span>
<span class="line">        <span class="token assign-left variable">max_ttl</span><span class="token operator">=</span><span class="token string">&quot;720h&quot;</span></span>
<span class="line">Success<span class="token operator">!</span> Data written to: pki_int/roles/example-dot-com</span>
<span class="line"></span></code></pre></div></li></ul><h3 id="_4단계-인증서-요청" tabindex="-1"><a class="header-anchor" href="#_4단계-인증서-요청"><span>4단계 : 인증서 요청</span></a></h3><blockquote><p>Vault의 단기 비밀관리의 철학은 인증서 수명을 짧게 유지하는 것입니다.</p></blockquote><ul><li><p><code>example-dot-com</code> Role에 따라 <code>test.example.com</code> 도메인에 대한 새 인증서 요청<br> (응답에는 PEM으로 인코딩 된 개인 키, 키 유형 및 인증서 일련 번호가 포함됩니다.)</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">$ vault <span class="token function">write</span> pki_int/issue/example-dot-com <span class="token assign-left variable">common_name</span><span class="token operator">=</span><span class="token string">&quot;test.example.com&quot;</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token string">&quot;2m&quot;</span> <span class="token comment">#format=&quot;pem_bundle&quot;</span></span>
<span class="line"><span class="token comment"># vault write pki_int/issue/example-dot-com common_name=&quot;tfe.example.com&quot; ttl=&quot;700h&quot; </span></span>
<span class="line"></span>
<span class="line">Key                 Value</span>
<span class="line">---                 -----</span>
<span class="line">certificate         -----BEGIN CERTIFICATE-----</span>
<span class="line">MIIDwzCCAqugAwIBAgIUTQABMCAsXjG6ExFTX8201xKVH4IwDQYJKoZIhvcNAQEL</span>
<span class="line">BQAwGjEYMBYGA1UEAxMPd3d3LmV4YW1wbGUuY29tMB4XDTE4MDcyNDIxMTMxOVoX</span>
<span class="line">             <span class="token punctuation">..</span>.</span>
<span class="line"></span>
<span class="line">-----END CERTIFICATE-----</span>
<span class="line">issuing_ca          -----BEGIN CERTIFICATE-----</span>
<span class="line">MIIDQTCCAimgAwIBAgIUbMYp39mdj7dKX033ZjK18rx05x8wDQYJKoZIhvcNAQEL</span>
<span class="line">             <span class="token punctuation">..</span>.</span>
<span class="line"></span>
<span class="line">-----END CERTIFICATE-----</span>
<span class="line">private_key         -----BEGIN RSA PRIVATE KEY-----</span>
<span class="line">MIIEowIBAAKCAQEAte1fqy2Ekj+EFqKV6N5QJlBgMo/U4IIxwLZI6a87yAC/rDhm</span>
<span class="line">W58liadXrwjzRgWeqVOoCRr/B5JnRLbyIKBVp6MMFwZVkynEPzDmy0ynuomSfJkM</span>
<span class="line">             <span class="token punctuation">..</span>.</span>
<span class="line"></span>
<span class="line">-----END RSA PRIVATE KEY-----</span>
<span class="line">private_key_type    rsa</span>
<span class="line">serial_number       4d:00:01:30:20:2c:5e:31:ba:13:11:53:5f:cd:b4:d7:12:95:1f:82</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="vault-agent" tabindex="-1"><a class="header-anchor" href="#vault-agent"><span>Vault Agent</span></a></h2><p>생성되는 PKI인증서를 자동으로 갱신하기 위해 Vault Agent 구성</p><p>secretid 생성의 예</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token builtin class-name">echo</span> <span class="token variable"><span class="token variable">$(</span>vault <span class="token function">write</span> <span class="token parameter variable">-f</span> <span class="token parameter variable">-format</span><span class="token operator">=</span>json auth/approle/role/pki-agent/secret-id <span class="token operator">|</span> jq <span class="token parameter variable">-r</span> <span class="token string">&#39;.data.secret_id&#39;</span><span class="token variable">)</span></span> <span class="token operator">&gt;</span> secretid</span>
<span class="line"></span></code></pre></div><p>[vault_agent.hcl]</p><div class="language-ruby line-numbers-mode" data-highlighter="prismjs" data-ext="rb" data-title="rb"><pre class="language-ruby"><code><span class="line">pid_file <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;/root/vault_agent/pidfile&quot;</span></span></span>
<span class="line"></span>
<span class="line">auto_auth <span class="token punctuation">{</span></span>
<span class="line">  method  <span class="token punctuation">{</span></span>
<span class="line">    type <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;approle&quot;</span></span></span>
<span class="line">    config <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">      role_id_file_path <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;/root/vault_agent/roleid&quot;</span></span></span>
<span class="line">      secret_id_file_path <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;/root/vault_agent/secretid&quot;</span></span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  sink <span class="token punctuation">{</span></span>
<span class="line">    type <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;file&quot;</span></span></span>
<span class="line">    config <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">      path <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;/tmp/vault_agent&quot;</span></span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">vault <span class="token punctuation">{</span></span>
<span class="line">  address <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;http://172.28.128.11:8200&quot;</span></span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">template <span class="token punctuation">{</span></span>
<span class="line">  source      <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;/root/vault_agent/cert.tpl&quot;</span></span></span>
<span class="line">  destination <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;/root/cert/my-app.crt&quot;</span></span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">template <span class="token punctuation">{</span></span>
<span class="line">  source      <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;/root/vault_agent/ca.tpl&quot;</span></span></span>
<span class="line">  destination <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;/root/cert/ca.crt&quot;</span></span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">template <span class="token punctuation">{</span></span>
<span class="line">  source      <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;/root/vault_agent/key.tpl&quot;</span></span></span>
<span class="line">  destination <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;/root/cert/my-app.key&quot;</span></span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>[인증 정보]</p><p><code>role_id_file_path</code>, <code>secret_id_file_path</code>에는 앞서 생성한 approle의 role id와 secret id를 대상 파일에 저장</p><p>[template - default pem]</p><ul><li><p>cert.tpl</p><div class="language-ruby" data-highlighter="prismjs" data-ext="rb" data-title="rb"><pre class="language-ruby"><code><span class="line"><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token operator">-</span> <span class="token operator">/</span><span class="token operator">*</span> <span class="token operator">/</span>tmp<span class="token operator">/</span>ca<span class="token punctuation">.</span>tpl <span class="token operator">*</span><span class="token operator">/</span> <span class="token operator">-</span><span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">{</span><span class="token punctuation">{</span> with secret <span class="token string-literal"><span class="token string">&quot;pki_int/issue/example-dot-com&quot;</span></span> <span class="token string-literal"><span class="token string">&quot;common_name=test.example.com&quot;</span></span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token punctuation">.</span>Data<span class="token punctuation">.</span>issuing_ca <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token keyword">end</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div></li><li><p>ca.tpl</p><div class="language-ruby" data-highlighter="prismjs" data-ext="rb" data-title="rb"><pre class="language-ruby"><code><span class="line"><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token operator">-</span> <span class="token operator">/</span><span class="token operator">*</span> <span class="token operator">/</span>tmp<span class="token operator">/</span>cert<span class="token punctuation">.</span>tpl <span class="token operator">*</span><span class="token operator">/</span> <span class="token operator">-</span><span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">{</span><span class="token punctuation">{</span> with secret <span class="token string-literal"><span class="token string">&quot;pki_int/issue/example-dot-com&quot;</span></span> <span class="token string-literal"><span class="token string">&quot;common_name=test.example.com&quot;</span></span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token punctuation">.</span>Data<span class="token punctuation">.</span>certificate <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token keyword">end</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div></li><li><p>Key.tpl</p><div class="language-ruby" data-highlighter="prismjs" data-ext="rb" data-title="rb"><pre class="language-ruby"><code><span class="line"><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token operator">-</span> <span class="token operator">/</span><span class="token operator">*</span> <span class="token operator">/</span>tmp<span class="token operator">/</span>key<span class="token punctuation">.</span>tpl <span class="token operator">*</span><span class="token operator">/</span> <span class="token operator">-</span><span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">{</span><span class="token punctuation">{</span> with secret <span class="token string-literal"><span class="token string">&quot;pki_int/issue/example-dot-com&quot;</span></span> <span class="token string-literal"><span class="token string">&quot;common_name=test.example.com&quot;</span></span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token punctuation">.</span>Data<span class="token punctuation">.</span>private_key <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token keyword">end</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div></li></ul><h3 id="실행은-스크립트-혹은-스크립트를-서비스로-구성" tabindex="-1"><a class="header-anchor" href="#실행은-스크립트-혹은-스크립트를-서비스로-구성"><span>실행은 스크립트 혹은 스크립트를 서비스로 구성</span></a></h3><ul><li><p>script (e.g. <a href="http://start.sh" target="_blank" rel="noopener noreferrer">start.sh</a>)</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">vault agent <span class="token parameter variable">-config</span><span class="token operator">=</span>/root/vault_agent/vault_agent.hcl -log-level<span class="token operator">=</span>debug</span>
<span class="line"></span></code></pre></div></li><li><p>service (e.g. vault-agent.service)</p><div class="language-properties line-numbers-mode" data-highlighter="prismjs" data-ext="properties" data-title="properties"><pre class="language-properties"><code><span class="line">[Unit]</span>
<span class="line"><span class="token key attr-name">Description</span><span class="token punctuation">=</span><span class="token value attr-value">Vault Service Discovery Agent</span></span>
<span class="line"><span class="token key attr-name">Documentation</span><span class="token punctuation">=</span><span class="token value attr-value">https://www.vaultproject.io/</span></span>
<span class="line"><span class="token key attr-name">After</span><span class="token punctuation">=</span><span class="token value attr-value">network-online.target</span></span>
<span class="line"><span class="token key attr-name">Wants</span><span class="token punctuation">=</span><span class="token value attr-value">network-online.target</span></span>
<span class="line"></span>
<span class="line">[Service]</span>
<span class="line"><span class="token key attr-name">Type</span><span class="token punctuation">=</span><span class="token value attr-value">simple</span></span>
<span class="line"><span class="token key attr-name">User</span><span class="token punctuation">=</span><span class="token value attr-value">vault</span></span>
<span class="line"><span class="token key attr-name">Group</span><span class="token punctuation">=</span><span class="token value attr-value">vault</span></span>
<span class="line"><span class="token key attr-name">ExecStart</span><span class="token punctuation">=</span><span class="token value attr-value">/usr/local/bin/vault agent -config=/root/vault_agent/vault_agent.hcl</span></span>
<span class="line"></span>
<span class="line"><span class="token key attr-name">ExecReload</span><span class="token punctuation">=</span><span class="token value attr-value">/bin/kill -HUP $MAINPID</span></span>
<span class="line"><span class="token key attr-name">KillSignal</span><span class="token punctuation">=</span><span class="token value attr-value">SIGINT</span></span>
<span class="line"><span class="token key attr-name">TimeoutStopSec</span><span class="token punctuation">=</span><span class="token value attr-value">5</span></span>
<span class="line"><span class="token key attr-name">Restart</span><span class="token punctuation">=</span><span class="token value attr-value">on-failure</span></span>
<span class="line"><span class="token key attr-name">SyslogIdentifier</span><span class="token punctuation">=</span><span class="token value attr-value">vault</span></span>
<span class="line"></span>
<span class="line">[Install]</span>
<span class="line"><span class="token key attr-name">WantedBy</span><span class="token punctuation">=</span><span class="token value attr-value">multi-user.target</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="appendix" tabindex="-1"><a class="header-anchor" href="#appendix"><span>Appendix</span></a></h2><h3 id="pki-관리" tabindex="-1"><a class="header-anchor" href="#pki-관리"><span>PKI 관리</span></a></h3><ul><li><p>pki revoke</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">$ vault <span class="token function">write</span> pki_int/revoke <span class="token assign-left variable">serial_number</span><span class="token operator">=</span><span class="token string">&quot;56:ac:c0:f3:b4:1e:87:69:ec:dd:7d:27:54:f6:1c:14:91:3d:11:2d&quot;</span></span>
<span class="line">Key                        Value</span>
<span class="line">---                        -----</span>
<span class="line">revocation_time            <span class="token number">1611557908</span></span>
<span class="line">revocation_time_rfc3339    <span class="token number">2021</span>-01-25T06:58:28.592511981Z</span>
<span class="line"></span></code></pre></div></li><li><p>pki rotate</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">$ vault <span class="token builtin class-name">read</span> pki_int/crl/rotate</span>
<span class="line">Key        Value</span>
<span class="line">---        -----</span>
<span class="line">success    <span class="token boolean">true</span></span>
<span class="line"></span></code></pre></div></li></ul><h3 id="nginx-활용" tabindex="-1"><a class="header-anchor" href="#nginx-활용"><span>Nginx 활용</span></a></h3><p>테스트 대상 시스템에 CA, Intermediated 인증서를 신뢰할 수 있는 인증서로 등록</p><p>[vault_agent.hcl]</p><div class="language-ruby line-numbers-mode" data-highlighter="prismjs" data-ext="rb" data-title="rb"><pre class="language-ruby"><code><span class="line">pid_file <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;/root/vault_agent/pidfile&quot;</span></span></span>
<span class="line"></span>
<span class="line">auto_auth <span class="token punctuation">{</span></span>
<span class="line">  method  <span class="token punctuation">{</span></span>
<span class="line">    type <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;approle&quot;</span></span></span>
<span class="line">    config <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">      role_id_file_path <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;/root/vault_agent/roleid&quot;</span></span></span>
<span class="line">      secret_id_file_path <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;/root/vault_agent/secretid&quot;</span></span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  sink <span class="token punctuation">{</span></span>
<span class="line">    type <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;file&quot;</span></span></span>
<span class="line">    config <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">      path <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;/tmp/vault_agent&quot;</span></span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">vault <span class="token punctuation">{</span></span>
<span class="line">  address <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;http://172.28.128.11:8200&quot;</span></span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">template <span class="token punctuation">{</span></span>
<span class="line">  source      <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;/root/vault_agent/cert.tpl&quot;</span></span></span>
<span class="line">  destination <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;/root/cert/test.cert.pem&quot;</span></span></span>
<span class="line">  perms       <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;0600&quot;</span></span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">template <span class="token punctuation">{</span></span>
<span class="line">  source      <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;/root/vault_agent/key.tpl&quot;</span></span></span>
<span class="line">  destination <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;/root/cert/test.key.pem&quot;</span></span></span>
<span class="line">  perms       <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;0600&quot;</span></span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>[template - pem_bundle]</p><ul><li><p>cert.tpl</p><div class="language-ruby" data-highlighter="prismjs" data-ext="rb" data-title="rb"><pre class="language-ruby"><code><span class="line"><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token operator">-</span> <span class="token operator">/</span><span class="token operator">*</span> <span class="token operator">/</span>tmp<span class="token operator">/</span>cert<span class="token punctuation">.</span>tpl <span class="token operator">*</span><span class="token operator">/</span> <span class="token operator">-</span><span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">{</span><span class="token punctuation">{</span> with secret <span class="token string-literal"><span class="token string">&quot;pki_int/issue/example-dot-com&quot;</span></span> <span class="token string-literal"><span class="token string">&quot;common_name=test.example.com&quot;</span></span>  <span class="token string-literal"><span class="token string">&quot;ttl=2m&quot;</span></span><span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token punctuation">.</span>Data<span class="token punctuation">.</span>certificate <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token punctuation">.</span>Data<span class="token punctuation">.</span>issuing_ca <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token keyword">end</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div></li><li><p>Key.tpl</p><div class="language-ruby" data-highlighter="prismjs" data-ext="rb" data-title="rb"><pre class="language-ruby"><code><span class="line"><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token operator">-</span> <span class="token operator">/</span><span class="token operator">*</span> <span class="token operator">/</span>tmp<span class="token operator">/</span>key<span class="token punctuation">.</span>tpl <span class="token operator">*</span><span class="token operator">/</span> <span class="token operator">-</span><span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">{</span><span class="token punctuation">{</span> with secret <span class="token string-literal"><span class="token string">&quot;pki_int/issue/example-dot-com&quot;</span></span> <span class="token string-literal"><span class="token string">&quot;common_name=test.example.com&quot;</span></span> <span class="token string-literal"><span class="token string">&quot;ttl=2m&quot;</span></span><span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token punctuation">.</span>Data<span class="token punctuation">.</span>private_key <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token keyword">end</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div></li></ul><p>[/etc/nginx/sites-enabled/default]</p><blockquote><p>rotation 되면 systemctl reload nginx</p></blockquote><div class="language-properties line-numbers-mode" data-highlighter="prismjs" data-ext="properties" data-title="properties"><pre class="language-properties"><code><span class="line"><span class="token key attr-name">server</span> <span class="token value attr-value">{</span></span>
<span class="line"><span class="token key attr-name">       listen</span> <span class="token value attr-value">80;</span></span>
<span class="line"><span class="token key attr-name">       server_name</span> <span class="token value attr-value">text.example.com;</span></span>
<span class="line"><span class="token key attr-name">       return</span> <span class="token value attr-value">301 HTTPS://$server_name$request_uri;</span></span>
<span class="line">}</span>
<span class="line"></span>
<span class="line"><span class="token key attr-name">server</span> <span class="token value attr-value">{</span></span>
<span class="line"><span class="token key attr-name">	listen</span> <span class="token value attr-value">443 ssl default_server;</span></span>
<span class="line"><span class="token key attr-name">	listen</span> <span class="token value attr-value">[::]:443 ssl default_server;</span></span>
<span class="line"></span>
<span class="line"><span class="token key attr-name">  ssl</span> <span class="token value attr-value">on;</span></span>
<span class="line"><span class="token key attr-name">  server_name</span> <span class="token value attr-value">test.example.com;</span></span>
<span class="line"><span class="token key attr-name">  ssl_certificate</span> <span class="token value attr-value">/root/cert/test.cert.pem;</span></span>
<span class="line"><span class="token key attr-name">  ssl_certificate_key</span> <span class="token value attr-value">/root/cert/test.key.pem;</span></span>
<span class="line"></span>
<span class="line"><span class="token key attr-name">	root</span> <span class="token value attr-value">/var/www/html;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">	# Add index.php to the list if you are using PHP</span></span>
<span class="line"><span class="token key attr-name">	index</span> <span class="token value attr-value">index.html index.htm index.nginx-debian.html;</span></span>
<span class="line"></span>
<span class="line"><span class="token key attr-name">	server_name</span> <span class="token value attr-value">_;</span></span>
<span class="line"></span>
<span class="line"><span class="token key attr-name">	location</span> <span class="token value attr-value">/ {</span></span>
<span class="line"><span class="token comment">		# First attempt to serve request as file, then</span></span>
<span class="line"><span class="token comment">		# as directory, then fall back to displaying a 404.</span></span>
<span class="line"><span class="token key attr-name">		try_files</span> <span class="token value attr-value">$uri $uri/ =404;</span></span>
<span class="line">	}</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,52),l=[p];function i(c,o){return a(),n("div",null,l)}const d=s(t,[["render",i],["__file","pki-nginx.html.vue"]]),k=JSON.parse(`{"path":"/04-HashiCorp/06-Vault/02-Secret_Engine/pki-nginx.html","title":"PKI - nginx 샘플","lang":"ko-KR","frontmatter":{"description":"Vault의 PKI 인증서","tag":["vault","PKI"],"head":[["meta",{"property":"og:url","content":"https://docmoa.github.io/04-HashiCorp/06-Vault/02-Secret_Engine/pki-nginx.html"}],["meta",{"property":"og:site_name","content":"docmoa"}],["meta",{"property":"og:title","content":"PKI - nginx 샘플"}],["meta",{"property":"og:description","content":"Vault의 PKI 인증서"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2023-09-18T13:12:54.000Z"}],["meta",{"property":"article:tag","content":"vault"}],["meta",{"property":"article:tag","content":"PKI"}],["meta",{"property":"article:modified_time","content":"2023-09-18T13:12:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"PKI - nginx 샘플\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-18T13:12:54.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Vault 구성","slug":"vault-구성","link":"#vault-구성","children":[]},{"level":2,"title":"인증 생성","slug":"인증-생성","link":"#인증-생성","children":[{"level":3,"title":"user/pass 생성","slug":"user-pass-생성","link":"#user-pass-생성","children":[]},{"level":3,"title":"approle 생성","slug":"approle-생성","link":"#approle-생성","children":[]}]},{"level":2,"title":"PKI Engin","slug":"pki-engin","link":"#pki-engin","children":[{"level":3,"title":"1단계 : Root CA 생성 (없는 경우)","slug":"_1단계-root-ca-생성-없는-경우","link":"#_1단계-root-ca-생성-없는-경우","children":[]},{"level":3,"title":"2단계 : Intermediate CA 구성","slug":"_2단계-intermediate-ca-구성","link":"#_2단계-intermediate-ca-구성","children":[]},{"level":3,"title":"3단계 : Role 생성","slug":"_3단계-role-생성","link":"#_3단계-role-생성","children":[]},{"level":3,"title":"4단계 : 인증서 요청","slug":"_4단계-인증서-요청","link":"#_4단계-인증서-요청","children":[]}]},{"level":2,"title":"Vault Agent","slug":"vault-agent","link":"#vault-agent","children":[{"level":3,"title":"실행은 스크립트 혹은 스크립트를 서비스로 구성","slug":"실행은-스크립트-혹은-스크립트를-서비스로-구성","link":"#실행은-스크립트-혹은-스크립트를-서비스로-구성","children":[]}]},{"level":2,"title":"Appendix","slug":"appendix","link":"#appendix","children":[{"level":3,"title":"PKI 관리","slug":"pki-관리","link":"#pki-관리","children":[]},{"level":3,"title":"Nginx 활용","slug":"nginx-활용","link":"#nginx-활용","children":[]}]}],"git":{"createdTime":1628563561000,"updatedTime":1695042774000,"contributors":[{"name":"Administrator","email":"admin@example.com","commits":1},{"name":"Great-Stone","email":"hahohh@gmail.com","commits":1}]},"readingTime":{"minutes":16,"words":960},"filePathRelative":"04-HashiCorp/06-Vault/02-Secret_Engine/pki-nginx.md","localizedDate":"2021년 8월 10일","excerpt":"\\n<blockquote>\\n<p><a href=\\"https://learn.hashicorp.com/tutorials/vault/pki-engine\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://learn.hashicorp.com/tutorials/vault/pki-engine</a></p>\\n</blockquote>\\n<h2>Vault 구성</h2>\\n<p>환경 변수</p>\\n<div class=\\"language-bash\\" data-highlighter=\\"prismjs\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"line\\"><span class=\\"token builtin class-name\\">export</span> <span class=\\"token assign-left variable\\">VAULT_SKIP_VERIFY</span><span class=\\"token operator\\">=</span>True</span>\\n<span class=\\"line\\"><span class=\\"token builtin class-name\\">export</span> <span class=\\"token assign-left variable\\">VAULT_ADDR</span><span class=\\"token operator\\">=</span><span class=\\"token string\\">'http://172.28.128.11:8200'</span></span>\\n<span class=\\"line\\"><span class=\\"token builtin class-name\\">export</span> <span class=\\"token assign-left variable\\">VAULT_TOKEN</span><span class=\\"token operator\\">=</span>s.8YXFI825TZxnwLtYHsLc9Fnb</span>\\n<span class=\\"line\\"></span></code></pre></div>"}`);export{d as comp,k as data};
