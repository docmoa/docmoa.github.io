import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as n,c as a,h as e}from"./app-DVMlqOhY.js";const t={},p=e(`<h1 id="ingress-serviceroute" tabindex="-1"><a class="header-anchor" href="#ingress-serviceroute"><span>Ingress &amp; ServiceRoute</span></a></h1><p>Ingress gateway가 8080을 Listen하도록 구성되어있으면, 아래와 같이 해당 포트의 요청을 받을 대상 서비스를 지정합니다.</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="line"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> consul.hashicorp.com/v1alpha1</span>
<span class="line"><span class="token key atrule">kind</span><span class="token punctuation">:</span> IngressGateway</span>
<span class="line"><span class="token key atrule">metadata</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>gateway</span>
<span class="line"><span class="token key atrule">spec</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">listeners</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token punctuation">-</span> <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8080</span></span>
<span class="line">      <span class="token key atrule">protocol</span><span class="token punctuation">:</span> http</span>
<span class="line">      <span class="token key atrule">services</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> hashicups</span>
<span class="line">          <span class="token key atrule">hosts</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>여기서 지정된 <code>hashicups</code>는 가상의 서비스 입니다. 해당 서비스에 대한 Service Router 설정을 다음과 같이 구성합니다.</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="line"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> consul.hashicorp.com/v1alpha1</span>
<span class="line"><span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceRouter</span>
<span class="line"><span class="token key atrule">metadata</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">name</span><span class="token punctuation">:</span> hashicups</span>
<span class="line"><span class="token key atrule">spec</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">routes</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token punctuation">-</span> <span class="token key atrule">match</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token key atrule">http</span><span class="token punctuation">:</span></span>
<span class="line">          <span class="token key atrule">pathPrefix</span><span class="token punctuation">:</span> <span class="token string">&#39;/api&#39;</span></span>
<span class="line">      <span class="token key atrule">destination</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token key atrule">service</span><span class="token punctuation">:</span> public<span class="token punctuation">-</span>api</span>
<span class="line">    <span class="token punctuation">-</span> <span class="token key atrule">match</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token key atrule">http</span><span class="token punctuation">:</span></span>
<span class="line">          <span class="token key atrule">pathPrefix</span><span class="token punctuation">:</span> <span class="token string">&#39;/&#39;</span></span>
<span class="line">      <span class="token key atrule">destination</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token key atrule">service</span><span class="token punctuation">:</span> frontend</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),l=[p];function c(i,o){return n(),a("div",null,l)}const k=s(t,[["render",c],["__file","ingress-and-serviceroute.html.vue"]]),d=JSON.parse('{"path":"/04-HashiCorp/04-Consul/06-on_Kubernetes/annotation/ingress-and-serviceroute.html","title":"Ingress & ServiceRoute","lang":"ko-KR","frontmatter":{"description":"Consul Service Mesh on Kubernetes","tag":["Consul","ServiceMesh","K8s","Kubernetes","ingress"],"head":[["meta",{"property":"og:url","content":"https://docmoa.github.io/04-HashiCorp/04-Consul/06-on_Kubernetes/annotation/ingress-and-serviceroute.html"}],["meta",{"property":"og:site_name","content":"docmoa"}],["meta",{"property":"og:title","content":"Ingress & ServiceRoute"}],["meta",{"property":"og:description","content":"Consul Service Mesh on Kubernetes"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2023-09-18T13:12:54.000Z"}],["meta",{"property":"article:tag","content":"Consul"}],["meta",{"property":"article:tag","content":"ServiceMesh"}],["meta",{"property":"article:tag","content":"K8s"}],["meta",{"property":"article:tag","content":"Kubernetes"}],["meta",{"property":"article:tag","content":"ingress"}],["meta",{"property":"article:modified_time","content":"2023-09-18T13:12:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Ingress & ServiceRoute\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-18T13:12:54.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1645936869000,"updatedTime":1695042774000,"contributors":[{"name":"Administrator","email":"admin@example.com","commits":1},{"name":"Great-Stone","email":"hahohh@gmail.com","commits":1}]},"readingTime":{"minutes":1.13,"words":68},"filePathRelative":"04-HashiCorp/04-Consul/06-on_Kubernetes/annotation/ingress-and-serviceroute.md","localizedDate":"2022년 2월 27일","excerpt":"\\n<p>Ingress gateway가 8080을 Listen하도록 구성되어있으면, 아래와 같이 해당 포트의 요청을 받을 대상 서비스를 지정합니다.</p>\\n<div class=\\"language-yaml\\" data-highlighter=\\"prismjs\\" data-ext=\\"yml\\" data-title=\\"yml\\"><pre class=\\"language-yaml\\"><code><span class=\\"line\\"><span class=\\"token key atrule\\">apiVersion</span><span class=\\"token punctuation\\">:</span> consul.hashicorp.com/v1alpha1</span>\\n<span class=\\"line\\"><span class=\\"token key atrule\\">kind</span><span class=\\"token punctuation\\">:</span> IngressGateway</span>\\n<span class=\\"line\\"><span class=\\"token key atrule\\">metadata</span><span class=\\"token punctuation\\">:</span></span>\\n<span class=\\"line\\">  <span class=\\"token key atrule\\">name</span><span class=\\"token punctuation\\">:</span> ingress<span class=\\"token punctuation\\">-</span>gateway</span>\\n<span class=\\"line\\"><span class=\\"token key atrule\\">spec</span><span class=\\"token punctuation\\">:</span></span>\\n<span class=\\"line\\">  <span class=\\"token key atrule\\">listeners</span><span class=\\"token punctuation\\">:</span></span>\\n<span class=\\"line\\">    <span class=\\"token punctuation\\">-</span> <span class=\\"token key atrule\\">port</span><span class=\\"token punctuation\\">:</span> <span class=\\"token number\\">8080</span></span>\\n<span class=\\"line\\">      <span class=\\"token key atrule\\">protocol</span><span class=\\"token punctuation\\">:</span> http</span>\\n<span class=\\"line\\">      <span class=\\"token key atrule\\">services</span><span class=\\"token punctuation\\">:</span></span>\\n<span class=\\"line\\">        <span class=\\"token punctuation\\">-</span> <span class=\\"token key atrule\\">name</span><span class=\\"token punctuation\\">:</span> hashicups</span>\\n<span class=\\"line\\">          <span class=\\"token key atrule\\">hosts</span><span class=\\"token punctuation\\">:</span> <span class=\\"token punctuation\\">[</span><span class=\\"token string\\">\\"*\\"</span><span class=\\"token punctuation\\">]</span></span>\\n<span class=\\"line\\"></span></code></pre></div>"}');export{k as comp,d as data};
